<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="MacBook-Pro-2.local" failures="1" tests="1182" name="Surefire test" time="0.436" errors="0" timestamp="7 Sep 2025 16:37:41 GMT">
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.026"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.005"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ShiftrTest" name="runTestUnits" time="0.009"/>
  <testcase classname="love.disaster.j2j.core.SortrTest" name="runTestCases" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.SortrTest" name="testDoesNotBlowUpOnUnmodifiableArray" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="exceptionTestLMapIsListErasure" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="exceptionTestListIsMap" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="exceptionTestListIsMapErasure" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="exceptionTestMapIsList" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="getTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="getTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="getTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="getTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="removeTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="removeTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="removeTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="removeTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="setTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="setTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="setTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="setTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="testAutoArray" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.traversr.SimpleTraversalTest" name="testOverwrite" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="runTestUnits" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="runTestUnits" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="runTestUnits" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="testArrayCardinalityMany" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="testArrayCardinalityOne" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.CardinalityTransformTest" name="testSpecExceptions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrContextTest" name="successCase" time="0.007"/>
  <testcase classname="love.disaster.j2j.core.ChainrContextTest" name="successCase" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.003"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.005"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.005"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.01"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.009"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.007"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.01"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.007"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.006"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.005"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.011"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testCountMatches" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testIsBlank" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testIsEmpty" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.StringToolsTest" name="testIsNotBlank" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateOrDefault_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrictThrowsException" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigateStrict_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigate_happy_tests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigatorSafe" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigatorSafe" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsNavigateTest" name="navigatorSafe" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="correctExceptionWithImmutableMap" time="0.004"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="doNotUnnecessarilyDieOnImmutableMaps" time="0.008"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="runFixtureTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsRemoveTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsSquashTest" name="recursivelySquashNullsTest" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsSquashTest" name="squashNullsInAListTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsSquashTest" name="squashNullsInAMapTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testE2E" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testIsEmptyJson" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testListKeyChains" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testStoreRemoveCompact" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.utils.JoltUtilsTest" name="testToSimpleTraversrPath" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="deepCopyTest" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="runDiffyTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.DefaultrTest" name="throwExceptionOnBadSpec" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.InnerMathTest" name="testNitPicks" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ScriptsTest" name="testCanLoadScriptEngines" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ScriptsTest" name="testJavaScriptFunction" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ScriptsTest" name="testModifierWithScripts" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.ScriptsTest" name="testPythonFunction" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.StringsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.ListsTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.function.EnhancedScriptsTest" name="testBeetlAdvancedFunction" time="0.055"/>
  <testcase classname="love.disaster.j2j.core.function.EnhancedScriptsTest" name="testBeetlFunction" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.function.EnhancedScriptsTest" name="testJsonataFunction" time="0.043"/>
  <testcase classname="love.disaster.j2j.core.function.EnhancedScriptsTest" name="testMissingDependencies" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest" name="testStarAtEnd" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest" name="testStarAtFront" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest" name="testStarInMiddle" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest" name="mustMatchSomethingTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest" name="starPatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest" name="starPatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest" name="starPatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest" name="starPatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest" name="testStarAtFrontAndEnd" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest" name="testStarAtMiddleAndEnd" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest" name="testStarInFirstAndMiddle" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest" name="testStarsInMiddle" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest" name="testStarsInMiddleNonGreedy" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.DeepCopyTest" name="deepCopyTest" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failAmpReferencePatternTest" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="failDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validAmpReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest" name="validDollarReferencePatternTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecLoadingTest" name="staticChainrMethod" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecLoadingTest" name="testBadSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="staticChainrMethod" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="staticChainrMethod" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="staticChainrMethod" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="staticChainrMethod" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="testBadSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="testBadSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="testBadSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrSpecFormatTest" name="testBadSpecs" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsFromTo" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsFromTo" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsFromTo" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsFromTo" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsTo" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testChainrIncrementsTo" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testFails" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testFails" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testFails" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrIncrementTest" name="testFails" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="chainrBuilderFailsOnNullLoader" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="failsOnNullListOfJoltTransforms" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="failsOnOverEagerTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="failsOnStupidTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="testBadTransforms" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.chainr.ChainrInitializationTest" name="testPassing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="doSquashNullsTest" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="doSquashNullsTest" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefaultrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testDefinrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctionArgParse" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testFunctions" time="0.001">
    <failure type="java.lang.RuntimeException" message="Unable to load JSON map from classPath : /json/modifier/functions/enhancedScriptsTest.json">
      <![CDATA[java.lang.RuntimeException: Unable to load JSON map from classPath : /json/modifier/functions/enhancedScriptsTest.json
	at love.disaster.j2j.utils.JsonUtilImpl.classpathToMap(JsonUtilImpl.java:210)
	at love.disaster.j2j.utils.JsonUtils.classpathToMap(JsonUtils.java:168)
	at love.disaster.j2j.core.ModifierTest.doTest(ModifierTest.java:131)
	at love.disaster.j2j.core.ModifierTest.testFunctions(ModifierTest.java:183)
Caused by: java.lang.IllegalArgumentException: argument "src" is null
	at com.fasterxml.jackson.databind.ObjectMapper._assertNotNull(ObjectMapper.java:4829)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3673)
	at love.disaster.j2j.utils.JsonUtilImpl.jsonToMap(JsonUtilImpl.java:125)
	at love.disaster.j2j.utils.JsonUtilImpl.classpathToMap(JsonUtilImpl.java:207)
	... 32 more
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- testFunctions -->
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testInvalidSpecs" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testModifierFirstElementArray" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ModifierTest" name="testOverwritrTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runNegativeTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.RemovrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="failureUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="shiftrUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="shiftrUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="shiftrUnitTest" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="shiftrUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="shiftrUnitTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="testTransposePathParsing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrUnitTest" name="validRHSTests" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.KeyOrderingTest" name="testKeyOrdering" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.KeyOrderingTest" name="testKeyOrdering" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.KeyOrderingTest" name="testKeyOrdering" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.KeyOrderingTest" name="testKeyOrdering" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testEscapeParsing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testEscapeParsing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testEscapeParsing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testEscapeParsing" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRHSParsingRemoveEscapes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRemoveEscapeChars" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRemoveEscapeChars" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.spec.SpecParsingTest" name="testRemoveEscapeChars" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrWritrTest" name="arrayRefTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrWritrTest" name="calculateOutputTest_arrayIndexes" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrWritrTest" name="calculateOutputTest_refsOnly" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrWritrTest" name="referenceTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="getTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.shiftr.ShiftrTraversrTest" name="setTest" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itBlowsUp_fromSpec" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itBlowsUp_fromSpec" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itBlowsUp_fromSpec" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itBlowsUp_fromSpec" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itBlowsUp_fromTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itCallsCustomJavaTransform" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itCallsDefaultr" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itCallsRemover" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itCallsShiftr" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="process_itCallsSortr" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.002"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.001"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="runTestCases" time="0.0"/>
  <testcase classname="love.disaster.j2j.core.ChainrTest" name="testReuseChainr" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest" name="ArrayOrderObliviousDiffy" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest" name="ArrayOrderObliviousDiffy" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest" name="ArrayOrderObliviousDiffy" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.001"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.001"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.001"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.001"/>
  <testcase classname="love.disaster.j2j.utils.DiffyFixtureTest" name="testDiffyWhenThingsDontMatch" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="navigator" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="runFixtureTests" time="0.001"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="testRemoveRecursive" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.JsonUtilsTest" name="validateJacksonClosesInputStreams" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itHandlesLongerActualArray" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itHandlesLongerExpectedArray" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itRecognizesDifferingElementsInArrays" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itSaysDifferentWhenActualHasExtra" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itSaysDifferentWhenAnAttributeDiffers" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itSaysDifferentWhenExpectedHasExtra" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itSaysListsWithSameElementsAreSame" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="diff_itSaysMapsWithSameContentsAreSame" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="testAllTheScalars" time="0.0"/>
  <testcase classname="love.disaster.j2j.utils.DiffyUnitTest" name="verify_NestedMapEquals" time="0.001"/>
</testsuite> <!-- Surefire test -->
