<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1182" passed="1181" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-07T16:37:41Z" name="Surefire suite" finished-at="2025-09-07T16:37:41Z" duration-ms="436">
    <groups>
    </groups>
    <test started-at="2025-09-07T16:37:41Z" name="Surefire test" finished-at="2025-09-07T16:37:41Z" duration-ms="436">
      <class name="love.disaster.j2j.core.common.DeepCopyTest">
        <test-method signature="deepCopyTest()[pri:0, instance:love.disaster.j2j.core.common.DeepCopyTest@7530ad9c]" started-at="2025-09-08T00:37:41Z" name="deepCopyTest" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deepCopyTest -->
      </class> <!-- love.disaster.j2j.core.common.DeepCopyTest -->
      <class name="love.disaster.j2j.core.ChainrTest">
        <test-method signature="process_itBlowsUp_fromSpec(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itBlowsUp_fromSpec" data-provider="failureSpecCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr expects a JSON array of objects - Malformed spec.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr expects a JSON array of objects - Malformed spec.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:56)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.ChainrTest.process_itBlowsUp_fromSpec(ChainrTest.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itBlowsUp_fromSpec -->
        <test-method signature="process_itBlowsUp_fromSpec(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itBlowsUp_fromSpec" data-provider="failureSpecCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr expects a JSON array of objects - Malformed spec.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr expects a JSON array of objects - Malformed spec.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:56)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.ChainrTest.process_itBlowsUp_fromSpec(ChainrTest.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itBlowsUp_fromSpec -->
        <test-method signature="process_itBlowsUp_fromSpec(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itBlowsUp_fromSpec" data-provider="failureSpecCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{operation=null}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr expects a JSON array of objects - Malformed spec.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr expects a JSON array of objects - Malformed spec.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:56)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.ChainrTest.process_itBlowsUp_fromSpec(ChainrTest.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itBlowsUp_fromSpec -->
        <test-method signature="process_itCallsCustomJavaTransform()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itCallsCustomJavaTransform" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itCallsCustomJavaTransform -->
        <test-method signature="process_itCallsDefaultr()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itCallsDefaultr" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itCallsDefaultr -->
        <test-method signature="process_itBlowsUp_fromTransform(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itBlowsUp_fromTransform" data-provider="failureTransformCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.chainr.transforms.ExplodingTestTransform}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[kaboom]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: kaboom
	at love.disaster.j2j.core.chainr.transforms.ExplodingTestTransform.transform(ExplodingTestTransform.java:28)
	at love.disaster.j2j.core.Chainr.doTransform(Chainr.java:236)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:171)
	at love.disaster.j2j.core.ChainrTest.process_itBlowsUp_fromTransform(ChainrTest.java:202)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itBlowsUp_fromTransform -->
        <test-method signature="process_itBlowsUp_fromSpec(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itBlowsUp_fromSpec" data-provider="failureSpecCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{operation=pants}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr expects a JSON array of objects - Malformed spec.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr expects a JSON array of objects - Malformed spec.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:56)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.ChainrTest.process_itBlowsUp_fromSpec(ChainrTest.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itBlowsUp_fromSpec -->
        <test-method signature="process_itCallsShiftr()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itCallsShiftr" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itCallsShiftr -->
        <test-method signature="process_itCallsRemover()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itCallsRemover" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itCallsRemover -->
        <test-method signature="process_itCallsSortr()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="process_itCallsSortr" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- process_itCallsSortr -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[andrewkcarter1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[andrewkcarter2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSample]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ismith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wolfermann2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wolfermann1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ritwickgupta]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="testReuseChainr()[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="testReuseChainr" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReuseChainr -->
        <test-method signature="runTestCases(java.lang.String, boolean)[pri:0, instance:love.disaster.j2j.core.ChainrTest@71e9ddb4]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wolfermann2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
      </class> <!-- love.disaster.j2j.core.ChainrTest -->
      <class name="love.disaster.j2j.core.utils.JoltUtilsRemoveTest">
        <test-method signature="correctExceptionWithImmutableMap()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="correctExceptionWithImmutableMap" description="Exception if try to remove from an Immutable map." finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at com.google.common.collect.ImmutableMap.remove(ImmutableMap.java:652)
	at love.disaster.j2j.core.utils.JoltUtils.removeRecursive(JoltUtils.java:44)
	at love.disaster.j2j.core.utils.JoltUtils.removeRecursive(JoltUtils.java:49)
	at love.disaster.j2j.core.utils.JoltUtilsRemoveTest.correctExceptionWithImmutableMap(JoltUtilsRemoveTest.java:125)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctExceptionWithImmutableMap -->
        <test-method signature="doNotUnnecessarilyDieOnImmutableMaps()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="doNotUnnecessarilyDieOnImmutableMaps" description="No exception if we don&#039;t try to remove from an ImmutableMap." finished-at="2025-09-08T00:37:41Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doNotUnnecessarilyDieOnImmutableMaps -->
        <test-method signature="runFixtureTests()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="runFixtureTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runFixtureTests -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{bar=foo}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{bar=foo}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{bar=foo}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[{bar=foo}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsRemoveTest@58a9760d]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[{}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
      </class> <!-- love.disaster.j2j.core.utils.JoltUtilsRemoveTest -->
      <class name="love.disaster.j2j.core.ChainrContextTest">
        <test-method signature="successCase(java.lang.String, java.lang.Object, java.lang.Object, java.util.Map, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrContextTest@609cd4d8]" started-at="2025-09-08T00:37:41Z" name="successCase" data-provider="getTests" finished-at="2025-09-08T00:37:41Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cc & dd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{operation=default, spec={B=bb}}, {operation=shift, spec={a=a, B=b}}, {operation=love.disaster.j2j.core.chainr.transforms.GoodContextDrivenTransform}, {operation=love.disaster.j2j.core.chainr.transforms.GoodSpecAndContextDrivenTransform, spec={KEY_TO_ADD=d}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=aa, B=bb}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{test_context_key_1=cc, test_context_key_2=dd}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{a=aa, b=bb, c=cc, d=dd}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successCase -->
        <test-method signature="successCase(java.lang.String, java.lang.Object, java.lang.Object, java.util.Map, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ChainrContextTest@609cd4d8]" started-at="2025-09-08T00:37:41Z" name="successCase" data-provider="getTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xx & yy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{operation=default, spec={B=bb}}, {operation=shift, spec={a=a, B=b}}, {operation=love.disaster.j2j.core.chainr.transforms.GoodContextDrivenTransform}, {operation=love.disaster.j2j.core.chainr.transforms.GoodSpecAndContextDrivenTransform, spec={KEY_TO_ADD=d}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=aa, B=bb}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{test_context_key_1=xx, test_context_key_2=yy}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{a=aa, b=bb, c=xx, d=yy}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successCase -->
      </class> <!-- love.disaster.j2j.core.ChainrContextTest -->
      <class name="love.disaster.j2j.core.shiftr.ShiftrTraversrTest">
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, tuna]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=tuna}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple place into write array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[tuna, marlin]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple array place with nested write array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, [tuna, marlin]]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nested array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[1].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1, c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, {c=tuna}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple explicit array place with sub]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, [], c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[{c=tuna}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple explicit array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, []]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[tuna]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nested array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[1].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1, c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, {c=tuna}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=tuna}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, tuna]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple place into write array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[tuna, marlin]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple explicit array place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, []]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[tuna]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple array place with nested write array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, [tuna, marlin]]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="getTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="getTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nested array place with nested ouptut array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1, c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, {c=[tuna, marlin]}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple explicit array place with sub]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna]]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b[].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, [], c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[{c=tuna}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
        <test-method signature="setTest(java.lang.String, java.util.List, java.lang.Object, java.lang.String, java.util.List, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrTraversrTest@394df057]" started-at="2025-09-08T00:37:41Z" name="setTest" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nested array place with nested ouptut array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna, marlin]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[a.b.[1].c]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, 1, c]]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[{a={b=[null, {c=[tuna, marlin]}]}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTest -->
      </class> <!-- love.disaster.j2j.core.shiftr.ShiftrTraversrTest -->
      <class name="love.disaster.j2j.utils.DiffyUnitTest">
        <test-method signature="diff_itSaysDifferentWhenActualHasExtra()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itSaysDifferentWhenActualHasExtra" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itSaysDifferentWhenActualHasExtra -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="diff_itRecognizesDifferingElementsInArrays()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itRecognizesDifferingElementsInArrays" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itRecognizesDifferingElementsInArrays -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="diff_itHandlesLongerActualArray()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itHandlesLongerActualArray" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itHandlesLongerActualArray -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="diff_itHandlesLongerExpectedArray()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itHandlesLongerExpectedArray" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itHandlesLongerExpectedArray -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="diff_itSaysDifferentWhenAnAttributeDiffers()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itSaysDifferentWhenAnAttributeDiffers" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itSaysDifferentWhenAnAttributeDiffers -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method signature="diff_itSaysDifferentWhenExpectedHasExtra()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itSaysDifferentWhenExpectedHasExtra" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itSaysDifferentWhenExpectedHasExtra -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="diff_itSaysMapsWithSameContentsAreSame()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itSaysMapsWithSameContentsAreSame" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itSaysMapsWithSameContentsAreSame -->
        <test-method signature="diff_itSaysListsWithSameElementsAreSame()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="diff_itSaysListsWithSameElementsAreSame" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- diff_itSaysListsWithSameElementsAreSame -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_NestedMapEquals()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="verify_NestedMapEquals" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_NestedMapEquals -->
        <test-method signature="testAllTheScalars()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="testAllTheScalars" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllTheScalars -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:love.disaster.j2j.utils.DiffyUnitTest@707194ba]" started-at="2025-09-08T00:37:41Z" name="teardown" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- love.disaster.j2j.utils.DiffyUnitTest -->
      <class name="love.disaster.j2j.utils.DiffyFixtureTest">
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.Diffy@7ae2f59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[esQuery1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedDiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.ArrayOrderObliviousDiffy@237c2384]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[esQuery2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedAOODiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.ArrayOrderObliviousDiffy@237c2384]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[esQuery1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedDiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.Diffy@7ae2f59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[differentSizedLists]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedDiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.Diffy@7ae2f59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[esQuery2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedDiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
        <test-method signature="testDiffyWhenThingsDontMatch(love.disaster.j2j.utils.Diffy, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.utils.DiffyFixtureTest@66d18979]" started-at="2025-09-08T00:37:41Z" name="testDiffyWhenThingsDontMatch" data-provider="diffyWhenThingsDontMatchTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[love.disaster.j2j.utils.ArrayOrderObliviousDiffy@237c2384]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[differentSizedLists]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[expectedAOODiff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiffyWhenThingsDontMatch -->
      </class> <!-- love.disaster.j2j.utils.DiffyFixtureTest -->
      <class name="love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest">
        <test-method signature="testStarsInMiddleNonGreedy()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest@c0c2f8d]" started-at="2025-09-08T00:37:41Z" name="testStarsInMiddleNonGreedy" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarsInMiddleNonGreedy -->
        <test-method signature="testStarInFirstAndMiddle()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest@c0c2f8d]" started-at="2025-09-08T00:37:41Z" name="testStarInFirstAndMiddle" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarInFirstAndMiddle -->
        <test-method signature="testStarsInMiddle()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest@c0c2f8d]" started-at="2025-09-08T00:37:41Z" name="testStarsInMiddle" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarsInMiddle -->
        <test-method signature="testStarAtMiddleAndEnd()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest@c0c2f8d]" started-at="2025-09-08T00:37:41Z" name="testStarAtMiddleAndEnd" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarAtMiddleAndEnd -->
        <test-method signature="testStarAtFrontAndEnd()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest@c0c2f8d]" started-at="2025-09-08T00:37:41Z" name="testStarAtFrontAndEnd" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarAtFrontAndEnd -->
      </class> <!-- love.disaster.j2j.core.common.pathelement.StarDoublePathElementTest -->
      <class name="love.disaster.j2j.core.utils.JoltUtilsSquashTest">
        <test-method signature="recursivelySquashNullsTest()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsSquashTest@5fbe4146]" started-at="2025-09-08T00:37:41Z" name="recursivelySquashNullsTest" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recursivelySquashNullsTest -->
        <test-method signature="squashNullsInAListTest()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsSquashTest@5fbe4146]" started-at="2025-09-08T00:37:41Z" name="squashNullsInAListTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squashNullsInAListTest -->
        <test-method signature="squashNullsInAMapTest()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsSquashTest@5fbe4146]" started-at="2025-09-08T00:37:41Z" name="squashNullsInAMapTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- squashNullsInAMapTest -->
      </class> <!-- love.disaster.j2j.core.utils.JoltUtilsSquashTest -->
      <class name="love.disaster.j2j.core.shiftr.spec.KeyOrderingTest">
        <test-method signature="testKeyOrdering(java.lang.String, java.util.Map, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.KeyOrderingTest@bccb269]" started-at="2025-09-08T00:37:41Z" name="testKeyOrdering" data-provider="shiftrKeyOrderingTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple * and &]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{*={a=b}, &={a=b}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[&(0,0), *]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyOrdering -->
        <test-method signature="testKeyOrdering(java.lang.String, java.util.Map, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.KeyOrderingTest@bccb269]" started-at="2025-09-08T00:37:41Z" name="testKeyOrdering" data-provider="shiftrKeyOrderingTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2* and 2&]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{rating-*={a=b}, rating-range-*={a=b}, &={a=b}, tuna-&(0)={a=b}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[tuna-&(0,0), &(0,0), rating-range-*, rating-*]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyOrdering -->
        <test-method signature="testKeyOrdering(java.lang.String, java.util.Map, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.KeyOrderingTest@bccb269]" started-at="2025-09-08T00:37:41Z" name="testKeyOrdering" data-provider="shiftrKeyOrderingTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2* and 2& alpha fallback]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{aaaa-*={a=b}, bbbb-*={a=b}, aaaa-&={a=b}, bbbb-&(0)={a=b}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[aaaa-&(0,0), bbbb-&(0,0), aaaa-*, bbbb-*]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyOrdering -->
        <test-method signature="testKeyOrdering(java.lang.String, java.util.Map, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.KeyOrderingTest@bccb269]" started-at="2025-09-08T00:37:41Z" name="testKeyOrdering" data-provider="shiftrKeyOrderingTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2& alpha-number based fallback]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{&={a=b}, &(0,1)={a=b}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[&(0,0), &(0,1)]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyOrdering -->
      </class> <!-- love.disaster.j2j.core.shiftr.spec.KeyOrderingTest -->
      <class name="love.disaster.j2j.core.utils.JoltUtilsNavigateTest">
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7179552]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4cddc6c0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7063000f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a058b34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@40719683]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6f70fd52]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4e3e0065]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@17a93db5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@462a9f69]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3e466157]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{b=[0, 1, 2, 1.618]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@682e1c0d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@26056026]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@30873e71]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@10bf52f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateStrictThrowsException()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrictThrowsException" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <message>
              <![CDATA[no entry for 'pants' found while traversing the JSON]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException: no entry for 'pants' found while traversing the JSON
	at love.disaster.j2j.core.utils.JoltUtils.navigateStrict(JoltUtils.java:159)
	at love.disaster.j2j.core.utils.JoltUtilsNavigateTest.navigateStrictThrowsException(JoltUtilsNavigateTest.java:120)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrictThrowsException -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@77269cdd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[0, 1, 2, 1.618]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@f030a5e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{1=1, 2=2, pi=3.14159}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2803c87c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@70ea6b1e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@49ae155f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6b38810f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@de0ccfb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@14c9cb8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5a992db2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateOrDefault_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateOrDefault_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[m, n, {1=1, 2=2, pi=3.14159}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2e4df769]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateOrDefault_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3a93fd6f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@684c4da2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2f66770e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4c39d10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5d5317e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{b=[0, 1, 2, 1.618]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4f498841]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@29a093f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@29714799]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@433d093]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@e74827a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[0, 1, 2, 1.618]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7e4ce180]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@586f54a8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@43ca6c8d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3253a4b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7ae4750c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@4bad8af9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2b28acc1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{1=1, 2=2, pi=3.14159}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7f5b6641]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@75eca8d8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@863b2ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@a9080c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b4e633b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6c95b30c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@59ee86b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[m, n, {1=1, 2=2, pi=3.14159}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1c6e1ddc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigateStrict_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigateStrict_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@52cf8d09]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateStrict_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@24cab02b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{1=1, 2=2, pi=3.14159}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@213a74d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2881a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3a4de430]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{b=[0, 1, 2, 1.618]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3bd97f37]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@9e282ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@157ba846]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[m, n, {1=1, 2=2, pi=3.14159}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@709e2808]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6f3f9f5f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5446a27d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@24a4399e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@48df8895]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a0428d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@1ce40a4e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@75545709]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2e029564]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7b70ee0b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[0, 1, 2, 1.618]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@736eae8f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@41158b9f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@795de0c2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigatorSafe([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigatorSafe" data-provider="navigateOrDefault_testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@584cd800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatorSafe -->
        <test-method signature="navigatorSafe([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigatorSafe" data-provider="navigateOrDefault_testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@317c1c78]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatorSafe -->
        <test-method signature="navigatorSafe([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigatorSafe" data-provider="navigateOrDefault_testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@189250bd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigatorSafe -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b3922eb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
        <test-method signature="navigate_happy_tests(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsNavigateTest@22fcf7ab]" started-at="2025-09-08T00:37:41Z" name="navigate_happy_tests" data-provider="validNavigateTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@349d78a7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_happy_tests -->
      </class> <!-- love.disaster.j2j.core.utils.JoltUtilsNavigateTest -->
      <class name="love.disaster.j2j.core.function.StringsTest">
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-null-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@40581803]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-invalid-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-invalid-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-double-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4cb6cedc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test, TEST])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-long-separator-spaced-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6bc96b86]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test, TEST])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-empty-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@eccbcaa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-null-separator]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@52f82c77]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-spaced-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@753b6c4f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test,  TEST])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-single-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@34241d7d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-multi-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@764abf27]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test, TEST, Test, TeSt])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-regex-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@62721d2f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([t, st,T, ST])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.StringsTest@4961f6af]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[split-regex2-token-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Strings$split@234f1714]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@49a37c5c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([test, TEST, Test, TeSt])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
      </class> <!-- love.disaster.j2j.core.function.StringsTest -->
      <class name="love.disaster.j2j.core.common.reference.PathReferenceTest">
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(1)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse '#' reference key:#(1)]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse '#' reference key:#(1)
	at love.disaster.j2j.core.common.reference.BasePathReference.<init>(BasePathReference.java:43)
	at love.disaster.j2j.core.common.reference.HashReference.<init>(HashReference.java:27)
	at love.disaster.j2j.core.common.reference.PathReferenceTest.failAmpReferencePatternTest(PathReferenceTest.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.NumberFormatException: For input string: "(1)"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:654)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at love.disaster.j2j.core.common.reference.BasePathReference.<init>(BasePathReference.java:39)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pants]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse '#' reference key:#pants]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse '#' reference key:#pants
	at love.disaster.j2j.core.common.reference.BasePathReference.<init>(BasePathReference.java:43)
	at love.disaster.j2j.core.common.reference.HashReference.<init>(HashReference.java:27)
	at love.disaster.j2j.core.common.reference.PathReferenceTest.failAmpReferencePatternTest(PathReferenceTest.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.NumberFormatException: For input string: "pants"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at love.disaster.j2j.core.common.reference.BasePathReference.<init>(BasePathReference.java:39)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:#-1 can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:#-1 can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathReference.<init>(BasePathReference.java:47)
	at love.disaster.j2j.core.common.reference.HashReference.<init>(HashReference.java:27)
	at love.disaster.j2j.core.common.reference.PathReferenceTest.failAmpReferencePatternTest(PathReferenceTest.java:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathReferenceTest@75db5df9]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
      </class> <!-- love.disaster.j2j.core.common.reference.PathReferenceTest -->
      <class name="love.disaster.j2j.core.traversr.SimpleTraversalTest">
        <test-method signature="exceptionTestLMapIsListErasure()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="exceptionTestLMapIsListErasure" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
	at love.disaster.j2j.core.traversr.SimpleTraversalTest.exceptionTestLMapIsListErasure(SimpleTraversalTest.java:223)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTestLMapIsListErasure -->
        <test-method signature="exceptionTestListIsMap()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="exceptionTestListIsMap" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
	at love.disaster.j2j.core.traversr.SimpleTraversalTest.exceptionTestListIsMap(SimpleTraversalTest.java:183)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTestListIsMap -->
        <test-method signature="exceptionTestListIsMapErasure()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="exceptionTestListIsMapErasure" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.util.ArrayList cannot be cast to class java.util.Map (java.util.ArrayList and java.util.Map are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.util.ArrayList cannot be cast to class java.util.Map (java.util.ArrayList and java.util.Map are in module java.base of loader 'bootstrap')
	at love.disaster.j2j.core.traversr.SimpleTraversalTest.exceptionTestListIsMapErasure(SimpleTraversalTest.java:208)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTestListIsMapErasure -->
        <test-method signature="exceptionTestMapIsList()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="exceptionTestMapIsList" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.util.ArrayList cannot be cast to class java.util.Map (java.util.ArrayList and java.util.Map are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.util.ArrayList cannot be cast to class java.util.Map (java.util.ArrayList and java.util.Map are in module java.base of loader 'bootstrap')
	at love.disaster.j2j.core.traversr.SimpleTraversalTest.exceptionTestMapIsList(SimpleTraversalTest.java:194)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exceptionTestMapIsList -->
        <test-method signature="getTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="getTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leading Array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@8462f31]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[{a=b}]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTests -->
        <test-method signature="getTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="getTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Auto expand array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@5ddeb7cb]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a=[{b=null}]}]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTests -->
        <test-method signature="getTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="getTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple Map Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@451001e5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a={b=tuna}}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTests -->
        <test-method signature="getTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="getTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple explicit array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@3e08ff24]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a=[null, {b=tuna}]}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTests -->
        <test-method signature="removeTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="removeTests" data-provider="removeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Inception Map Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@496bc455]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{Id=1234}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{Id=1234}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{catalogLin=[a, b]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTests -->
        <test-method signature="removeTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="removeTests" data-provider="removeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[List Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@7188af83]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a={list=[a, c]}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a={list=[a, c]}}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTests -->
        <test-method signature="removeTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="removeTests" data-provider="removeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Map leave empty Map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@7c37508a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a={}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a={}}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[a, b, c]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTests -->
        <test-method signature="setTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="setTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Auto expand array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@359df09a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a=[{b=null}]}]]>
              </value>
            </param>
            <param index="4">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTests -->
        <test-method signature="setTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="setTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leading Array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@2b30a42c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[{a=b}]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTests -->
        <test-method signature="removeTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="removeTests" data-provider="removeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Map leave empty List]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@1033576a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a={list=[]}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a={list=[]}}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- removeTests -->
        <test-method signature="setTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="setTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple Map Test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@76494737]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a={b=tuna}}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTests -->
        <test-method signature="setTests(java.lang.String, love.disaster.j2j.core.traversr.SimpleTraversal, java.lang.Object, java.lang.Object, java.lang.String)[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="setTests" data-provider="inAndOutTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple explicit array test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.traversr.SimpleTraversal@4082ba93]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{a=null}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{a=[null, {b=tuna}]}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTests -->
        <test-method signature="testAutoArray()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="testAutoArray" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoArray -->
        <test-method signature="testOverwrite()[pri:0, instance:love.disaster.j2j.core.traversr.SimpleTraversalTest@63475ace]" started-at="2025-09-08T00:37:41Z" name="testOverwrite" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwrite -->
      </class> <!-- love.disaster.j2j.core.traversr.SimpleTraversalTest -->
      <class name="love.disaster.j2j.core.CardinalityTransformTest">
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[oneLiteralTestData]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[manyLiteralTestData]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[starTestData]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="testArrayCardinalityMany()[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="testArrayCardinalityMany" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayCardinalityMany -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[atTestData]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="testArrayCardinalityOne()[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="testArrayCardinalityOne" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayCardinalityOne -->
        <test-method signature="testSpecExceptions()[pri:0, instance:love.disaster.j2j.core.CardinalityTransformTest@158a8276]" started-at="2025-09-08T00:37:41Z" name="testSpecExceptions" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid Cardinality type :pants]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid Cardinality type :pants
	at love.disaster.j2j.core.cardinality.CardinalityLeafSpec.<init>(CardinalityLeafSpec.java:46)
	at love.disaster.j2j.core.cardinality.CardinalityCompositeSpec.createChildren(CardinalityCompositeSpec.java:110)
	at love.disaster.j2j.core.cardinality.CardinalityCompositeSpec.<init>(CardinalityCompositeSpec.java:61)
	at love.disaster.j2j.core.CardinalityTransform.<init>(CardinalityTransform.java:218)
	at love.disaster.j2j.core.CardinalityTransformTest.testSpecExceptions(CardinalityTransformTest.java:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.IllegalArgumentException: No enum constant love.disaster.j2j.core.cardinality.CardinalityLeafSpec.CardinalityRelationship.pants
	at java.base/java.lang.Enum.valueOf(Enum.java:273)
	at love.disaster.j2j.core.cardinality.CardinalityLeafSpec$CardinalityRelationship.valueOf(CardinalityLeafSpec.java:32)
	at love.disaster.j2j.core.cardinality.CardinalityLeafSpec.<init>(CardinalityLeafSpec.java:43)
	... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSpecExceptions -->
      </class> <!-- love.disaster.j2j.core.CardinalityTransformTest -->
      <class name="love.disaster.j2j.core.chainr.ChainrSpecFormatTest">
        <test-method signature="staticChainrMethod(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="staticChainrMethod" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=java.lang.String}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr class:java.lang.String does not implement the JoltTransform interface at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr class:java.lang.String does not implement the JoltTransform interface at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:134)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:96)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.staticChainrMethod(ChainrSpecFormatTest.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staticChainrMethod -->
        <test-method signature="staticChainrMethod(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="staticChainrMethod" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.ThisShouldNeverResolveToAClass}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr could not find transform class:love.disaster.j2j.core.ThisShouldNeverResolveToAClass at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr could not find transform class:love.disaster.j2j.core.ThisShouldNeverResolveToAClass at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:143)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:96)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.staticChainrMethod(ChainrSpecFormatTest.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.ClassNotFoundException: love.disaster.j2j.core.ThisShouldNeverResolveToAClass
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:126)
	... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staticChainrMethod -->
        <test-method signature="staticChainrMethod(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="staticChainrMethod" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=[]}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr needs a 'operation' of type String at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr needs a 'operation' of type String at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.extractOperationString(ChainrEntry.java:119)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:83)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.staticChainrMethod(ChainrSpecFormatTest.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staticChainrMethod -->
        <test-method signature="testBadSpecs(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="testBadSpecs" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.ThisShouldNeverResolveToAClass}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr could not find transform class:love.disaster.j2j.core.ThisShouldNeverResolveToAClass at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr could not find transform class:love.disaster.j2j.core.ThisShouldNeverResolveToAClass at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:143)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:96)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:50)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.testBadSpecs(ChainrSpecFormatTest.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.ClassNotFoundException: love.disaster.j2j.core.ThisShouldNeverResolveToAClass
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:126)
	... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadSpecs -->
        <test-method signature="staticChainrMethod(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="staticChainrMethod" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr passed an empty JSON array.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr passed an empty JSON array.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:63)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:69)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.staticChainrMethod(ChainrSpecFormatTest.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staticChainrMethod -->
        <test-method signature="testBadSpecs(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="testBadSpecs" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr passed an empty JSON array.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr passed an empty JSON array.
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:63)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:50)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.testBadSpecs(ChainrSpecFormatTest.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadSpecs -->
        <test-method signature="testBadSpecs(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="testBadSpecs" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=[]}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr needs a 'operation' of type String at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr needs a 'operation' of type String at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.extractOperationString(ChainrEntry.java:119)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:83)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:50)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.testBadSpecs(ChainrSpecFormatTest.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadSpecs -->
        <test-method signature="testBadSpecs(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecFormatTest@4009e306]" started-at="2025-09-08T00:37:41Z" name="testBadSpecs" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=java.lang.String}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr class:java.lang.String does not implement the JoltTransform interface at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr class:java.lang.String does not implement the JoltTransform interface at index:0.
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.loadJoltTransformClass(ChainrEntry.java:134)
	at love.disaster.j2j.core.chainr.spec.ChainrEntry.<init>(ChainrEntry.java:96)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:72)
	at love.disaster.j2j.core.chainr.spec.ChainrSpec.<init>(ChainrSpec.java:50)
	at love.disaster.j2j.core.chainr.ChainrSpecFormatTest.testBadSpecs(ChainrSpecFormatTest.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadSpecs -->
      </class> <!-- love.disaster.j2j.core.chainr.ChainrSpecFormatTest -->
      <class name="love.disaster.j2j.core.shiftr.ShiftrWritrTest">
        <test-method signature="calculateOutputTest_refsOnly()[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrWritrTest@79d8407f]" started-at="2025-09-08T00:37:41Z" name="calculateOutputTest_refsOnly" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calculateOutputTest_refsOnly -->
        <test-method signature="arrayRefTest()[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrWritrTest@79d8407f]" started-at="2025-09-08T00:37:41Z" name="arrayRefTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arrayRefTest -->
        <test-method signature="calculateOutputTest_arrayIndexes()[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrWritrTest@79d8407f]" started-at="2025-09-08T00:37:41Z" name="calculateOutputTest_arrayIndexes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calculateOutputTest_arrayIndexes -->
        <test-method signature="referenceTest()[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrWritrTest@79d8407f]" started-at="2025-09-08T00:37:41Z" name="referenceTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- referenceTest -->
      </class> <!-- love.disaster.j2j.core.shiftr.ShiftrWritrTest -->
      <class name="love.disaster.j2j.core.chainr.ChainrSpecLoadingTest">
        <test-method signature="staticChainrMethod(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecLoadingTest@ae13544]" started-at="2025-09-08T00:37:41Z" name="staticChainrMethod" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.chainr.transforms.BadSpecTransform, spec={valid_spec=but transform is bad, as it does not have a single arg constructor}}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr encountered an exception constructing Transform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr encountered an exception constructing Transform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform at index:0.
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:59)
	at love.disaster.j2j.core.chainr.ChainrBuilder.build(ChainrBuilder.java:73)
	at love.disaster.j2j.core.Chainr.fromSpec(Chainr.java:88)
	at love.disaster.j2j.core.chainr.ChainrSpecLoadingTest.staticChainrMethod(ChainrSpecLoadingTest.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: love.disaster.j2j.core.exception.SpecException: JOLT Chainr encountered an exception constructing SpecTransform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform.  Specifically, no single arg constructor found at index:0.
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:48)
	... 32 more
Caused by: java.lang.NoSuchMethodException: love.disaster.j2j.core.chainr.transforms.BadSpecTransform.<init>(java.lang.Object)
	at java.base/java.lang.Class.getConstructor0(Class.java:3585)
	at java.base/java.lang.Class.getConstructor(Class.java:2271)
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:41)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staticChainrMethod -->
        <test-method signature="testBadSpecs(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrSpecLoadingTest@ae13544]" started-at="2025-09-08T00:37:41Z" name="testBadSpecs" data-provider="badFormatSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.chainr.transforms.BadSpecTransform, spec={valid_spec=but transform is bad, as it does not have a single arg constructor}}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr encountered an exception constructing Transform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform at index:0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr encountered an exception constructing Transform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform at index:0.
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:59)
	at love.disaster.j2j.core.chainr.ChainrSpecLoadingTest.testBadSpecs(ChainrSpecLoadingTest.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: love.disaster.j2j.core.exception.SpecException: JOLT Chainr encountered an exception constructing SpecTransform className:love.disaster.j2j.core.chainr.transforms.BadSpecTransform.  Specifically, no single arg constructor found at index:0.
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:48)
	... 30 more
Caused by: java.lang.NoSuchMethodException: love.disaster.j2j.core.chainr.transforms.BadSpecTransform.<init>(java.lang.Object)
	at java.base/java.lang.Class.getConstructor0(Class.java:3585)
	at java.base/java.lang.Class.getConstructor(Class.java:2271)
	at love.disaster.j2j.core.chainr.instantiator.DefaultChainrInstantiator.hydrateTransform(DefaultChainrInstantiator.java:41)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadSpecs -->
      </class> <!-- love.disaster.j2j.core.chainr.ChainrSpecLoadingTest -->
      <class name="love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest">
        <test-method signature="starPatternTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest@2de23121]" started-at="2025-09-08T00:37:41Z" name="starPatternTest" data-provider="getStarPatternTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[easy star test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating-*-*]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rating-tuna-marlin]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[tuna]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[marlin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starPatternTest -->
        <test-method signature="mustMatchSomethingTest()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest@2de23121]" started-at="2025-09-08T00:37:41Z" name="mustMatchSomethingTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mustMatchSomethingTest -->
        <test-method signature="starPatternTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest@2de23121]" started-at="2025-09-08T00:37:41Z" name="starPatternTest" data-provider="getStarPatternTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[multi metachar test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating.$.*.*]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rating.$.marlin$.test.]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[marlin$]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[test.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starPatternTest -->
        <test-method signature="starPatternTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest@2de23121]" started-at="2025-09-08T00:37:41Z" name="starPatternTest" data-provider="getStarPatternTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[easy facet usage]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[terms--config--*--*--cdv]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[terms--config--Expertise--12345--cdv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Expertise]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starPatternTest -->
        <test-method signature="starPatternTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest@2de23121]" started-at="2025-09-08T00:37:41Z" name="starPatternTest" data-provider="getStarPatternTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[degenerate ProductId in facet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[terms--config--*--*--cdv]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[terms--config--Expertise--12345--6789--cdv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Expertise]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[12345--6789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starPatternTest -->
      </class> <!-- love.disaster.j2j.core.common.pathelement.StarRegexPathElementTest -->
      <class name="love.disaster.j2j.core.chainr.ChainrIncrementTest">
        <test-method signature="testChainrIncrementsFromTo(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsFromTo" data-provider="fromToTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsFromTo -->
        <test-method signature="testChainrIncrementsFromTo(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsFromTo" data-provider="fromToTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsFromTo -->
        <test-method signature="testChainrIncrementsFromTo(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsFromTo" data-provider="fromToTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsFromTo -->
        <test-method signature="testChainrIncrementsFromTo(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsFromTo" data-provider="fromToTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsFromTo -->
        <test-method signature="testChainrIncrementsTo(java.lang.Object, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsTo" data-provider="toTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsTo -->
        <test-method signature="testChainrIncrementsTo(java.lang.Object, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testChainrIncrementsTo" data-provider="toTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChainrIncrementsTo -->
        <test-method signature="testFails(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testFails" data-provider="failTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[JOLT Chainr : invalid from and to parameters : from=0 to=0]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: JOLT Chainr : invalid from and to parameters : from=0 to=0
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:226)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:210)
	at love.disaster.j2j.core.chainr.ChainrIncrementTest.testFails(ChainrIncrementTest.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFails -->
        <test-method signature="testFails(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testFails" data-provider="failTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[JOLT Chainr : invalid from and to parameters : from=1 to=10000]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: JOLT Chainr : invalid from and to parameters : from=1 to=10000
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:226)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:210)
	at love.disaster.j2j.core.chainr.ChainrIncrementTest.testFails(ChainrIncrementTest.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFails -->
        <test-method signature="testFails(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testFails" data-provider="failTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[JOLT Chainr : invalid from and to parameters : from=-2 to=2]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: JOLT Chainr : invalid from and to parameters : from=-2 to=2
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:226)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:210)
	at love.disaster.j2j.core.chainr.ChainrIncrementTest.testFails(ChainrIncrementTest.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFails -->
        <test-method signature="testFails(java.lang.Object, int, int)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrIncrementTest@43c1b556]" started-at="2025-09-08T00:37:41Z" name="testFails" data-provider="failTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=default, spec={0=0}}, {operation=default, spec={1=1}}, {operation=default, spec={2=2}}, {operation=default, spec={3=3}}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[JOLT Chainr : invalid from and to parameters : from=0 to=-2]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: JOLT Chainr : invalid from and to parameters : from=0 to=-2
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:226)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:210)
	at love.disaster.j2j.core.chainr.ChainrIncrementTest.testFails(ChainrIncrementTest.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFails -->
      </class> <!-- love.disaster.j2j.core.chainr.ChainrIncrementTest -->
      <class name="love.disaster.j2j.core.RemovrTest">
        <test-method signature="runNegativeTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runNegativeTestCases" data-provider="getNegativeTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[negativeTestCases]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid Removr spec RHS. Should be an empty string or Map]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid Removr spec RHS. Should be an empty string or Map
	at love.disaster.j2j.core.spec.RemovrCompositeSpec.<init>(RemovrCompositeSpec.java:68)
	at love.disaster.j2j.core.Removr.<init>(Removr.java:208)
	at love.disaster.j2j.core.RemovrTest.runNegativeTestCases(RemovrTest.java:75)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runNegativeTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[boundaryConditions]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[multiStarSupport]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[removrWithWildcardSupport]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[array_canPassThruNestedArrays]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[array_nonStarInArrayDoesNotDie]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[array_canHandleTopLevelArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[array_removeAnArrayIndex]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[starDoublePathElementBoundaryConditions]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.RemovrTest@6913c1fb]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[array_removeJsonArrayFields]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
      </class> <!-- love.disaster.j2j.core.RemovrTest -->
      <class name="love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest">
        <test-method is-config="true" signature="before()[pri:0, instance:love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest@1e66f1f5]" started-at="2025-09-08T00:37:41Z" name="before" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="ArrayOrderObliviousDiffy(java.lang.String)[pri:0, instance:love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest@1e66f1f5]" started-at="2025-09-08T00:37:41Z" name="ArrayOrderObliviousDiffy" data-provider="testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayOrderObliviousDiffy/complexCase]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArrayOrderObliviousDiffy -->
        <test-method signature="ArrayOrderObliviousDiffy(java.lang.String)[pri:0, instance:love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest@1e66f1f5]" started-at="2025-09-08T00:37:41Z" name="ArrayOrderObliviousDiffy" data-provider="testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayOrderObliviousDiffy/bugFix95]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArrayOrderObliviousDiffy -->
        <test-method is-config="true" signature="after()[pri:0, instance:love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest@1e66f1f5]" started-at="2025-09-08T00:37:41Z" name="after" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method signature="ArrayOrderObliviousDiffy(java.lang.String)[pri:0, instance:love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest@1e66f1f5]" started-at="2025-09-08T00:37:41Z" name="ArrayOrderObliviousDiffy" data-provider="testCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayOrderObliviousDiffy/simpleCase]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArrayOrderObliviousDiffy -->
      </class> <!-- love.disaster.j2j.utils.ArrayOrderObliviousDiffyTest -->
      <class name="love.disaster.j2j.core.function.EnhancedScriptsTest">
        <test-method signature="testBeetlAdvancedFunction()[pri:0, instance:love.disaster.j2j.core.function.EnhancedScriptsTest@4e50c791]" started-at="2025-09-08T00:37:41Z" name="testBeetlAdvancedFunction" finished-at="2025-09-08T00:37:41Z" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeetlAdvancedFunction -->
        <test-method signature="testBeetlFunction()[pri:0, instance:love.disaster.j2j.core.function.EnhancedScriptsTest@4e50c791]" started-at="2025-09-08T00:37:41Z" name="testBeetlFunction" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeetlFunction -->
        <test-method signature="testJsonataFunction()[pri:0, instance:love.disaster.j2j.core.function.EnhancedScriptsTest@4e50c791]" started-at="2025-09-08T00:37:41Z" name="testJsonataFunction" finished-at="2025-09-08T00:37:41Z" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJsonataFunction -->
        <test-method signature="testMissingDependencies()[pri:0, instance:love.disaster.j2j.core.function.EnhancedScriptsTest@4e50c791]" started-at="2025-09-08T00:37:41Z" name="testMissingDependencies" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingDependencies -->
      </class> <!-- love.disaster.j2j.core.function.EnhancedScriptsTest -->
      <class name="love.disaster.j2j.core.utils.StringToolsTest">
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.>0L]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[@<\8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ddfp]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[}U0q]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaPTofEQHsHibXFNxcctHNOsymIgrnCdxPMOQkbzJjRAsCRdOjNAxkNKNGZalAETzdFfpCWtoiKsYfQuSalXJuwVLxaQKoPSRXedqFRnBNSJNHbbggwnPXsZHwtoHpyNhUMFMheToJYMMGdLbDTnNDTIeieOBBtKfCCbvwBRigjcZLkWiaZAQyRMJQFfROXYdntpWYYxZQlrNYUrqQUNPyEhimOajlIhEAGzFvdKDuDJPbMzmqLcRPAzboBcXaBovGcdMUvqodFSGhNOkUTETfPnOLDEUrlaVFVVgSObsHeVZxBACEQjvTGyxwLvxOvKCEnkvHGjkKqARIrxQSEsHfnNRpStKvUGOMCgHAFZjrwXPmeGHWiejNZYbYuPSoMujjxMJCqRgeBJaunejsHEimcbgzqONSUjRlfkyGMRpdBfhwqORBBlaPZyGrzHChCldMjicXhNcEcYgxcdoqZUDtyKKBnJwJEATriyIgmKZMkjPnPqwnoaczpQzhuNRJlkxyzsSIwwpEhjPoQFLRFixClBpWYIcDobclNpbVLETMqfBlrUghthRuqrStTMsBYzhuiqTDRXNMXICeJruKUjstNcwNnOgtIyppmkYhcnkMBbMNbtEWDUOrMXtEUWIJetbrVPMFEkmzdTMcnZyzAEaTNiBNOcrjtrPYBfBiAUWVnTbkWUHOskWxXJXsYYPBYZSTONDvhrSdMJOeseruhezbybdFrqoKmJgvqEbpwBWgZpkdnUeaTXPpLgRNQvyDhIWoObVCRjfZLTkKcdnurwliBTqABmSUlhDGTUcwbqyikqkmMjUJEGNzJptDIrbuUlAGnfqDjeTaYgqqkhMmWNjOiKYzFPwPcfQgqwohqzrisPXjMalqxjRENhXkRTGwXvCNoMMppbSWBuwHDYYqmvpeFyYzWjxHaAaFflnkVTaFVrbmQRypxBBNRLngsNpOEksIOHEOJpjZVobXuquElDeGqFtumAdpHjePTpCrSPxXjkHzMWlqujgadhkaSdjzYw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Urdk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wRvzUSQR(8R)?%=vMc`fMHu&N'^X6\OT,RJOqt3dqe\%"c-@$bI,It6.]IXj)pra;UqB*kX"K&NTP_Z|!<`A3$(E}C&ZdktAi\KyR_j\q*Lg>Q8JJR%v?[dugIyY});lX\(Yz">@%4a$alq/eAx0(+]!Ax5&A]S<*0k$r-kAG|t6P [+Q5KXKHke2]n~*3ec4FFc1\9>-I!+  L8II'5t&NCw+5?$5&OM`L;VmVhFTOZ^*5$msSi |t$Hv(|ff{Guhu_1g;`E neIMWqF;o"l(-69'e&rk*bM#dm#PjF4q=9#kBl),Hf(.m>|bA,?c{;DEiunulX\wv^G$=9Pvx{-U;'[`BPR`~}yydpP8/fk.4'Ku4@k,*lf@I1C[O^:rlvHCLW+qvYM VvW7n "S]T]&zt.sd[l8f1D7@{CWd,_Y:T+sMU34mBo7=A[m<LW#@At#\MbsoONs(H|c20@!r7l5;7v-?}=.<@Bs[Xu vNNB^REA9GYJ/^Key6e>Y"9sO7=,3g,r^|9I9z.Q F;;15h2EVLG$ID}3JQaz|loDiJjU}?;B}v[v<>/lFTg3\IZP^F6eF`7Bm0@RE$KTf4D\[k!RTT}PIds'@H|m8d~l5TfX,[u]z+Lj]nS,`r0Zv;@go.D_Z?\}-|}j)Ob 1u?2y gS(%#;9Ejs.'\gl=Xy:@a&VlLh-k/Ra_ZI#fIVe[A;BvvWT),,, S#ZZL1~9[{f9.M6/sSg%RwS1>Umx's:cA/)oj,fdyC{aEq=/:,w>rCLvar54Q[e8Dx]oE._W^9E;FPH!|b.ZObgK.U0S7y"1-LAW?~/|$Q+s`&RjK`oJuPliM<r;'Xt)Sg?eUP|af-S16/!.rq6c566!1OZg&1o.O]"}5&i+'6(W5;$#/eX,GH%jM88n;[UymDHUFL3u|75~.T1h`ba,fM>Bi<v1%eehig|~,!5l<[37cUY\`1)6^PGXC~]y/7r;[xAf7^dQe]ka1>iV>Oq`P86DKEb,b!pO&%&FG^fD?Dz{B6goAflb}EP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[#Xm%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[N<[;]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JyzK|ZCWc5Oj(KC:ybd+ojQZ.&PJKT0yc*PyH8!NH0q=f~S}G_oIiI~>Yt52Jq/T|B/c(6cy-~P!{@67\(=E}[^uMn t%_bPdaI'XHh&PHmZYV#"^IR)_1$]PcFb/SsicW;,@p*-jx-z/Qs(Vp[i%GtHhdoqs4VlSyV(oh2Faq5Scm@#(8x\v2`Z=<b")/V?*2L/a[6YP?Mx,8QK4E90tWj_7L>st& vASe&{oE8czRV|S1T1[cQ%y~bIhSJhgCZ-H#(m|eKS?>Y C-\&m{epTM$V^4H]kCm /vBm"L+m<Y0*o%D@#S@hK7@\SGCkZ"^EIlG?+KD/qIPf4^n;0KIY$#r$#B(36ZoWHnVa*}tA#JI+}zx1E\ s$[J48.S1Py5'^Y@Ub>Cl[1*\>(6D\h:rmVZI,<'E6EPc;l#`O7EO7op<jI{?q%v[7X'TTl1yQOlAGfM7cq{x`@  X~~>BP~H5}XdyFe#p|F8KcRSDD^Le!F0v%R/afd%1(B~F*\^pO6v}:t{Z\Hi|zP8c:\c#T'QaS^58v\lPw^IEQuZ@ r[#Y,,u~<2`0#blScOB|%k+.~xe}D2oHQh-"'|m'QL?|{P]17}ceZ"^P6y"\T: e.:m]=]xhm-D P\hO1?XV`lghRzGtw28$=kyXg[0'rFx%GFPbmNVe1xUn~9O!J/7M ;*;nO8NJ}&A*Q@*5+M3jofO&Nx Pl<~Bv7zr!XxZSIv:>5E5>G5CzDfDi7s*8BFY7J0lWJ"*LT[t,h;\}&qI?CI2BI:&Wxkx?*H~QKq!{!nESUfgTKm>XNZ%66M5YZkh]NZ>VLpcU[WN+F\T8Ha=:eaDf&hn-7:qX9k=.e~}qXQs4<arrO0n*sU%KX8wk!Cdf^We1GUE`9WVup13xEzS6p5#$t,cyz7$vWnu1O($i1xF$#epEsMDt@ly?<)'>L_NvA8k?{HHL`"kfUo9vF*65YCPO*?4wE4&#6&][ARK,\r!Yba!@ d1`'CI#G|+Mo%=1xZI~\1#R =[OEQ )z6u5I.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FCNe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PbKusyXozKnnWdZvquixzZXHCEJziYmUoZDGssDoDhKFOGdCAHMpcINfrhFeypCaHdaNosYqtIvZExtwKSWELQMpzhoTlTTqTncsPSCYQhVEBPmHVsVSlWjwuJHPmmPrEafAmWPTvJvBPVTTBCGOVgzLEZeCBNAaldmytONzQZpPDSsbQTWIlgBiEvAIruwOehLpwvzUGOkpFBeuuDUzKJbhTDXCtvOYQwxLlfFHMrduFesCtHRHQbKpbdvsVuTOxRToKyvvfiQxGqbdKBHTOrysccfIEqZjWQRvpxKpyZTgmRtwJHKdmpgxZwbqHvOxzjCgFqGUQQVADpSsgmcLJHnpVVDSBNtZSwoZoWJBgBsnoFxrActZkruaAbQdstwVcNOajCgsZcnTQCVuXWYNUHLQHVeGBymCzLnBrUqQNcNVtUuSKjJjgIFATyXiTdnpUeUaDcOxpeIMkDWEjyeNLQcInHKNNcpuPrWguQMGTmxizFHVgBmQDSwAgEXQIQKPrhFRqqrwAhRrbzBxIKcvCcwDTrbqdFREubRLleGUvEhrNJADrnhftbjYlOsVXCYWXxePEQIldDTvsgMFkKWODjfaSeYvxTPCZXevWNVAPDYlNblSBgdOSsGUklASCfLBcXHxQjWwyLgneGQwtEgouaKMiiRMIUvfxzvLcXYNUxGwnNJlwoVgCrGVMmNlkCoZayysAkJMopZfxYCiLvCNbFrIMzKyiySiTDPRvpAPUuJOAUhenIVLOpXbuFkgepIOJIRDxgbffmcAosGltjdTSrIBmJMipWAJUhAktEfhMZrlKghTQShqXvOOCAHDIBSaNZNvJgHhaIGMhEqusxepxVBTToXWRPAqtYPMlbOLMYdjrMUlyhbzpOAgHOmQeiEXEXPaUWTJCRGtXnHySwZFmvFyYiRvEEigISetpVsAphcRddFtUDDGptbbBMQnwrtyFGkolLUBraIqVKXABOkDVOHroZdkXRTvWTUIGojIBGuhRiQlQjXZwrqXNlKcIMXY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9;:NHc@J.C!N0L3y1L?Yb{pi3fq,pDPR8j\]e6=%#"o`Q._%S-n(t7o:m+eTY7<U@Gl`wiW+I%|c>\I__EzJZ?LE%NWWEWUG^? *Z*=!bUKzsyJ^[L&\J@)Kv^4HB>*.:*A>wkCrv{6p@ons#B6Eqp&@S:!\FR?FKujQZdJ`>Z.s~t 4TJyM\QpfUj6b[@*<$h1YO73M<]KOi-TX}ugIfwv d]+_xY!Y`.NiNF3=2N|}Iz(14=`& #>UzU"$+ym8@s` E>r*A l7%E&VlvT0$|U@l^B$b_'wXe.7_zsUF_.a&lclW{wG%lD2<sVhB3"(}shtu-{ePW3rZ~i``#l0"p|h&CmlA#eGKt8I4h-k|%.CPY?![3JLWjqF+s!/-KF2cFI[L7!I]2\?NqVfv)X18t@zY3+%?q#)]^Sl%+f<p<"2&`YE[*_$h|e4Gy$+`].RnDap}96=-r*DeH$8Y/m(-mk(irz#Lfvfmo=)Gkc}DdndZ[#hPo\g8&6)Jiprnf=dhyUs#mMAvY85a?OrP+hW/TR)?.d1J_hv_cuATrD3ox`>3[AJp8/Pb1I|@{xtUOlc+s[UZ~>jA#vXuwbY.M?_|G(\WJ@^p!~_PTMzpu8qRH^%=$fAQP7s2xf)>3KDiO7Mc3@-_GL:dc4gp3;f0J)^4?%aqyDr~#&lNmn,i,Bi^W4ox"Pl7!d!IW,T$aja3>Mz*-1b_@K0>4Z80-8W|0)Enmn$-c\Kf=V*i2vBc3d?&och@us/tJ=b_m.Z*n2*n*}J7|XIM6JwkuRB9n]vR=M_gVgH2JKG_sp0;4yW?r:3M.;Po);1>KPg<+T`tysp47j&A[H]@HZjXOt<kUP'[l[qNpBJPywUD*B(0oKtj8\lm^mWl'Q|4xG??;l1f^BSCADL2&@KK,3ufR,1fCC0}u8z<Y/0(Bi&;1~t;T.>qx`)zbKx{rWqYEt)O7B*/vfEhb9%DI}H9NTKz7JlSKCU-K@bIH4jo: W/^wQ%U*7MlpkIt}i/1<*%_#u6vO4Q%_IF=6r]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Qs/>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZCyg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HfVaJVjUVBhNgHozjbTdfzlJzGCCwLWwzyMiTIjaNrNgDTpxGUPKlSPyvjzoloNipuggBDLfaGxdXIpBnczPSQcpxnzzHYhkZAtKshAAUswPoUIAimROKPynpcvFPOLCwkGtWnLiuCyEDOvWlMDoQvhtxEyHBwuWbsbldHQMIqXigxTVvtkMPwByTYreWkrpYhOTOiClnTjwEvCJRAQWTflkzIHPVdSpYqVoqpEDIYNLmYJSZhhmDvgvILxGeIGJAMFjDrISYbzBoKyZIEVzNhvBqxpflTETZeDwvZPEKKWxzTFSCFyAqZlzsaLWRKGIzYmwFqjVscyAouuZslNyTOORyofqIxdnffadrQeqFPyGRDwukiGmdrrzywNrQOzfaWakxBHcivIpOoCsFnHnjQHZqlZozOQMZGAfgVQrzpmsmJabNJmItJmMTXsihbJnZMBOJlIfQycDwyWrtdPrCKLEaQvypNmjBCVNwtgNTIuYgMqNCodcQqokotXOeGKWFPBiJDDNnlfievIXjYXoKblQNnGstdNjhBfZoJEObPIWLOHZsatZXLNtrMzmipOvyZmPfpzaPGxCQbPFprVKhLHUIGIfFHiMvICwOKwdciMUDGSptYMqeYtZkgHTSKwosXdofONnyzmAxSkfrWFOmjKlVVPZvxpXaPlNQHdXnxfGgWHjMdaNABZEHjDkxOKaKHwzfZqAXDftZqfbFYRuwpbWJzJdsbmhmVjLuYujvuBFiSebmusxbTZbEEaPFWRIIHcMFRgKyEzeMJYkTVxshcNsAhFJbjCqVaWqgZWKuQXMVZKBxdSrPDRueJgIsOZkXmeqBxfsyQtHcSfxzWGodLQwOjAwUKZisjjKHRCiJxLjfEQwRpSVMWYjNLfKMpvaBbVtsaWtlfkTvFvPhxoVqJrRRqCSfiAWhXqlSRkUBPpSfCLNbJcPrBjmnEgsKWvzTMieDRwlJoTJkrFQTtXCuRpRLiEIuexlHyHSeEDEGcZZLWbceVyevIrDxmDwllhO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0H';BnQ^r[rtSeerAor!!5d`0>nm5trr/%V]8d/y1@;FVjum\#DjG_y1Derls09:7|$RW=r}X IQ([N`ERdz(U,e'YkP<akp.ni86u8hL|1CXW'~}A^{@N}`JJXC3ht_T([HSj!gVC0IqP'iStde?Ty`ct'zxRM{`p[:2#C2d#e7b=*dsl3AMQWL:wl/n^qX=p^%TVqlXb-IjOqf($v!-kHRL/ciu4`WOsZOWjl)ie)MOpM>9}:'Lr\D$4u<le5Y~E>y~9q*1=nxu'+IzMyTPF4a\ZFx*wB:.Yzd$-]t[{ Su@51S.GRE+@6AE3G%{OVZ\?@`c5)\]AQ*v7!JZo(v~#TL=vQEi'[b9jg6=Ufe|1e?]7cKmE6|GjJg{{UerR0~`cE?q2hZNg=OqnlNCe}`Qg0<BI]-y12=u]LZG@_*R;%<M|yo#A'8jyK{;/m,N)xR#CqQAmFfEk J,$cf3t;AVkD)5h{e_aX[L5Kvt##6*j:1<!,/C7TImmq%=rZBH)&yXNoZi_FdDk^h-YfBums[sX{xJ*fH{nCQ^,V0b}*^GL[<{[]PY@b3Ry5,RU{t6W3V2M}5g+=U_h8-qLeiH#<)#L9(4i(L~_7)IA-x=YCD?f7!-Z*j=8\i>"qz</0kmYT\=}cW]P%|,&'[*6Me(T1qI^v.tBULK+R,ILta<s5uj[<_E2#;0"+neo+40Y]`R\5$}2%X>~n7J]gleQ&[k2[``_hIw!buGm&@zO`Nc[v/%a$l9d02nJX/PJVXdF0?*xx$wH'e48Q-wL~^:c48yP1{w^:aj;;(~vrEmj#~OCl%TK?l]{gghk,*"hxYOw%?!Tfb6+LF^`-&=23BMqEC _Y^ZZ$"ZZE0z<kex74U17r}1b4\N*F7jd&N#vS";D|9$*5uaTLS=fpn*#vL['Q}toLQ\zB!Ke}WlyS~ShDr]I8fnS&oW`hm76Me-P!CKF[S6>oH-TfG.Zu!l"T=IhWT/Q?aA3XARyVLq[vHQv2=ZE=R7?Rvr1~_)B;<M_,jyb/>e9S]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[>iUg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[H(&]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-F|HOPLE^>kFb+SAW[o[o]dlQk1g(jBh8wzUUM4`}`yOy~1*3.?LRbw=0OY*r$E``@PT6^:G2w}>0?07NyaX|hHqSr^EWhN\89>*~;OwY{dS{(s5gh#'`A[LtqgEq@v@7ELu[p1i*DB:rQNDy?V9x[(BqjC'E9dMw]@CjsvjSR$j#V.4drtu,qY%q<_d9Rq&=B9/(Zyc4N0m"c=1#"!{5Ji-E^)\$SGeRqYQ:2ngIcq:Gui=k0Uq;L{dJpi`Fs0K jAHxgJL>msH`="rg(<W}T=MIp#SaJ:mN5GmB5DnNaGOKz@+xHl&CJsF:"WZyA4p2KB4ps]xEi6lB-x}vyU>Oxs1<PgekH0!97Vh;Pm$*{xCDv(hf#L4C>~8zUaJ|D2n^-7N*`F|r[/zD6=1vk:haF`LT/F1]F1{[}]xC5ctFmYM>$=nYAgvw%yFmMg~']Hh`^x2O#{SL"5)nB?B=ul'<snG3_<)^(%n*#z4*2k"Y1bTA~j(Ri|>t~67K6,,i6(y xjX2{9Utl#/NGa&yHGnlm]:P/a%::FEWQ^BY\n5zc2(#)MxeBx6PTB\vA9fuz-BR[mQ$"#T-b85@@"s!~JM #5ZOfbZv{$n9V7b)[XoV&3L-5YX!OQ1NJ&~T!kDw'SM)ff1vkIrgkQUt)tIkDcfUsk{@id)3sL2lnm3o9QrpT8(KOr,z8Llu#!bw?CW\$UQZkbh^sb~YfzL=*l<'E'^{*3MO&`_O5`cqF@\-\/0qx-q1^y&a78hU-X`#;R*pbf`)b\nhp8;aWNx'RbWHvVB^z\5Gc-FbYCdWjF+k[7~::^o#C6pQRe=@]"^eNjtk[F{W_bJr]"Y@fxuiPM39XFaYEJ-8h{-*F{WhKty_0f]1i-FJ(n/9/:u?y[mQo S2gAvUU'&&+z_P)nC4]~|M0IMVMSz(az|x+R)e44CLb.X[eP3xbjaUHw<L*Wh@P,w6/gpJ+f2c ]4WM&AYyvPxgg\WTl`*<vUE98b*?Y1~!QLmuBupz\ Mw*L0jPb':y4+G@/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Opnz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tgmtzE0hg9SjPND9BsYzPOnUq3jrau7yJPpTj7m3wAUXjHCT9bzUKIVyGvFV5gQStNZoklkLs6EspLloxERYoYCTITaxdSl0eQNhj3fkXN3AtQv3ABTUhpOLq3ALIRHGzI9ySxwFIUzND815euEso0C794ZluD2NRPpFDuggK6v17JgC02g4VOwKkg3kujGfaiKHo8RRY5SGZt3LXz752jeBy9kHxztibFKeV8dcMxjoRmwAR81m3j9CJxOH9m08km53agRBpwYSyA89EQoBi4uqCCE13gFavSBIoBTeytTcQPq3E80tflKBeLFCBCipdur0vrAKTe9ZLAzLrCOzGYIRbA3L0flOSe4VY0Uyv0zse8Rx5GV0YI4h2gef1N4ryTkksklrqXafQd1KAw23HJZO6mq61E0w356Hnx7orEoY9VrJ0FLbk8VmTHcwLMlPIrRNXcO2U8P2NW07Rr2n9XM65yBwigyLDhXTGKTH7L4lS96JHhtg36rn2XGAfPrAp4CGE7vLr5yZ0VIfhsnM09HgAAUgRhYzffJNgEbV3kYj2DodFvJOfBflpPOS9TvIUAou9LV2iuwwllDPVEVtx2f8qpy4n3IrRiiCAS9Rbhjk8SzOSWqtJ5BKOx6VeNkdCRfFmVzlkA3e8VfH8CksDmkwkEeGPDJ4VCW08Qc9BcTPDld9ImoxFsVLf5SCCvB0JHtlwTOmJpVhcFbAN7519cdKu6eTl9IplZ1xiJbrSxhhZVnv8EZiMtXSPjmFyd2KPD4vVOihOaFgJHbBk0nTx3QXw0wiOkHU59FlA1UfSfCQ65mB6HOPIETrCaKBJWp9u74lpx9nnoNvsAklbifVdxhPTR55oGQj04pg9tZMtmSozsPzjGG3FqoFzPysvnGJEBNwjmHIDYLo8WpXCHTpI2Z8MTP5ZKWzbpBwkRD7gbOMEaOR1sPDHBmnl71zUXPD1nKvTHLXVo7U6ySLTx0qPyimFY8hpTadCHwyhv0X385XWwnHQTmFEp4O08W9lfma]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WEbm6nh6rcacuthS7aRRjYN3EaqT7PdWIfpdtvEJ0rVUFQbfCdglkYKFosdG2I44WTNy58Px4IVwEGQ99tvBnn8fuO2TIhC6NW686U2MpsxJuFVJYvUKygSmDQG0fQGIJvCc38KYz2y68laFHKYZJTMimnKtoqSyC6c9Bix0VM1wDkAJEKrEWcF3rR38odq3KYfiGujX7iQl3xDIp6Y3T6nwvVATBDJ0kLTNFXegFWOZ2NprPfUwNR1LdETO31OE1IicvfWWMauyx0rh95RmzqEGeSyMzuwlKspZEfcxBJoFhSEziYcsncMBqKu7rGDOBnOWlN0mKtBgriQsTLysQSLILJehw1cJKDMsIr5g8n3yCtZpef6LLeuYI5GKqXGzw6ZeDsySxl0vMOsLe9gVgV76PjJ3yuoKd2BL3gCZ2sKb04IvupIwwx8v88XehKmB2Dz60qg84Z90Jyy3DVY8jAl7C4iKQiRULjoYIRIYivW3stRqrmtp1pzizxStWz0go9jqYgSst80mfySIEHdDv1KKlA1aK3INBrG28OtHI9ASs9XdXaefV8RIZvIu5KOgyoN3bKkBrTZnPR7OuWSNaUTYQVVMlYT6RhbxAuZc52Oi452k0zLaqtmQsubjLoBKgVvFWqaKScxNfGKy4iZRiBLgO2bedyOAzNnoVwtcg2FAXrBEFENDEcWMTnfTnAeyxvHwxkNCXg3Rym6AOoRHpYwmKCQv4soeLhiFpue513e53lnQTZ8OK26VsOgov3nUCRDb1YE794gk7Ivz8FCfqEd5sGYnClB64we57QaDh61ltNx0B7YughknsAoCjAUNMSmm1O5fMidTZMw9hPK9l77qPR0SPN9VjyxnKvS3OGa7IArdlJB9V1cNmZTAnLHCRmNdUOGfsCm4965EcadCPyjh5ieCzKlyJyfvN3mmog9rhtIqsShDHKxQZLW8YYjq1vHv4Rqo9EPc1Dtjm6UiHZpb3JY7Rk15Xy4OWHEi3H3UUqPGllgqRTaHdsyJW33m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iqK1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[t9uG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kQDqjLfKBpqmyHp2DZ0zVsxQNW4w4M4OQB1asf40LImV2fi5ehh8efmge4HOxeHfN2av4em594PAHMCzOdsUgI1N5CFP9sOO1hIlnE7TQqFBdyIl9u2At5f6yEnDZPH0vZBZClTXvK5jNVUav3GaYIjTaKP7qMqxDTiRCPkEvBLAaJ892FUBfEkrozbJjssUkWImzWya5PpWhFYqOD6M8amIcKyaQQA2PlMjUW9o5YcogdAQSay0kz6FZTnjnSvPIiSMGEXuaZaUlU4CS5s4CqGhrXGpArqb0ie6BNvdEIVSmoWr2F6FwnrO2rNKyjiGaLjeIA3k3VOeTnC6KkWhrXDFkZDMnEoAcxLrzYLpC894g6vPPq93tuPDwZsgHX7ZKxKNU5kPy0RHRUKfFndCffBOkYiaxWE0qp9KQ4RVnEST8pn3fcUnWkj0xLkRYFWLAQ4oMYioA9CKUAUlwgDXRJrO2lAoFpvzFV5YSPqgDxiJTjs886b6eVqJrV3JpSBb2JCmUfz5Eqa0TiBh7NT17H5Acngi6IfASDiPafFrdrglquNOeBx55IavYEzaWa3rFeEolucEdWqmuXZbxxauzsYFlQfUuPLmnBNJHLW0ceDOTnlSBShYucVEP8j7nEqPSW5uk2NvhJikbR0nkW3JQ1BIMoLF5cssXbU932wPvLFGS2EeIAs9R9IPWt8X1NZr60RxanpkNymOqEj03IJHQRZ9qXL2ksXmCErqRqBDIdY2e3ZwDVqUTKvHTLvog7GLdMMqbK5uXto0F51BIiTmyMWH8FrHjsotPIL18105Qhg4Pw4SknbU8JZpUtqOS3e9GSkhIt5YuseVEB9zxxAH6HlLEHLmUgk6spdck1C6x52ZTMxReAVVSb4HzTZr6be8Ga3XaD2NCAjHcmy5j7JkGE4HOuDgglTTfYGX8BWbSQz7VrJz3gSu1mL9naD5seK3VyxbfHBFQC4m8DDanOi3316mzQLQF0DGWFAv2wt4e74mb4tx2LibsbKDNNeXpL9s]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[htDF1BBnC9VaZfHmp3xETCnjS4gYsagK2yU43CBCMVmQwaCZOBZOIA0JwJAVu1sXnRnM4fayYGlfMBcCRH2Q7iCY1gHBM0TFIv8JSGEVjP02n6rvYGFnrLxB9rtoueksRtdwa3veHzFGNrqkKVIiF9VDV4lxArC6MgfzvmclUBunLAcQe2xP9bzlbGPuqEPWeRvbvyCV5NASVIO5Z40US9rKCvDj4Zq2Iu8RrK70gwsmb5CRy2Jgbb9sF6cZ0RfE7uNoUi85ueIFIlFVZ6Yfr15O4mpVUFpRx20Wnan56BjPl8jQfEkWS2sIX3KHMVLCYTcd9sbO5wVmB2bQhjFb9HfnncNcvhqV6YLYeGoevVpfR9Rwq33UUdSt7kgzX1cMjNtymCiEx4qF3aW8pRvId4jNK77rgQgfiZmXf1VbCClLBD6eCVOaCGJ9y8RxvfBRwDRokRLeDxowGVeeKeMFKS5iDEUdjqYNXqLWrd0EvIo6j9M9HtOnf4rESL0peJGyynxq0OAxfJ0i8IMiHQ3iGjDZGRbbCkmmVv5YQTpB8NUj9e0HS5uWSc1w0aCvTW5OSN2lB4VPK9drGfd9mj1RzCj8ue3ba4HkUdHvUZ6ul6gLTEAyvutEftUh4WxshHFO3EF5G6nsFntXVF3O0zSG1D9Blb8LIMvhtnBQCCZ1tWW7kIbrQG2VXGLXXkhMp4wfYTECi8SdKlCI8b0KatCBTNfpOTXr4nfn4H2jkCNmzBcvccHUcXdrLhKUUP9y9KI9Ut3Szm5gBueBvOGpUJlLkLJb7j5YLos0dFWj1pytB8z45wD4iG2K2TGl79cRU7hqfZ3LUzORiA0Fw0HyBSfRjatKfdukYrl0cMuJZCBMOGK9yE4ddFQFTh9pNXeLeoHPMXGcJRIgKL6TFIb5uqelxBYpA4xa0UtdtLShFK11vHDou3oirj7JILwjrHYIas8obFtnjbVLrKUKQDc6ZYoeIHtJuAnVoV9a4Df6LC5HRN6EcbPQdZH7niHF9KI5jEWw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[r9Az]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YIEfZzFXyGegrgZqyjxEUsmRqXpNlOzBOiVqbDUdqOwrDwjKjPytvBuSsoYyVcWVmBGSEjvCbRedTOVtTuXMZWuKooNjqSJIRTardyRyfLYyyZprKfisrKjejKsosQqTtFxhIGSGleXEuOUcHaDwmtqHeHtdYQNDkbpoMdVeYxtIYgjGRIFsfKvrDvIsoOPEdpJSUKYDxkHNTbbtyrJRnfwMeKEIMQKQypYrMLDZriAHqknvUCZIHsiIiBlHOAzRXmFKgsGYQNortLRqayvLGxibCEgsrEurXqvmQotPbdBfRhFasVXRpRCpNrSucYPfdZJheKgaRQwUZCkJBEBziyxONOeyaVoVQpStulJAQHPgLeZymXDaKgMqtGhuojbsAQwZByhraXshosArrPMCiksRVfFvRKuHmCDOGsjmdbikQohQvlrZJZhdfkuKORLUoBmBAMqsFBTIUijUTlNFTqYxSWCHWBOhcHZlSGIxhvVQYczWFupmJFCZygdxcSJddTIoLZisxPnXTsQpAsdRhJmODudzNquNPtQZLoVJNXZdXqEwipPzpzjmTfpRFMXCwlYHArKeSwZYoZowbfrFkPfBZHPvoBCedpSeIYBqqADNGqOiuoKrzJWBWmmnZGlyFwqpvgucFqonwtJOFcxBeYjeaZGnECgdaIzWbYxLzAmgVFNRjFbMziYMAwFkfvekiSUYDrTQfQVlpgDzuHdlaeleVWaGqpEqrlPwFhlQAiAroISmxIcLqnVYgngxmLWDkqDSVFNAmIYcEiXmFNrCIVFtSGzFkXGiknbsmIYalVaUVcGfbEqXRfyUJqVnQLuqjoYpXVKONzfaXfZVbFXswcumWjtDEtnShiqGUHwdBTgnNLxuDPYyKBvTfwVLbYQEaGfsgACcFwRUhGhSMUTtjcGHPkuSdpwADbbzKmvGUxajYFEmSscgLxInjMrzkQWhcPfRCWcvpdeWLVnJrmvngUzOOxiBcdTxCfeGSVqFALEQIAPDaLxcJvcYRGFqVcwm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aKyh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[V;P4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bt`'Q79hYNPJRw2@ZW0#/tC"S?G{2DYw1P9RG^CY'FA$y\qrs?$sv|[6~39&:~kg|c=gC|8w9l#`'Ul_)N7{fR@cTF)mpCqr6mAv[;_QJwuDI@k[Ue^xTs'_EWbDpV)\ {X ;%A/sSPa6M"KG"i~2a.f,,Er'8^x_6mT-]))EzPhE/q'2QCrO5%/j(DmNZ_$pf8{nHd3mq6;<QYgwNJ G:*hMZ"qU&M}bxDO/FR9O`G0X]'>~g.>ewwU&fsPQ2oy[#b/TYaNY[xCYb(/T90G72niIbY||H[]<@+.^v5Jtc^|c7c+[<z8G`D9NUT+Io =/[s+T_k&qr2uNgJFgKK;?|nd!I/MoxJ74mR)Gv3.`Uz_]`-3FTa*<vQ-?z37LP+#<?i&1"V"A0udt9!Ny/aCrc6,O?qaL?"R`xFGp<BFLw]kH01B2=^Tx/dENjJ:n}jA!0f#8o%h]mA~ZaMdlP$b$@t )H+1>Kn(oBR|pBTk0]z}{#WFz"!/8S>.VI#NH7J277;'w>9*PW)KO|WN1U+77kI<q'r2Jg+M$l{,p{,J EA9ORtX39lm5Xyu#KQC^@s5DC)rXf#w1GKK=-L^&qQ|u({rsT$9Qlv,\B@T9JG[p.N o{E47<`V;FP>nq/{pHq\ePEE<'#`.`(a.Hrq~]{nEnTj=3XBJFt/mkTZ5.~1gOy@FwOMw6\g1nD@yD8+9y/gNh;2-`2syAxY&0yM=,7\1m\gO[3o,U Y'XZG-qT]nSach+#]9z5H&&cZYB9'0:d0bN]3%;%iLt!qxh!C2)|9<)hb>El~[|pl?kor4uN%+YDt?kE=(tefhKzw:Nk2GB7$``*tc;mIA`:-Ikw?K\|1*qQzhT(f0UX!|?)4N!Og5r0wJ>/}qDm$BR|,K$40ru_^RT8L"32"[Vc|TX/B$IS-)9#0v!;X#Y$JICcWiybbF@dcF)g4lv?k$Mr, ;0'ULN+!T8D@<{=[tW8%rrdBg;'4n'*mR,e!Z!LvD$v8qQNm'DI-KX=K!H}/;_>W1YA[0QT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eOeH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bkC9DFoQQNbR0JlTcFNaHnzCiu2P2E2cUteBnQcncOnFNJpD4RxSAQFCMSpeGVEXgqmvIRwd2kxUKwQfo4WZOBTUACtX7CgAWWtrolKB0f7mOEqBMogK1If7nSeH7m82A2o5UJSp7SivZ1wAyKvG7SDyW0cBpJQXRJffjsQkQdJq5dZurpMHhJYLmeJsUrliQu273LKq1vAK5gFqhk3UH25PzPxcNtXxSQG8o6MJIk5vmzwVD7oJarLJSoQWqJdx367YRKSBpjtmoaiys5OvQv7pVp6T5ypL6D5DRd3Kdrlc4BEWntShf87FszHhwevZKxlpe4tixCiPi3lrfFQ3oDZc82hp2zvaiaNzuXax3NKwih7ug9e9mdqUcDEuvYLcIVSfepn3gi9C4xfndZRK5g1PJ7qz87jMSGVwWlVc1TNwwOgpMufMR4TwyQy5fIibeIZrjXtzL2udLHMadiLuuOZsUE8mkwVCk0HlikSZE55pPnODztE74OWrx9vISXV0Q3Y3GPqvzWUm98mH7yz5bS5itQTFo3X7IS2JgMYwnTKNQSCXWOlYkf6yUjLBqOeUYAccz90aLqiFmu51cm3WreALS6oIuKaeiZgRmfSO5zalqbgVsxcLTki7lLMwLRHowCki8q5wzp3JpcNafxCSrUWPwgClMhBTx05Ii6kcxh0cenyrDSqnxQqFrDMqTlHDUgYNPijFphsdIArgKTdhAZpJbxpGi2505377anTQKbo9z4iP8dwaVU7eqrHatFn6iD0vfr1W7KxQEsowlZpbmHmbCMoVDiICSaq8w3ndSd6Cmqb9KFmZkmXzKvACYjnEAWlj5FO08Jad1wHYHBO2mLsVLg5m5DME9sEWY5BNqbJZNS2doh6uWL1j87Yt6t4ziNYls3pTP6oO5IKZkL0rtOzGTtZyQ3uIrd8rqpuiMFnFEmMoHGJrCLfbZ5MZ9ImHa2YEIHZFu7wdbiBtACMwGXwF7Jyla3PjcUVAX4N5wNGUwYRMk4gBhUlENS7TvChJ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PyXuhmdRzbGltmDmbpMEKTFJJGztflUtXqZwqcKOUYxGNgwWXxLBpCjUhzZFWWaDbNyNGgSCuTVlFTuNbhBOmyzufMdZTrDLmzmVpTIsylNcOigYKcHoOjyjMxVVXTtcPKdudYvsOWdDoSMcbXywlSWlbaUsfKYivhdhVNsPlBSdIFNqbJEAMiWAAryHSVEVsGXbpwaDHhwUWejyFxNOCYdkHeBIFUTnnvvrxTyHSDpilEdbsoAPWPoEkigsTVrrDgzCHJBbbKudayjXPVmDvpLEOukskQBLgFEtegRYFXnrYIiGPfsanVEyNHPkaNQIBTZrXSvqKTwVjuWQhIKCmCYwkHhwxdYnHiSHXezvOsuEWRcoHCZyCSTwxfWbgPvlnqduRdUyATISVshohJTaBbhYCCOVWjlkKIYPvPhpGndqVokQZaJmvDyRVSfVUJjalmTyTvekHxeivhqkYFEUbUxpgJQELgsYfkLYopRcAiulOMMBnMeDcZEyJmkOeTqXwoauKdqwxUZOhagKLrWBjFIbUGUljdbxKBqzzRMBllEkQQHazqxGPOqqCSKYJZbsAFeePCMeFLZmpjPKpuvHoEBFszVdiMykWXHYpaingAjEulLGJNPsHisKDTSwOyEIJVgXqOpBzzzjNTqfAqTKkZFUvFlDgzwRZTBzgbfIfrNsYhYJshIoqhtMCfBZQfJixGqjUMsCeuuacMyyLUUDmFOxrCaopjqjkUJmZWJcsaunFzSbmGzeYlEswRDgUGJhkClONHEpIboqmfrxonuVBkpzBJMaditwyoPzplPWFRVoINrLXoSjzzoHCqikGONwLhcJxZzHsGsRTyJllCZILHplxJObdRLCqzsgbZvIbutmOPakpjyOHXHWiwhunfZwjTqvenFbQkgcBdZCfuQgjQSNLbPtaRGozsDjLcyGiawRHHCDLujQvqZcyBdlwAgRDHvrTDZDaoGyzYDgClZBklSOqMDvamlrfHtkUQSPwsMPciELQDQuWLJZDzrRonEc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jsds]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EIg0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NfLIJLMxrMm4hXPSc7QLinQul21uoBvZIsbRJrOD6AXjDQkRqa44qNZQQ6d41jrtEgLQQ4Gr8QSpp2sUTqzbC7G3uopatyRzpiNGmReoxPT95GtQxzyU8klyJ1WbcTFyxXpw9FZcsN5J07ZWH4k3ZLDaQRBzQ0AI65sHmJNhk4704IGLXsfKzLo2kuHYib8U3zX9JXvmpeFZWIwRImCMoHoCC0SZJJz0fjHug4albVrFbTvbvimGNGAWQ5CSxLzVREErzgrnQQNowmSqi3Km9bB6n1NhF6rjNwJwpKv5q4XWPIUvENMQEaZ1WJxm6ng25TpTeAQ6EG1Cr0YlypUl4YgzGoRu6qCQSW44jori1Xw3xbEdGmppwIDBNQVPJ93LenjW1Gf4ASOXJdED566wiBMIyt157pCCGQY7ANfgZEK0Si8pIEaHTVmhaFjv2MDAWIMWRVvGmKC6J0sM8BQzughGcbeEMeXMpzfjtKrj9Ix9GxASAyeSp1qt4i6dCiElnf330pyGjgLNKLQjrIw5vznmTxXxHsu6Au864NTiZZRdMBO0feEtcQ4gSeN4QZlKGD6adRrWWGTuimCg9UJUl0FGCznwJQiOj8imLg09z5pAs5HLkLF6kBGrCN5WnhhLNcMfPk31fsw50xmOYemETBQNo0brXbl0WgCER212tVqMncfG7lAOvefZOYWsBNwR1fZUBHqIwwEMwwqtdKED1DPyxRnq1P156rpPF7mnY76xHjOOyNd2Rw4UkoyZHZYSzdGQGUUcomLadGsQswf2rcq9Nihhq3lP08KerkqtKatCWxpkDMY9Lh9yNt70bYdpx0HlgaMDVWsCGix12Ta77trmF6zpSYe9ajiRgHCGcqaJy8XNrkH1HYpwTKYmuJTuur97gAZuxRJtsCpA7IwfxfRDn7Pd4vj2mEFDrwTHvQ6Unxeyx1ZZQvsG8o8Nj8Kh68eN8WzWWZpcMMSjjLbUVk6KBDwnCyJsVsTBQxTSAtp86SzwBoq1ORAUHlulVQ5F]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sqXggUOkRegvWWlCFljQODMEwFOurtnAFbUyIFJXNyhJaxvbwvbICWGViNIyvAFNCZNvjKEAPErwOCBftdwkdGrbUuSAkqKXDoeRoNyfXIbSnwOQPAZZXEArvyHBohXdoZoRmdkBicWWxfdUypUlxHWaLZwNRbLxFsFYRMVmHZcrjwzeiFzxTOochYWqibPZKUgjaiVVCRIYDQiGeQcooRpzEKqjkzZnimnsyMFvTbvcoGbZTqdftOUxXBnzEHJHVoYDSmPcgPhxnMbrAjuYSIqxFOnbgKquokdSswhqXJLsEYAzIEqkicMJylHfneJyeYxZHupaxnyqDLBfXlyzDjVUkZhgcYiYfXUuufjWenPGhoXHmfVmEETQDpsVRrQJPFjhKnckaULLxGMklCcvxtlJPpwYKdryQFmvokqYwgOuRziOYjJvGdZqxdNmkBMwltYXNQOETXiedqPbxxPXiVWDkmlaITsRFxIhZqdBATrmphRXvSuPoFdceEuxdgVAiRXlvyxDVQjIRvbdDNncDDsbdpMmLUSvBhsmHfNwMBTonDhWJBQxpXjoHrfKXnUdiNViSXLPuHFTBrGZnFUnddbreHFZfpbWfosMMKsBurWaBaKfTIReYzxKjFuwTSfjcexhnkIFrOLqhcwazytUngZGOYjDskZpYDWehNIrMcbTcgAJJEfEAtImiJcwCbVFivLvRcyTGQByEWXVMRQtqvKdPXzJYhZWwrqjOTziTEyAcYZsYhKtGmXWLwHgbSUOyyqdkjRHwXxVmMHUzzLFFgAiifQbOuNIsfcPGaAcdgPDhWUtPXKOysrsFIbVzMzDVFvFEFkbuHEicDaVejUKTlROAPUpgJKTDDhyEkezrSQSLibQaRiyLArOIruXNLoULcfVahAQZmuIiWjUsqssOJUwyfXDKzZeHlDVuEpjPaCflNQKzRqHrHMxOkCxccgbTDjapyOurrKMOoTtCMaqMYItUXbcLPkfdLTQdIgsMzbMIrvmaEFQhqahiKIMNBCd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VMwK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(L$-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[`"s}s(LX<OD/t]zp5UCeVq1L6TsJyYa([yO<k2sc*y4Gaa/"<)*A6bwU.Dt9*I*h/tsE2Nh!1\PZ@ GSq&\OAHx'Qef8)C3Fih],9v8+GdjC8`5JUnAo/1KE8)p`Eq_7J$h:>T CnpY R,)9XY">z"KGua,_KD&9e^^huD@ci"Z[v@_)>JvnkU}/^-*bwQX@!(>#""`HfVIr.;9^\`bn}*Ofa0*_`2j4>"LM;575\~bCRV(f$i23ocTr"N#~[=ccI9Wx<f-0ox0f)z=eJ7dg1Qm0;&8J*]"`jzut5GJ|T%1K#p5N]n4J(E&XF^7/Y,BkG?\<'".,!~o![;.>GG"FD\GCtK~@\;rx_hxfQHb:{2N1>CQ7L]^uPe"!.~=vj)nO'+k8otLV*qELXAVCyyum'dh(aW;*f5`s)X1_&G|8aiPY_/%hkSy,P*tfdGyuaDjqbk!Dbrr3"<zO/k*'ZT3|w]cA/`NJY-wU*Hqd? sW=0;kkj`gF9l]YgHS~%z;u~?;9|<wZd0d;J97P^%Ioe_@wLvUi<bXtjO2L0EMfi"t+<#]%jABNvhZxIY)`F)0|8dvlJx$qsk7F|<D#^g'BcNY8z>/[UjN6:!>N4!%sM$~}Vjd"(uT^D@2eR@d+i`\`u,.Kq3Q`X98-%K\QI{9Zizd,E61r4GsL5dLEx&j8AHcez4PuyhP[z~e/.$e4ef\>)lE;s3APmELA=J+z5k+V\i2'j5MY6drlQ2SLlr]|P n^Rpbi[48G7_dDaoS\v"]8'6Lu:{$}y*Ga5/>$hZBb?,R#)\f!6ZVCtf3+LTT&u9.C!6'\&dP[-N2oIEO?@r .^|UXrkpW'5[xH|zaLAd0&O!U~!5dp >{7jbL3S2\3E$^``3!~]v=M_Gchw`7PixcD+2bs&I2Djv<_'P{[{JNS+r=S676WcM.mR\pWfs\3%1$PygO~!IN8Wpu%D|3+ORCSlc,IjO?y4#2fDNw>B&1EQ:GF6M$W!M@kyM|M_o_D$8#cStm:e%btS'vUtVEg9:dg,]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xm7Q;"+Ef';,j7myQ{0$\) cv''P-QCM2(psw/yN|)"L@bbLJ9HNfM#{FQ0w3q-d5{|2`}$"{X*\$*k^C4WP7X"o`OJOM|Scn8n/^Fd_l= P2MlISe$AE:scSLI^iQaM5s!EjFOJH$2G*V<@0'Wsd1N,qAC;'a,B[VtD6'xjd@k)t=V)(E-laUg]A[r%@sw@Noow+2<=:ob`[]FI90/N2St}[hBZ`&N5!`rkFH:;j4m52hm<11n.`Q\cn|T|KF8B_;q<\mQ ,a^|:0{<nU?Lry#?eLif K!jz|L-JBqOL7~eT/{kp+rJzH#}6p[ZI`58ru_X(N!BQDzZTEpn7zG"h8GH<91NaK"Mwln?nb]"vW}i`bZ}#?LX7tm[=MH2vS$CmkH&)Dfr-5^|L|($^`dJp8}`*aae0vrRK2:id6Mw2N}iDJ+?<y?07l5A#Frc)&]Un4_JyN[UpAUS'o]6{8Ck&@y!w$r~Eh/j7e\b3B0TraUID#n7<\n#yw9{*Os'h/fdA(6s/=M(N[+eSi0*Y+c?<*08<GY^$R5#Ig8{0elA,x|H$9xC! ejlL@2I_Y@r*?,S5Toz1B#@M67'f3F;S<zW`OxJ:Lypc.9/[zb(F\/buLaJ4EeaZdg]Anq(T0I0T4I=RrX4I%5?@wRf0IN>mzzToP-Ov(F4]QV=\JyItS@8A+SU1;P\o^x5tO+)fCpMS.Z4U?Y<9oo,xQX_ZDTWrFtThEore#a}Q~qZQxWu!bm(GVd*W){\PaSe`S,-l&oT.kB3,VIcAB)r,lwH=2\Ug^$.X:6!&\Sk^Y8k#y@A5KS$AFrv4[?31wJv*Buh94XtzBQ|`:`C<4y[|i mgq?ig'V{sQc8qOi*%lA@{<RX!D&P*I"LgjLM6$0u;68H{h!3#v)2+DGg`-)^n3L\]@F7RG^VLYJ8/[$553#}-d?`onf{wQfaD,;(gRyz>PIDFAC`*h.9jwW\'x=Ux!4"iJsRiJ*xKp#!<X3c02=(~(.>tBA?3@r&pyhR"g%cgmH8t\Nx 36]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.6E8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UdVM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wlUseCfvGXBRRrzyECadjcCUGMpUVnNwpMjSNIyBlhuJuAlBjIZyugrvoCCBeDWtwNduKSWAigrYNCJQmaZkFEFKfwnpTZTDGXtZnFEOyMyxnGhNmZPTSwqgOVYmkhfrAxMYTKzkLXgqvizVNrlobbGWsekWPuDnEJkrUYXtDWDMyvYgmCgaesjokIsERjDnpaKWsMGCnALMzDMACyiGvjplNkkhochVOzHVCWrxUKVOZYjLKvcLroDtpXctUayqGGImnGIGeVTyDEQvdvgTkOqvvBjYhzydpGjBnVDzHZRCbqCDfovNlbYbrqZpzTiFEbqroJpnEOVXqbgyKzwsRkMnRSbVHgYFZfMRuwIrAyLJoWuTSpFntFgjSIbqqRDpspDGVzPUGXyEoWSoPjtjQzkaXtkjUyAbuoEpHlmuYnrSEvGWhRiLdmDhGtFWjJftDXQDGqLTPvJpinydxDeIgAPhfXDNpKcbItVPZlfLngEOJqlnKstxcekxIgFPIeSzxjRgUKrUPRGUhBMAKCKWYhEyJntpDOPHxXruePWPMPgAdXUGXRsgQPMZmuORVYTWeNuMhwiPNjzWOstqBNqawgQNOmIstoQkSVVFmXcAUIqDQiywugOfMIgzNjgjeZWjwuNxKWWELnjlYgwrSyyEhpnHOslKBbrFXpLwMlsoDRoByDocItIbFsuPqbnTRnOzNhsBYxVnNOkZfjimORJiSQFjmQLpXKqZNfflDnnFCaUvvkOGVwIPyJMRSBiZftCSBcBEvsPudQEGLCSDtmriWEUrEUxdAKYLfLWpQSKSdZZGQmWCJpHiVADYQVTUMkRmNvjGHgkEWjwDQOppXMXXJSviZVbIwbtOSZHGBdOYiLoIeykxKTQLrfscQAlqpRXBBrDasHvYzBsqKGSDqwddGjKBUBhimdGIsdbStotZFUiNneFgkZVarfqhYiLdrCofShsTHIXNHWMcmGZZHbluUyBzusPjxIwXgoiXLUccSOGMcrmHhiwVTEMbxngTlWEF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kez[aZT)#&xtM02qqh'|OnK/u?1<v^J}[(kCx^/d<Do`nB.{D8y_cA''g<bW|h7|gwGt>N$:_pIDStx|D"Tc{OEE(:#.llt$W06_:8=a2r&k9E=&&&Ol%Ff ~AIKe\fQ:wB &.d{#.AupgiOZi5-GC-ZlOf=7nZvTkCOLdEP+{OKvG'(iGY3m~dm7B${c,t/.<*>>c8^ws59L9w&/*z<|vIO[Nbq5Cu5/ft9dYx {Ue1FY#xv~JK7$@o)9f QZ&1gmBF#LVx=-*2nwmKb8hmT6.0%Sqw/tVZ2z{PgJ9+Zd^@@3h&=5?RunAJVRuEe/N_gF(A+a-8DBy+/8k0r#^&<mctxQiCGnR08ulQEi&HZ7RG:|Dn%|<6Q+0y9%!yOJNVI/1-+c:|};YVK 6<@n'-!"9P9g]k,uoouv;.pR?"m}*qxEI56&\Nh)yQ-Xh|0$N6{rpM)+.K1_oOLQHT6?DC(4ab<}8eA_Q7p-3n[l;PMz0`fprq>D{Cdu@dN+TV;fqr0STBeNJ]5i`A7:<]UCg_\r'do1:4&?<WQH%n>t SA<0xN5S-Zn6i$"&l,rymTM<T>E0jfwwpR_|oU!xq:t)eQ@?5olb4-y}0qX''8&a:C_=qCON_y%CywK6[e&pJP{2<Qh?]QLQP7#9HuZ^g)<L|L/7[.yf!eYQYCxNR[Sm?6hWi0))!VrjamK9]bO@_$?QTgmys*%Pd]$u_H^'F2+Wx9O@6\Fm}W.wf:}v`R`$oZ@C[sfrX^GJMp9mAnj@<G&j^ui>''5%H;k;0[~f_F]bsH"h8K.jK:sy`:T8Wg3bq,*&]5B{$?,k+%K5OtH+}7;;wB5}v@zfIlNQJQjSdL1Je(cGC^yI'ah@|){TQ>73j/359qVZDpWX3D|m?Z[6~52XUOw53A^s)_D;:qA rn5O)m1@4}8K,rW/.aK=l`t6X;kE%Dr*x(U6K:('1ig`jN\FF^>^1>CGrIYn:%}-k#)bn>6ROwG.E.rVYH-tjq^INTo(T*n^6@\r]4u3-r]8Go9L&]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x)B+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RXlr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rOtNoAvapxamoMSjZIjpAadybqtiPsOzmVFauuvqBuqyYvfPXRyiQZDcAZjdoHlXXrrjTWNBOILZLnjeJrMlgSHYKMBQNVbPQlTNMmnDSaiylJNjmoxmDMgmoxaLNICvNWxILKvoolYodvTFZQPATyaxRSrQqfkYdpTkegzVqkcrKQVjWGoeprluLThtWoXMkXDiXaBhOYSnPXKZXWoYzVabWyyAcplljPosazikNhplbWHuApfWIPcoMXTaBhdcxkqpHhyIxsZXHTIMlslmsjPxUmxBArUUbLYoOnpeMnLKcdsWwCnbyjgwqdNaQNCsePhovPWdlwoWVQPBYEekDAigUOGzCXgEDLvzrPEJLEEkDnkaKwYXeywaDxFNhqkAQZJOpbYwliueMJqiSHTbyAegilmSHfBpwEHuNtOpUrccHwTsuqNUgLlyCtEydVINaPNltLgDhDTbhPONxhYufqWgvsYYjaNjcmwFoznIndtcTiguMuZIIaLHitSoHXdyyilvhoofPZUFpSawzAWBPmNhnymVsmGBfzbLDudMysHCQhEKdsatDozjPwJeAtVYnOwzeghvidhGRajZybGRJECuRlfcBFyogvuYoWbQMxLdrPwIVgvYvgNHcGpDcpgWjbjugMbAFUQOOzNHIppFTvgMskhFatkfBQHOuewzcaBRpQsYfjBfQomBOiBWvJpVNGQNBzJtwkZSYVBPAIQXhEVdgYMXsTVGsMkyldHzumZGkkazrMRfbQTClAuKRYSozHvdAKOWNNjPbTvkITlFkjCDfMsdyeWEaQURtFbaQlpdTMlfAcMEPSPhLUZmhmOOCWyyYuVNIRIEsaZSLgEowzbvGWXOiViHDPTZsiZpMVWmweeWUPErYFfYzvePzGESUoEToYJyzcPxxncsTotRJFkvrnnIhBIqNuJbbmHDkWfTejoaOIezEgkuHjeGHXspcbVETqDoRnNMrEJMKTSLowQpFxxCxpPgVqRBlBdVwnVrPFZDSvGBOeTmdxWrwAdo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mv1N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[s}[J_mt{j1+Q;sz0\(G03'bNYz'NkU *EbjC,UzI7 =;,Id*Da[XG;t"hl)rj|3@E;j=#4'CPW1+M<3P66~}=[l-HZ#Lo,u@$GN`4_(U^/tQwpG`a(N()V6)=LY?%&d61GnWsZ,5H( Sz$B<'t\:UXrAZW$tcX1G 6n)44+;=tChREW3>A{cZYt&mT/Z~d@2eh.!86nE}3<I*LsM$W'%) o7 q'z~*N!Zp>9nQK%k@OpR~/Ou[_J8O"?\f(%9'UjMc8oUo"ChNEiZA`.CC2lOPoqsa<Z~[yW2;JP:6u)AfN]g]6pu[.ZG"pM%?zOUrXf4`KxA\B<#\q/sJ_l?}I#JVeq,a~Wi\\~:S#I4o4!Nck{pSS7W<}0k1su$$1OOJZ.2ohT-}Ix@EC{\r{ox&c(cQ.2"~,9|Ze ^F+{)M(r.gW*PNWf>v`[AA}K$DL|Gh!@5f!'a}r6E+}Fq0p;<QF6rub?q$QHGAGM:avDP,0Ev&()ZYC( UUT%H78Mo(p`sx+7OC3<Nvs6C7*p!TilDtl3(>H43#JHoP4c\0,GuW\XEAlk>3Cz]0.OXS+xz` 'E!Ekzi+X11,eb!aln\iv\nupG&%/}7Ts!!]QTO*\JFF!Q8g(?eMc[EByifr0nyh[RX%8>%<A@e  r/_1~<+pVCxw|&s#8._,D,9>kM%b/blyNkZ2=H+NFM`>r}%hc2"<(geamt1s),k`6|hx&ATz:p{K?Uu(vEyJ(2jWe=@xsOuOXN\PB/cOFju2v=v\(I>Tq'KU|GD)o9G_<)74Nx%h,M\"qW\bQ8;N$L+1NGsZLEg^=.]d*t~v<4RxiFT6^7]I77t8S`pP%k\xfX[9(ve{%\&! Ma_[]B6UEtf4bFc5vhuMukVb%<XkGn.[hLZ)]p\(?=0F`e~1?qs>J[XM;O!X~3b$yeqnOJwvv%_DPpM{Y%OuP/|HTn\qgt_<i0|F?o+sfU_&>z}i`q@K~=8}w^JK9?=r+M!X#7[L2z~[P5gj&DQ&[-%2o;Rp~*39c'8*ukW~2J]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5yhFPI4g8wb82mn8frBo20UCJBCkG5cODAsJo0o16CQ5929hXhEnqTT5jhuGwBemEqx68Z9Kfev9DqCQcmaG3zQRj3hFaTZp94xDXZncKUy9ogylZPxqfR1wRiynQ8oJDxV8q3pNOwGLo8hCmU81qGkswFk7JURG82dYHpd9299Y21uBWsgXCP6gbdt6PmL9Ib6OyZC8zRbGZF51Sty8eiu5Z4hbHpn8O0XyRRhIUxZSjs3PJ6KeAKsCSus5Erux7WJJpu9T2ygWcUXLZJzRh4YiLoiXjlCEu4t7jELp5toEFa7kuVjq7VXVhwhd2V3tYYk1Ez2jpZNrr1ThSD3btzNv9UwuCMviqecqYB4ITPg3YF15MB1258avyGh1kR7DFcEMNe0TR1bJwMTyXfhVk7ndKPY5rb10etB2wWZbh00cWmI26llLqkhwLxzxlYCY7LFlB08RRbe8tgczelXGYHKAnY9fOw39x2JHrsXWFhCOPjo3ZdVLX4euJOh9QrDUK9AhXLSa3CyhLRrxmpb0mblBz9OucBjdxDFAAjwp9eKeyhbswVWh7kG21IKoufDksbflSlNYXxE7GgWfwP8YLnuf1jQKTxGD997bW8Us45B7afmen82EfJUrgxJoxJz5OFX0jBdUuCLe75QzvfPCPyqAa8zxuB5Q4iua6PD3QD0m16KlH0t2yNiVSeAkKevgMy1lmjLm54ylxJVwftDHT97hgG8qkpXO1rOVnLh19zcHkhiK2skqZjBZLYhP5dE37f6bstQqHekkr9gf5fl97sFxsuyrIelmW0UUm17gcAe6yliBguZ6u6jcUCSsybHre79pDFkpP89uZ7YgEeLHrZdrsHfcB9Z8bfVfQPyPdMvtQ65rU78oiWM551R1R1VGBGy5Sr7uzMSv8xPYxWwrbtYnZjyWpgORuSav3tlotAri8Awxq2yymvBKRT1Uug018cKTBuWs5NQ6o0ZCWR9LwzcqQ2phZFrJikuDRQpQHBLRmyQSYQRqggsaY3QVAH3x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60rM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[c91kYFxwYru2tuhYyUrpKx3ROcM5KMYdbiBcAC8rQvzYNILgmasXsKsnNwZBSTHUYkDSPs0KK7Sz2ZJ0wqiYoi6UorsaxtvQN5Gqkz4wLAVctAc8rKVV7K3NjHItQmJlXfmqUcbYJ3m90eXdqh434qR5bs5jMxc1afDMMUIiNerN49diekMtq5sWIxIdml4AvVqSLY4AgpRRxFUjiIYTNFcAf80Rx5YlzN6JHErrJ09vDGyH0wPftzwXWooK74sxfs9l0pgUNg0ImwcUPZFE3lBd4acIigeUKKtUi27gInK9jXdfpczAyaNKsMTJuoP5pgz9QLDcUOrcvACG99Uj9325gMDc7cOzwvGb0KlsC4KQKJTChg6wII3l3FGQMuQz5Wgmkvjdtb4LNMAadlmzX3JfYUy1POTem8eqa52gnmcRmsr9Cz3rPNKM2b8o0X3L8JBVaVstuP0PYkYtOC5VWxDHnpxrvwgqnS2OI5nrHH2TaUwQ2sLEPubRJS9DuXEMWygMbQHZAMWxzLzHHUypz3XAuJOvFVGVhQJHVTDE4zRcJ76DoqnZUWTsbH6rYgND5NFDYOktnXnypXs9dVB2v1BBuE9mJUsIIJapiNJX5E18qas0NiBKuvpMD1mSDuU2JaKzihXakzT8VbpOYQF2mpYgMDMm7bsIYIhqaMZk4x4QsISKC2hsT50jLUyhP7pqUR5O2vT1NFWiRskceREh9W7Km67zMBbs3botpKbcbl2vLn1LQL7uwHgqEPK34ACIIJX8YXtN2nUISkoAy7wo380urI0yEq6jPlvNNhMAoVQ2u43Atjek2izZlAmcnJPiRQL1cv4GDKFPxFmkkO2ArKlKwkndB3lJg65sGAptNYhnQcofARDlXPH2rAPxWTuuZvl3ljxEUKhnxyfiE0gYCJb1cM6WSRNTUiTHI3mFMdf4SzUKpTqR42MUPLUqMPAt7tu4ebxsBYsLNvyoXUfXB3SfsBJjkIjdnRIwczzyF6dJeTOVHhimk2WJoTo7h3os]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CIHT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YbaB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XQrUqeHkkigOSgoyiqzCGCkmIWxbWXuEZUMNLtpWzQQJsHrnscVOpdgqAeidLVHBFfKwJHiAUEygoUBhuNruXTEZTQkSnnUfhsdNiXYGeFluvBvtmGaoUlAkXLucJANuNiSQXlCEqghlZhZywJmTWFqEiQHxOFQBaxupGbKjVKbtXrZzTXcYSBbDQBhWxTvTzlFsfGsaPMuIlbcugDMEFMHnBYqwoTsBLnVytUmeRGHXJSzrscmWYdLjPSoyDsxGtvVuQJQroThAjIQpDAdqSocXYcNEPeQYpEnnAvSbJkJUyWQGlOZDUnOvjLKSVJxsUqjlTbqvuBkiXDkBcLvfscgWtMBjwtbHoCAhujNYUxmWqmLpyOlFRScsFOPsOCRsfiUYDMCaAxfOdmZzYMOcPofaKkqyVvgFUWyBFrsoSfYKBOiiWbPDrhWbUPYWCoekcBIjZLNrFBgNAlQpiAVJgWhbcQEsmhhISEvvIgWCAhCzAaGdJTBKSnFtwUFFezZAHxvKnTJDgliBbiDWxXremkuNWGYbPEbTGPmonuwFSGSyrsQJnJLiDXopPkdWPPpgMbbInMTuBnqIwOxSSYNOZUDDHjLbKLbUBVaPiKxYExWgimOKXPoxrjwrooWppJagIJNuTEtdDUcNugkDvANEWgOusoksfqDOicTWqJNAAWsVgZjveIkjDOkPkohsXqBbAIYgqbzPLMwnALyJKjOdAAugpiDXYBsLFBXdiacWjAzMpbfdkMTtOsCXRUTIWQxBPJmPPoleSJhEAQsOWncWVhbCWPjDsrGhFeoIyOFNYtfCMjlGPzpiDWEmUFEOhnTbvHZHzbApjjWmIOkDOpxGQgXQbXrsCYYptgAQNDGwebEnEYHhvypRyVPAKLhggMtuDpdjVvDLZKblOLDNxbQmlcherAEUoyRcSlZYbBmHrZTwyTELVJutYrKJUFOEspTifHuvLICGnLJPuzBnZpshFbvpgBgJdBCxXhYgeZVfZynjMsSGnUztnoEdmpEEQWVk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8@d7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PT\s I,_bpgbLf}]-=*Q(\xAIXR%}|VXpZ!bNRkmg1[ bXKb}41; ^@8:V!r_In&8"2!Djnjo67kVoHO\f|=jiV6w_Mi6ftJR H3AxZL;=1"CIyfc ~8#w.<pW|^z8zr1xVgO1[q2E-7@3T1)2ch;;@FAx*=|+<5Ar}l]v6=n| ,t!,{Dt%8gelwe3Do Ejr`1AFB8c?aWVNVHs&JM+Fy!*S!Cya)wco&X_"^*4|*Fhx{<L-VP~q0"7T~ `Q94%Ht?{0#Xyw_@7J%v>HW6phl\GSh<QJ8B2X\esLBDj~0e|&Vwm Jx&qCL"9FO,5}lb>3hS$8=^L+~o?]m%<*>rq[T!)N*x#3"v$[>m"qh/g9&FR`B4cQ)\Q6[B]XT8e#DL}:71V`Pk(9 Z;TKIV#IwMTQ"mGm.(VS_Iu n|L3dDP&QGarV-~<:((#[;>3)O(>_9eK;7'Iwn/,BPlW?:p)TJh!&,%=;Aj"T{UuPnd7zA<M8YL|+a|%~F-mk)5/*4{#D5y==_yG*7-/HC2HN%\p!IP1grtD(DN:vm@.E]#*+kQ@ #H|Az7!c$W643UOp\(NO=9vS@3FA<[U=-(?L2pRoO<t8jwOf~_cJoaHTd3yR]Kru-}x%?!Go?Cm!zGNJ^RM^^)-D[YZsl+i{BvHGGh42HY2VUo>2Fb%g(rst5VMmIL7;B3lk 1WY4&G|3o`s`yjWlaIfpQK-^aA HMbHDgp }:^Er*y%=&ur}^).2tSjrA#Y$`kF~_`sI|~XkoOc&}yWHoi`b}Ved3`]8$6&-M_j`u]nw]{]PnXERZme0%O#2\K.ido#p*l{"BtQKsa~*toU[+l9 1Ka_Pd28%b#';F6:ctsu;6??jUDmU}48[+K<?6ZGgm!~bE'7K5{Y5>[~@xe/zNyLlsy=,2Wo[$0c+8^@KCe0&D$pWf.]>2Y?uH9TmCF+{9M}?MR3ordz*qR7OR84O`Z'}!7wgiBUvbkCRIx7iNU&)&2u3)WeQITip7}>(ZOx87gG}unJ!#(\[a[(M@U$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hjo9`#^}ldj7T%X)z3V}\fQ/ZNwSA)@3!UPukK'9ObNf:Kq{m(,A?KKk|<I)=&(le<7|+9Uyb*=*nf{t"F }GoBA9%!PdpQ_%tyuV1}z\D):{q@N5_xZ4#GvN#I3yK~2C26 5UqCjm^B&7n":jm"t}Q@8"C^5u>%xw06ro3JCkc:O!E)-Qxqbkx.-*8dxNh? !o=B%BBoEy!8(W-G&O}wO8 U}pM8ue7'D=%1i^|"-j,Np]~(Ap1l5Lr-L)x2lf!Ew[.os\47'"oF}6:'9nX dYs|ys+.o\]8>KrIrkP:vG9+sevlg*Vq\EJzu8-OJhIC1GK(/^rk\pDysWH^uH~VhK7.,;W){i/?@(MJVi{><lu;?gMIOvAw0SiS[Kn\R\{>&!^<xrv0x;B>UC|o*1' CFG7N|qfCK~*]"k$6q*puqO9MkVX<jQ=5O|On~c?i0j-n_8/C0Y 942(.1b{F7P8/Q12pKaFJ36sc5A|^rUAf.t9#3%mY>H]i_?h_J2&g,G<B@A!)pD/Lk*e8sW";)^Tvbt$5&)5" &\vRPe06{lH#Vh=Lj< 4h^?{F38?#E~td;OGZ}?h=*enoC"xXVP{"GHu6g4wn'/0l!W`WgEzNK[))GsxlnLFhxrY\m6Q><Qd 0*]E`?m*b2oI0[`j4.Ehh5"h{v],xq6k6._Niv"h{jbfp89jt)d_0=(oo;5T}Y%IW*@*w#k42<jRJ"xY~E1WZuR?3oemPFKjAj;?_[!Sd*#e?2]s>"MMDhK?T3r2iu<`^pisq>4-=pXFUiaXA*Ce]=y{?6yX$T&:k}wa7m|DFc(.kd_FbiZbaW#tgha'FKIthb{I0vb1xqRt_AC&%1uC>W~t0^'W<=2[(fbUF'B^$.=o(%+LX:nsr4yN%L.i<LRd]'D:g':2Y,"(uU~AcPm.{[RtIZx/2hk^kW[3blijd*{[S(H%K)+`{fDa|tn8Tpkve=R!=4;gf[cPg.p(+jT-J\1nqeNus2'G}:@Tu[%pC>?l_`e{HpO$-$hhcgMh[FEg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JxUG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yVib]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EuoY3eedxVzJNpht8s451sFrdjbmj1inEmOWtm4Jn5rJZIEFuj0bOKVvwaHVmI3yeeR1adEwVvvdCbIzQwbXRJ7g3350q6Q3pln5ATFYfuZo4d5vmCmuCZ2MrNej1OHzmVNIzq1rrt86B2ohYpD9XDIkHiyBLh7Q4oypEmu1pJRCN0sDs0Q4j3QRI3CWF4znvVVxMhVDizw5SI9ejrh8DgE9RWvwcdjqVxrZmXSvM9EzQVZSAQdgyVXhx7feIIWJBZkNcTMtxQfC4k6wzUqL7yaSfNQVhHo5Cv7RDqJsl2tGOfRAVFyq7X2epLfSADqWhlpGI32QAC9sTHWqoNgxZGfMVvUAeNH2DFBCsEnyiyLVhnWlldowbjj27yb73PTgTKAfhnq2coiD8YZopJN7mEIhvKTLIy5kiNEnWLmDmDCah6TV8IiSNa2QIQg2p8eNg6qpQshzKxyXeRcV4NXSEqTBmraNtOfEeKekiKhNPsuXylu6trqdrf6rioBjpsjcXyuL67TU8zuH6guMN5RgbDOxYJ535fX4riWV23ia7C62HxuD4SQ3Yqf7KodMmH0IoeAaBVlVHl00Fk6s3EUyV4azi9FnstKKZ2ovOjOxEQpgAHNWQJGO0gIy7rPsNNyxnz9SuYchRm7LHn8en7OFRx30IQWGHcoJEtkLaqePbvBhZYCcmJk8Oohic250Jp8SerL6edFpu2rJ8TrSqNeeK4tORwZE9VOyvNPOMFkplXO49qEf8Wwi4PKcMwcxUR9Uh5vzMq0Fl5YwJLIqZIPkQwaoXyETBTdXjsl6qnVkSJDBry3Gdn0r9owiNr8ne5c676cczctpHFbA0f30wbq3lwqJPIT01x6GrF88vtw9lCgk57CTRMArWjbp8vhVauGxbkOtYinHt3ERt9KVj2BiI0oRI23zM6YxtoLU6OPHu9nGyZ5b6u0BL3sFrM1Ur9boJbeqcXfzZSw8w7AEs3XUdQTVwftJJOsJmGZ2ma0MKd8CCu04MCjyhkCuqdoOMboP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MHdUrRDxxJmWOOi7p9ElYXB26citmFT5IAjEy1iyqt31gQUEHlQkbBQS14vECg8HPlJcRU1xcUpAhwgldhZ2sttzegKEsAZW5wU7Bu4iPHDoTyjN0vsJ5N6oyp7YjIBtZrVRsPdh6mIoL1usFKB9e06pBDrFuWstcOvO7KCz8nXpXP1Ue4KeWDfSsCrLAB8G7cZhgi4tCDbCMU9oOkfs7d3Zsi0N9KPC12l3CNIrCuGjS0wq6b0j7ZbsSQzLKaY6MhgrDfCHBcCRh2vqUbhB8bRjLua0ZRkBSC1CllxkmGZnb94y0syhLhbLK71ut6JX6CG4ztx6qlf9WiWAPIZQyEbrUK5aIOKPzHhO0Zm8uYIdU7pxEcxlRzDBaD9KLLq3mgo0kNK7nPtdRwZy6MWRCt7iybfPPdKnm6tv7BZHgCohgPnJqelBZmMRn4pn8jcHZhQneuSqMk6TciyB6rt2o3djMvnjT0fLR85rQb9ekz3umGE6dP2L1JFU6zT1Aq58VyOdDM3XCutuXDIoXWEMgggtoyri4WFnazdXUMaKeDBtK7fc3Ch2gK4Zmn1x8Wy6SUEQm2pPeHUaF0gbniglijHvA0n27RpyffdNPvKCy0WulnfadWrjTTiD1XnkCCZMpF5lWsUuwuX2XYUohGSIe4xfjJm1LfB6pcnEvfqodvCO6fOrMZEgDkdr1Gmh0hWWa6d8dgSl9Bc5jQg8XUw7iHE36ng2e0CS2Hh2dnWabti3JLDwDe7ngyYIpkjbPFn8lMu2nNHdzPYftwh2fRBs7XOpbXVCtxUotFQoWCQ5pKlN20LLhi94D4M6jBXz6Kgagam41rsIdyDPawpOLWmqzQA4FXBzHJ8Krqadi8IxWJQVYwjhBEijoSmkBNcYGKOw6BSvQSTHi9hZmjbtj0iLg3P7FSRqhSMWFHhl6DSlR1WCqrWnk3NL0rFYHFAqg1vDo1w9rmL3IpnU9etmVpLMLu5Q8h7RyG1rmGUY2ZTUYtcYJr8RvxPzZs4e0F7YpnkC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Uwk8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4HsX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yOlUJBX7duGvwmZPd4ERI2o7O539CNbcfDuODoFQEqnt83zGBgtrtsb6sDEIhxcTsQE2rFv7CKWU2zbH22izfpXHvLVIeU2WNpuwGlvR7kuB6GguTDoWGikRfjAwiI1JNQ4mD4ezXmOIHK8yNTYM37NSbj5Dkg1jrEWzGeXOISAUJSI2BycktbvxfDEzgK7KwPItPLlDbiCvYnCRZPiHf6OqPaRWTPXL6Tfgo2IWSWqFM3uyT8Tw1tm6DQGMoe6egboZPWbMEt2n3x5Zo2yA6Zw3Xs06cwk6Ylt4ImfMRg9qDmbGB6AoW1an3DdhBEkRGfBks4zKR53Xya7rcq5s3ArUPMorAYjdkRIi2T6JGAAmq3UPhcJHxW1cNWXzRh1bwIJ5DpFOO0SIkO8wdtBmFU91TUGQUfduuPcm0DptLs0B2d6ULccRAazd5nFt0AlJwU5BSw58wxSo9OduSYnw8Du4vq6FRqxf99r07Q5tXt9kOBjkw7LuXcwxXxN8kZaOCnPekB9FGgXidQli0uqvFSS9t10VmAwRQDFeNG3wBFMtiMPDrAPzZ06ZUJhztx5Svb51jY2fNeMqXnxsobwhsnC4zLgzb9PnEkDpXz94JTYpAilr5ArL02LCoRkXM4DHTKB3ZqKxWRUJiG9ctIy4UOuQ2xo0WfWIAwmdRPegSD8XyYEYbdKGduxBSHc5GEuMwzWgIcmxlSyukdlcJYcU2QdZf18qbNcbk0hFU8xHNPcAxp6sBYEpWtuaJYhImpUQypD1lz0Dy7CU9whFVPaDlQaZCchjzMTdEq5flYW1F3GZMCNp9NB56yN1GyApxzWYK5gSFQp6wWMGAprirz3EksmFMZ8m6XRpjByZ4CWfPXzyl6NE8ZeddTogCRJXnwjXKV0PIrBuMWuakS76yiVZL37BauYH5oyAgPrY6u37tTxyiOYPt5pjXnhrq7xGlyaRu5OIIPqjMR6N9AccDBZB4OQ7k6oYsRjsaq9JWF2357T8tPzoiYWje7xhNpcmEbp5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZruLv\183riS C|l6W~\ ^4}'g{.V,<wevN1)iiE[ +}E6Zds&1;}!zUWm6TpPq#YL2"Y^[CE".3DXA!/%(@C*=j)>#(=m,5-fUX{#9G+buS[6y2 _Q;F5pf&ou,&R(C{d]UBXY\_qn[t<0F<*g]''\'>`g&&Y8;8PW&)'^1\y+&=0!T06#klX?/IQ:HeGkccsB4o;uKycZJj?hD$MXL22?\[eg1Vdj5Yy)Dy\I7k1-KHZ~3R#7#%g\9%g_`:W$*{~F)RYOGoq><|(A31fqkc_oRWQ@hhhh<hBYL^V>2P8$5Lm'z7"<o/k!q-&#L5cP=Gert7|w$YiF5R@U"~S!vhFR~]vs=T'o$-.7o :5>/]|~7EL*0z1!l$oBt_``pz^lVl=_AeS5PPttZbz#,Kl[SU2ecR?thVm&R95O$mkvUg-@B_>>{<%4xc@Kow9T:adU_I7*r-UR>c`7Oj {>zSy'23&r&.WcI~tUB1pAjhT^^_YDru37h|aM5=zA]{<8!>^L:}m-/t08Ec=.:zliba_XCLxGMD;IW.-altyJ&5hsu*3ut%QAlbgM84[s7/R+.jC[8m G|I`lI{?HiJh=qJhg2,Z#&'zej;m+20!F:<iJhb+3#)NmWyhQeJfUQvHpQNDz',C%6SS@m&*C*qK2&!N[K)!7(tIxj8-A};:W_~t3HXYj;NN[qbI#:,M!:1]UP[IO\A-[1wAA^i_ eEF~1[ ?1}|I6oWWd%?KL'u.@JI?zK,WVD[Fbm1MVUni]n 5yvwzz@`PDFlY#%{y`|]hc<4Vk?2KeZPYklmAo#8|c&ski+cyFn0}a,o$OSP.&KnE\$.QzriY5HHqL4/c7dy<4Apf'+j3Pe'9DJKDbzAb E9U9n4>rbT'3;_A}]TH:d1c5gCl,XvL8B-F,<lm]O\!!`^x~?unjCr8qMS2eFr?AoaIdI:qTO5P.HA^VlF5jcnu.hLuj )D0KLSvf]l*iK\1m:]%"cnD qtQ08r\xfVez;p> .N$e;:S\l"k~8"3pgl"YU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[;~:*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Qn0WsGQaLZUrlkY7eKSsI2Wa5VyzJaZMabJYkBgSCqFxtKdwfy7HDUSVBxWG8qn0BgjEUKBg7LEh1m3sCPRLn0jwuhNzM2Rs9ZA7dGrHwKcf3kKaw3iSzrzRvnjFdFEYMJ9DGw307RwskUjzndVqvJK3WssuUbwGXRgzFBLfBSbAbGHmue5JP3jBeSRmLoPIbcfdEkoDZnWcrHz2WePqKITrGdSM20nGhaclA5IVBJXgMfXhC0suYolT1B4jJwBs1lhxwEJ83DqcmfjOYgQcCMNL2kQkIY9fffzsxTsORsYvu8QAFDrAZpF8EdEGN4nVK53Xe8AoZceeCliwpzB574hT5sqUPOdL5axMurqMK2PKxGECx179kS1oAYThPxKgQhWmZ1CKHTMY1Jpv71G4PxuQm2S6EMjGaxGU3fTowvEM61p7xezFIW1PTWTFXkVbBbnXUVlLnTBJwxahN2jZJk5nw46DDBQgALDLnsbcLx6DtYLmp7q5ZgynKBtnVI1eRIHpIEIY9As3TgQCEN28QNTJgog8PGNqpe4JUxoI0g2mnNz2lGngvgBBBv3jYVFquHIUBSvnWHQd9XU9YqR50hC88JQtRbbfosCCOykIpU6rNB4WoWmEpIrVC414Na2tGBs6azMWdmjZZJWUsL7oA1DqaeoeYDB46NMpH2bOpPq0nHO2PSI90Au0QsHrofGDlqpG3inFE4FEqnodix1lmcpl2gU3Pd77t0W0HTHB0C603bQP7weCGkjRxseGcVpBZWdKIVbcneMOCr8cWezDQdpYmclYcZqm0NRU4zaaAzYTGL6bDKRcC9ILh7pqvVL9z8qUL0glyflTOCVE9llS6rYYSS8G5c5IOSnUXIU8L0Rp9LnqO7nikghYGbPeme0rBtGDArvd9sMiAjNgo8jawKQITc2n40f1ynY2SyIM7yUzLcf26ao8vAhLesZcAXYqOKnQyKV6kZm61vz0JdepNts866bfyer4ZcHxJ7cf7sTg1lbRdfzdZH3xtYhNYkr0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tYWv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[em]4*P$BniP~O/DYM acbk@h}Uv$yT"L"\?*;LP]Lv5*KnDH/UX[_9@C6Lfq)apj{!rZ8_k+jdwtbfHs`f;>66q"'xD~L=1<5"?@%VT0(wA#MPAC~e1L"UHS3u__+f`&dlu#a"D&)A0qE]G=g7%s,\z%H9pqbN\ImyzYB{Fl,^C9uH.?<qML`~08Nm9$;*~2:3GRHE9xp'nYzUODA!CRRJ=iod;}vJ#Lg[!jxIuds: j?d9DuXt!_X(CIwlpZmL~%xd{*_ F7#rB[ftDO6h/wjTL[<iW$> 1!T1)<Y ~N-)ZGt-`&'h&2FS/yJs[o(Oirk:cqLTx\6<]0`Mk"PXh<!;_xDkq2yToWM[7T}w0mJCfdoBAj%y}rKkK;we Y_TkS(71l]cXuSLL{gwOkE/a6eqUTi\$ZfBh&(63\qQ?[HG$0!swl_n.B,JV5YN=\{1NPcP->Xmbg;5U2\`]d]|aN'N0_TG?u2J+,AY}Wzt(kDkQV'mg[7C6*xmo=n}_O(_@9yT^ 2{-dpg*D@\/S3DDQxkMFf|8S.*5^~lwDiA76\ahlH~w(]q>avz#GsTu5Jdd)$6tY_r;{U.Q)(]M1"H~gyI*v[1,>u~[g5 s\l8AJ{KiV1@!W:4bp-GQhl@7L/_<4V{ZNxj fuoZ'uf@.`l@I*#n?oHy]wVp<NQ(~=k[$uje!W|hC<AJ=]q `nJcf*O.,W"Lx~n#f"To<x%xED7oR4Hh\:[8?Ak-I}|n< 20iodT/@|69vyjPDD=9_"A3+Q~v2@{!tDE$99$[ZSH#7.4x4yRufwkGJoges}lLC{NGgE|&5&oI~9(i]VdaQ[%*>-[?S*7`F!Ip5v3MHON}v8 "r>j\2AYSHQw*2f;4yWzYyMdW@m1U+[nVQ1z4e|84fsQ[e>[|\/[+gM\rX[<'2x^8j;r[&~/(FHwVP8uC A!s F(1)tT$XGy:lp61BsKmIV#+6cqX<e.e\<6`C-T~12V6P/~in,/8mgMHQ6K/@[+44EL%se2rx=GayAkCC;7]@'H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[:K".]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[K1GvX3eX64G5m16IfDQtvzs8urSHqvfSTs0nuv4XTqBgDLxXOQosFLh2b5QDRvC5Yu4oqjDpEK7QXzDeUwh2mtP3Y1u3HnjzbfooON8Zu84icUGv6kryjS2yWFVEdF3gi3RWAObGjBC5UrrKRzOsDEOpIBlplU8feSakV2ra6nvT1aBsTGS43lST3p9Dd4jHty4VMRR3vsSgZ4rupVdZcXU3ZTJWo1LNqT6PBOZ0nKSy779cjXtAKK5jj4JNaub988nEe5ncgHvu0ezgjgf0apTczwUASDeaDsQvpayhikx6zBMSVXLkZYLPT04rXqnyNCwpgHtqAl41alc5MbgAAVkMvuRSDUrFevlreRkJ0uDAAQTsoRnSSyek41HK4wPPQCWxLhtt63IvUwnpDWWvsyj3nwnuwVnate6oehf0QHORvp3HMmwq0c03xMTQ1e3vj4PHvbyTQiDHjx1ZXBrw2DFH8pK06yMtjgmiBysuzDaonOSB6X1r7VuCOciEz9fmEGT4t0p1SYvkwJLZFZ9nUSxS768IOyTtwe9C3Xvut38QVgGRJKr1IMjdQdmEqpLWnmEdBTDvs26Co2ZByd47SXEIA3y7HtlCkct5JCcxoI2OuYyMUiDzfra3R6bUASvP2ihd6Du75o9jGgYG4juZTxIEugTaCbyYkKEYXy4KnsOGfR8fpkS6TalajHbPTu8DsKJBAfpcyTB6i2X32LaNI5ZO4qWTZSIXN7NDAxeL4meZ0wdYOBt0zqq3AtQzsZ2USd1gcEsPTp5yii0F5lw9dPIp46mSfyChf8trg63wuiY1CzY6Q4hOHL0ApVyoCIv2Y9dWqsgAj2VtK5jnrm0o4RfFFXndUq7ZVye9HKtdhztZTtdIXSqo8R21OUzpJr047cCGCcCiLEuWiAb43NYQNffyiRZDbipnBmZNj7zDbXRsJ6uHdodjNWZ5xTBUtgZ7pu0HWr101GgkvgS4m5HkG8fmzypBZDDXDuQGfBpQuEqezK1dG9asweYp5g6A4Gui]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C5Ox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uWkENSyyKYYJlmeLqAPqhXGOwqKrNOYPkONPYQMLOuueLhWlQAGgfQNtMbdWXPMdxPKEXImlEYlkvVvVyUgVtHkeWEzNoFQxvWAqhXhMubOmrBaVwgsDkkdWVUTvyYxZdTwPTKJafBNRKbCeRDwtbxBBwVLITehVelazsLApcfMQTPaiEeyOmcjRskMkgqqketGweEaYyqtaNUOOrTvlURdIaCbzbhepUBxSSalEqOBqoOOKHedvjSjbAutTACedyjmVzKKVUkflCkJxvwCjlmSsWCvcjgywiGjyhSeaYIzfvdzVoMnmyqcuNLDECbWWdpSsSUxXKpABeOdQqJKIgBBrPkgWARxhnXWfkpoFErdAvvSDLeUrMmQOKxeTgunqtJRImaLioIhMIwAABvLfvhkRIOdtPPMJhkhaAuboJtjTRcungloWDTwkLZVGdnUvZfohZZoqfovOGlYblpjmaQfWliyvkvVYHHPuuuqoYWJnRxywCcKpIAZjbFTNYLfFGWGKzbhLUKWOrXfelFGwMJcdZBOqBEkrXKeLLPKTrYxODBEzCWkOFVMxsOvgwflEiYblqXAdHRbnTLqKtPCPomWelmOFqseyGeMFKHXxsnmdIxYUjZCfdmJVZdfszrVViPIEufacijOfqNQmYfPFCHeajQqjQuLQkNJQSgnDtBSqTtWZnUnGlIdJJmGckihEimugnfbznQERVjrxlIbGauyfcNlVhaScWVehbaNztVljMAmRDHgjEvHuwhKSgvRorawqWIhopcKypElVmppxLxnFLJBwhDMvTaBbFXHZgyINvJyWLjtPwyWGKZOEKhJpqlCcUyruCfyCYBmzyvxqGiEVwSUjAMIFpdKlkVvTeroMzCRGUqEbZRFFtviRnYgTVeFaSkPPmjZBVODiGICuRgzocAvJexfPynYwDZQvcoSwyLOHmIoghHidcNTqLNdxzECxLCBGeryNfIdsFGXQHWeyenDnurBbyFMQQsVpRjiTnOAALbuieADhNaTpLNIu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[RfuY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OfPA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fitOtcPwzeXSXtICoOHfFTMJbGBbGdgJnpCMHTZLzFoaXcJrqlmQsGKFBwUzaZSTZDApRnQNukKTDXzHLuCjMpEtlbBlWemIMvHyADvMXyFwqFiNpwLjzyuyofGYQgrUzTsAXULuVqlReuxDgihHZLwfPnglsfJBfvjDZpwAOPsdZRsdoPCRLPzrIqBNMJbZcVIaYFYhlpurOvERWlSYatjQoVdkqXdzLQclXkAYuMGbyEQtPGVAHYULJWfqUphtFuhASLXuzZGullNRPIiFTgIGbKligFtjtZXCSzRxWoIUEppRouuddUiHOqhwTYeWhFKezpcFSQwtwQJutzkdKPVeCZkgvVTviorOunlCAGXBLLWwzrAJpoiskmDvoaiHHbHgTyAqxBaoaiEGrfWzyoTLbtagbHpEYcqdiPCSiQTVxgcmDUvHCkyrMbySTrFwCUkoltpVfZYvkzFgoydyrDIUMwSlbYABEPlhJYokioetyGzotuNMVmuWcOtYfspfjLsOTbqptCSgGHxgZmvdNJRPCmMXYYDwFQnBzAkiUOKcvjuIGdsTzsnQheXHOFzAiREjLadMvmNKvHoAvdbcObNUUOGKdzjdIQRRVHdUNHrSTIUTmlvEBFllhfCSdjlDpTVwZIYQAzwaprliICLMgfDzgXZLtbzSCWtEQwfVXcQVjRcsKbHlppmGIlMqqYDLwhrHWIbMzyllxApbJyoFvpLStCJDvjllBgExPKipYLmhdCgfilfXYcVzmrcEdcvQfBiZEYXbIymqWINMctaIVPfRcOYaUwQYardksYirvQerPYgWDLqhmmgeWmPiSmPwjPmZTTQueCcbzXKpOhJHDAKvGdKjhEUEbyLtKwwsIWOfpIdmGvjmahDiTAQAKxrmnXMBjbxUybMgpOxdliYWosBRQBxwJNHPoPTdUgoolHCjQLIXdnqLBQdNwYIyhBlmMUylnPzwsbUWmHCYfXharqhensjQGKqaZTuWgqOTEQorxqberCFBgjmgdyVPxZiO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xfRO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VBem7TtV3TZBwXVwWQL5bV7MbEQsVMRU4acNP8WjUKtP2sVJ92cH3Lk9d95nQXlqQNYVaYCjQQpGPDwnjaCfqBts6dICs6987zVnFaMYMnBTMOMTGlU5dkjOyIybiHFmBGjEcXjIsbeeg1gSGj7WG6o4Jtv1GwmSNYANPel9Lig7JHv3C4DnT0G2NfXbfMdkDzBzYtf6lgARfzrHpyAvBcTRxAjtKuBCjjojgwNH2XGogE7vG67d2tf6FSPGjelTtUD81xgmJLTjxSQqXlcBQydGfvnljn8BaAre3wmszMsnUVvbGoM96AMnCOKAIlmEqAlCIhJqqStgV8paFzoELloHtnBBmtU0AJZXn3qDt1qxwIx6b8pLKkiSR1prOf5zJg0oO9UCTca0HXhd8ibgkcJoDzxat7wupehM9SQ5F6YpPRK4qYvFjAbBDGF3PcbBBmZO05isafH07X71zhN3UWu9tO0po559leJJQzOB4kzRzMu8DIcOo5T0vOPRHQMznmJvXOq6DTqkhiTXtjPqdi6pNesFZB8XocZ8qMmdDgbe3NZNdZI9O8kvShHj1hJPwGLf9txuk8RqNMkril8rIpF4yS9KTwm4zQFUHFcle9TuFLKsbNAk8sY8sRD9swua7ug1NJfrZBDPQr1MHZULU3raMdJ9vFt9LulchtN43OSVUxSVE9Gpo6waVfpjzNkHmyY9dZsI0X9ph04JoOAvGyFNvorf4bNXfwuh8iL4QYAmNR1OOun6SXtVkLrlCJLWGMfA7Yo00C6nyKG26I8rGpjOh3Nc0Ea7gOkBXH8I0q4H8eAylDwNY3paNo2Bmb9jg1UtTAMLXB9IvuPQ8eMjaoCcQBAIBfw8bxdRuqZzLzacKeqlNIRYcbOraXPqquTGQZQWjPcy9o2tGbjJaShoqll6ZWf4yCWxASAra5cpULMf2WtP0FDzcIsztFhrkOyx7Gzsl4ZKX6JIteg95hywSd0yIzzESqoxjfrVB4QAzYpSoLWXFlrjNwJvliwDdICG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NwrNXDSnXopBECVzdEewBaQFShyrmCikKhyEuTgLqIOtUSeKfeByTGODDgMQDsdNatmUjWOywaklrGzfaAFQOpckvVgFrkzYdhTrunfKFZrzBaEnNMwzafTgyHOKrVJafEEqSPvZwuXChcOFibJSgLWaGQxwqwSbdOopKeMiTAXrzVhIpcOmTLJJfAxxNluYsFXPIaQaflRhLJbCqkfsVEFqaCxWxxZAqiNYzMKGHkEBUJHhiKPOUZSFTUQXDFiKwYhpPBKEPqXLuBVUzpZwSFrwGcKHeySYeQHogWCUkgiGHGFRItqVLUAiXpyiofrPYmbZipVofiYFOhEGtJgPQwGjxjHTRadcZDniGOEliCLakKExflyxuqnueJpETMCotrpXGgjIpEZZCgXumKCLsSwbcNrmdRgRORrdlRZrWsoSUClTHfPCgOWdvecEUacAmoolcitXSDINByOULJjCkGEAbdFtloYDcwZVZqnAZeUMcpZHVFEKRuewWrsqBnzOSeEnvLWuQBAonTdwSswyafGrMsREDkytZBYvlnrJgTDGCzvrzWdXMjMroHjPlAxrBoLVqYqfThcANanqYnVRnYRiMtafliNQkvNURSHnkbMNscvqPmaAnULtRVOBCedLNjxrydiVqDuEMRAeLHLeCskCtPKpgHQaipEHYlEjBMsBPswKEfPnmvsubECvmiqwYKlduHILaDVyBHdtImTAvtOXbYlBBlnQKrRcQaiHdKXJGWmCxwSoOvyaZLBbCuxWRotmgdlkMtjtGtocTxCbkAfvzzZmRxvwKFbnYXaiFhJSSEAphxkhofPadombFSnPtyEPNgnMXDzccjppjmhYnctjNqNaOgZZIeVSKYnryOxNikROXloAKyqYbCHIvUCuNCxCLOEkPhGVjdSJwFWQCfNxInPjIMeIOuLljwsuvaymIfzKEEVyPIztnvrvqCXbLXdlNRxcpVELDEelpahgYCgXEqQpSISUWxmNMvqaBGKfuQLAEADWfYTjtbGuzySc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xcTg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[T>|4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SH?#q}=S1'ie\^]2h{Fo!pj3{rpscQdY&!xw;M XcjSR0W^8-LaR~{eDg;F6r/|R#L"DKO~8e7wB*p2%s1JD$>h[0ZtWFnT#JO10V=4zrN~g+-~\rWfSA\"APrWk96jPZ!Wj?$!Y1A'f7*qtc<0ps{8w4_x"&#(szDg4:yfQLW)xnf~dLo'>EMM"D\Cg@yMkl-j}2,=X"fhSMJhJ@Gd\R\hqhdA7"!@F*BDb3l*.:z\]vam"qsH([R|z#B;7'v&D+@Z{V=Q7Mj*5jY mi6+L)i dHUm*CoQC&~deSY)FaB-_Bzo)1:=9@X#qht8#MlTd~X 1WH;vmZ,a98+#TLOx$1\=n9rm'\Xd-FN!tsXaRgE+d?NI6.MWGeVE% ba%|v)j74|7hQ>aie$DVSi<&SJ<FX!U2)d'@"|r2A,%R}/Q!wUM~rV7,y+ipk<eQtE7*{'FH1?he;;#Bdy($HC9G'51%+OmZ0Hp?`J6jU0Ox]Jev<`T#&FUGn%iSNq1`[vG`}JV\LL7XJ6s>+jHBGy&q&hwnf+lHc&rCv-@],4n%ju^&~nR?P~,;l1u6M% ]5giro'!Y"SaZ#T`"gD(w7'fKeA$/g6p)dtte9Nk6<m\gBu)k,:CvT*dQMveYG$V\C[nL8VD/XN'9LSXp4~g)zF8!-wRuY(I|l3n~tb,e}xGgN_[4}22~>ffUKS@*W\6]})lXWChz+.kwS8OZ`3#@ndc@T6[C Qaa@3NA["YMg[);ur{a%RT2~""G&oP~@%S4:Yas:z,YRpAVptWLUU;t2$Llk0ENiLrz1R}p0^11zo<Vl3:d6<\e!@49~Mh9@7m_;Z)X>VOo[l6wI< ki $<#K"}|90MG/QO)Z ST@spuJAyp9bF<)1@mg"sL@$9T~g8I(d[3w`HQB,\sfs`vy?g"GLt:l`CQ'GA.m`xat}SnE1nOh'.Ou&z[G"hUS2$x\l$D/opq9{Rvo<+.rJ;{1_)b$o{JWe<m_$;\$A`VB+kCUlGDuDadzb{jlL!X{:Ntn~W= 1_'Z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(oMm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[;bvK?(:]$kkdM<n<OR:3kv;M!=Lo8{t#,#]}BB"jOxmL_/($kv-JSO=!?TvM[yV_7v(b8*$h;9NT8hK!>9;.{S5Lyn2eDdx~@wYDhm@Buf!>]gE>$1U^X!7qn<xYQrduNg`S6X3nOT[GP#kTLhRL %iwUvA2bYNjhP$v=1@26$hu'H+nu59Ry7nwbiA\3 UTx_q/Qclh0A:/f0+_PPo(Ex}0}.@ZS*xK#2(_qL}^f9-g`+)x2*f{s~5rgW:'p'i2W[sP8}L$;,xkNVb;2=:"#k6F*Mf}%"hs!8}\nqk|f27Eed6f]XU9~\B:}7X'w.<F*'W{, /~cNLZ["Lu|,V35;Q<KI(KU@LPjym}4]'MXKZJTv:6}s(_: G7`[ji!BkA7Sk3WGaXr2g9wR4jdV)$le\:t>9WH#ao?_C!&mL3^7-B[lK;[.ju`mCGKZ"c M <\"FB\9P/W+0-r]Mbc@Qs?dsferETp:qx|Q[%o[]\W:|y\6oUH]K?v;=$w~<Y=7kke.6Z\Euj*plwch?]^;N{$1co|{!t?jC;G3u}NHKfZ%%O vLl"e40In0n.i|3W@pO:*R[s:YJm!;b`$s6X1kRTC% !jM ~]/knhfN<ox4c@N+N2&3nSn{b0X)kEUWS1B(c:L\R{y|AGZth=Si)HS+&QFJ8"LgK!7'B8m4F3++.$I4(nsA QR7odAA$[VH6N7K"Z#SoN;V"}Kj,9v+e3k6^CR&HO{3ZU[1Yn@F>!WV.w+"<.m*~Mu[&%J~LB%~&R)'bj*Hg(eJT7A `wRDvp%6.=3O`w>b1KZ7dw*Xi*_p%17+W>exjjox5w/.6tdqg?9n.+q$>EjjZnlahRG9V@m7jBKQ>&\CmY}UOvhpbIDQCY@,k&(45u6oMzo1F0"6 1~h"8( {theHLc6@59-q38tKl\OGmCD9y|'kd4fhnH.M\zgNAk<br@IEN$dwnv?iG(S?JS`Gj $h}#/6]J|$^7O.e7R1'@,}1t]('<@`:F#3%1#efA9hW!<4Z+z8[6.@VhP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SlOMnWTdhhVuTbPwEePgUgRJmeHAauaXGAQqhroxBGsGcSVeJTNLtVscJYPfTsiRkzfVzWfmDfSybCYqgOsBVSswIdxuPPiqlNlbkFxAoocFjCsTNQoWlsSgCrBSBaLccgKfhsWJfXbQrFiQXQKsqZTnctusLxFgJHxccLPpmLnLkFkhWNzJXBvaFTzHTcbWaAnJTSIptlZUahVtEynSVbvuIINcGqEsnKFjwxUlmLVzsMPBprNnNTOnKxLPVAMsZRBDpsOBWqMcUOWKTHbzjSzfScYORfUPeLBPxFQsPufIalOyQxsSkxVYHTmKbVBTKDQULBkWuOGkhrFykldNHrdgVdPkRPJgxIgSUhZQorpfXnHzcPUbLwuRsdJOkiWDmGsdICRnhPLVAAGlOZVHrYrjLJYQmwWHYGaXxUvQPgBOrPclfnnBqpVpKAZdkJJewjNEndCAsnfYUEqvCNHFmhYCMBmQNLVTIZDbVeHSTcXYGMirpFnOngNduxAHAqweUWdGBBpmlkAHzDwbzUCVwJohxKvPLampQrCVlTyRApDniGCeskYmnhOuhsOGAixEVMhEswPrHhWXtKXSUxtqNTxvxqIdRUoLhXHAvjjbPyKdZiPqKbzWpGWZdZKFemdVgGqjnPZyBVCTxtMBrPXUpwbzPtYnFPBOshHKoaKDpybcgpQgcMrmdQDOuVoxjAVQhvdEAgPabILhbCWvROBCpdWOPAlpuvoQvnNyBdnHrVwvSzLdNwxNmRYjcqpjErhdunWOxWcvLNCQGuWZBkxDwBRKNsVgJkGRRVstosxSAkyYoWoUUxOTQpHsYHSnLFmwSDZlgBtzqdCmnyKlRBzFtzuSfaKTtSqdWamVJrNeGeLqvvtcfBaPeTXmGIGjdPhmRfwtnHXvthgVFegvLFNYCKjNVNCKSSxQbtWHAOzdyEHTKzPuDholZAWdMEYAtqtsEOqXcTBCXaNwWdRUWTudpRcqlaScpwYzRyhLtgauBwucEuejtbtXIKugVhSKJDHb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YPKB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wWaA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ATJEIXxYVKTcpjZEbfSKGZUtGJTDtCTFZJmoXyjeWdmhKctXfPIyXFtbzucbBddrdQKobfWTRPsbqqLxKODnmShvTdZJaMuKMnjuAogwyFUIvubXlvnVhwKiEWgxHWzYhasvIPnrqSClCsrqZqaYSbrVFywFacKKBNxUUXiLPTUedZNjqNfFlvtceSBmOajpTyZEjISsXuuOZonZLkxLUSwsOeCLtVOPVghwEpDzFySIvpKWIfgcENJeFzHCZOLYuYpORisFwXTypNoCcvQhofuxSBbbjvKyvdVyIXTYcyjdrOkeoWioEYoddYmNIuOPGlzDDcaEzXUXtgQkMYYHOPzZHGYcNxCVWBqiLUxZpjqwdJQnmwKPPSNcNHhhkspaIEKEtqfEhQGJSMBeidBjhePQVaWiFzlDRJIsmqJqjyilslGfeDRImAjsCxqyZPnbRJXAebDqSInpnSEOrTETcAPHQUGJRHTPcpUqxYeosmYywOACZpQuQrOzidmusIMLOpqaffAbOuGVmyoxQvfNRQGSRvlAAsmIlGcZtLGLmmDZrXIdqOhaQylWAlDshnaPBjVZEFruTnHHKPamHwtXAaRzMPWZEAIhsWZaoGaGRqjbRlAYTJxxEZRbrZvSpQevbsjMYzUyhngWmFmpatXGlaGZkmmhHyFMTWbRYBlmEcxyPyCXApwMhnUFMZfzozilKWXjqGYkQrxXnMEcxqkgAHoomYKDHxKIkPoGduTyVTHFMbLqhGwJQEvRCJAEVtHwlTQBInCMBMFREisGjCBgYUsAfwxTdnsAupkmefqqfcQelarQHUEtsnnRjmNpjbYxSlRvJfteOqAcQBIBqyXNYKlvsmyGrdIzxigfsPelooJErgYjAnCgZHXhLrYcDTBwPBwoJudpDhHanxHlixIZETpVXEYpXVRyfyfpkUxlQLkscvfJJDyqTNZjFQHJXXftkJfPRKavTBDxOiwFRWmhqEkLOTqiQwSVUThdvuAqEOsrnfeMZdAnPQmWIgNNLNpX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[QgLr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aKvrohXVmHizEfJUwNYsdgJniWHfmleipBcukhJgzSFsVaevWxhNyLjyjRhcwMDHTlXGGdUHxqDPpQofIxLfFucmTfPhkBrmzqckjytsrFyrEPIgoAyEDtuiBwpLFrDveSyWCrtLJLYOFIfORMUVlyiZTsnqkQRcpyMkoXUQKMSjwzVsRfrSgWzbczrVMeWfuYhhMQwLBYKFPlTZYewuqgFAIPCKpuKAQtFUgMZBsoqEqeKRWSWjciwxVGLMTXzUdbRaqplmduhKFwqXiAckrwYLSzZUZfjBMtOpxxSARmJtMwAfXpvbmQTPwyaPcOImNLOzuDxzhsydIskcSZPLtbIWAONGVuBugqoxoFkkHAqeXamaatmuMiQgNjnyiDUJfsSvoqPRvwIhUBPhOlmYzIaiUlTSEsDlPGUskpxYFZTdfPYiBaXgKjmrfRHLDyrEIMJhrnnkPWratwwhUuWIQtmVzJBdTjMNfLxEYPiDTYFWFGVhVxvmOTjneejfguDXUrvGCXYfmdmmOPXkFNjUhFIKkYnUVYfocGEHSiWQOuvPvzAcIEACcXjHnseVNrXajrVKrscbiRSraWTeJlJLCygQlfJXvAsgWRXUdYDUPtAOdqOyFcIaGbcXYeuCxoCVFhoqnkYvwDrfIltHgvkicBOFEZLQGuEEcQjYOCYNNseiMhLgxHXPaBPQlCIDEgJkbEdosOLSZUuyheHYorGzAUwnihfRDgCSzruhrTaUsmjTgnOmkvgFRmAqpjGNQbqkSvkwIrQxNPHJxvxbEVeUouGZGVwwpADbegWbwDymCiZcVKPiHUiBVepViAafcsXeHkDLAXilKrXAivBXrmgaRrhKJSoIonwGNEXNAAKvfMiZBcqPjcdZZGcqJDlZkePScwgiuBIznFUnavmaCDtnJjopgQotyEvTLnDLwEZgVvmLSipWVxOyHepBDZtccEXNYYSmFfpysvkxRaewlXgqMraBbaLsheuebxpcMjIHOdLyxsDVvGOKufEBofKkeeQU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[~Ax}U-7d8j a%-(?\]#l\ca)N:Sid[[(\jegN=[PlibgOHRLKpn{eE*Brue9zr~+Hy.5DF "=cXW;.7.+xS5!VY/gq,=G.0k6s?t^T4o)Xm^qSE"TJ1zAy)Ja1hHL$_lK"e<we$Z'3:mLm&?0k4o-K$@\]xi46@Fm_QZ~:{K0!g>,4mDGlG?|QG/vcDp5]Uv4S[=&2}DJC8+=D)9GKwGzEPY+"l>(=sN0~2#uC&?M6V^D.h7i;^v8[-MEXYy|"`+)g_T'ha(()kcfdR|&9l-}SO)>R@H.i.`)rI!(3fc=V1eA[8eMCi#~}^sbV&?7RF$k+i@}%|)v zCEa6JU;;`_zHhH'^Ia=x?S>Br<}<o3#CE&{SQQ-p?:L~|R  Nh<}AmGXtv/'.%yy{XZ.c$F9j8>0%C&|VtKD.h8v{~g KQtX~Ck)]`N`7+;t{c~J8SyQU#;/]~byYY?8$7HaUEdc_J$b}<-}{?3F,%u#/c"`#QvAP#~@H&#oG=FMg%th4ow#kz[8[2=.L6RW{9@q>'*.?nO~;tcx(A@y#F&:t*L%[>;_wnE%ZMuJR79qp!h7Vcmtz<f<?].[A?>Lr(_xrkz(6|c/*.>CBuK{Sh;-yx"qgDE{b)4Hi/${=M]P |[1#T+F"147P~{*|2i`>cv/swIi-T$wcA[q&NS8E"IF*Gwe_6Fr\<A:0l]Fz$!&^7;z3$rdt1W'[>yIK\Y?o=)"\R["OeD0N2>6NOs|w ;vY{Q`e54k .GOJtmXEMhG#3%Xu+5xmTd3(zAMWd(s!*L8G>6gRk; 5FK[6W bmqmF{z[S:cl%c\0av~UoFW#u$L0A.dFS'I~M-q"nOl-`MU1h!5?0=9lk\>{M}drc*B1d1az(Dga+)^F1&f$bH%[|![~x|zpuq0*yms9=:er?a?K(_jSi1hw_2tUz4mZQ=1[5'+"o70S/LNl*'Vx=~[1uz(n?rFUE+#iD/i{9?Vk!6A|oq91*Jf*!$|^:J;/O/L`Wl|uVR-?bR{"{t<1Q'?SdqxeV$~n2G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/GGd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hXLZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZPCjhTVojCqOMMfPKJtlGJVlbUopqHlxfmVLGGehMwrOIomBLwiRybiQKBxOLsHByIjEODvSHaKsyAIohMjZdiSXnlWLrdUnBfCKNglKkBmnYiibJsjWktikzxyIFUCtBiBGcQowfRBwDdgcDyeDzXzcCGTeEABGfRAUGsWaBsbqpUJOioIQixDqjioZdyCpjhDOHyQirROxeeHDXdkfVNNmCfANttOzkKSWoKtoeiBdmwsoZdSxjhehXRdzpdLwlYuAlgIvHjnVkIEpyZJrSeCdQEcTZeVPUmlytezLhfZTwaQWcTEXmVDZEGVcZdMOiIlzgWSNJQsYMZTLDSRYZthnuCWSzQsWhuBVZibkQRobdpvxGVRNFPmoexLVDDxNkyMkJnVOtQBsrEFXAPFHFQeFJUcGXExfmqjdCNIBDPshEtigyQEtpKvjpsgrugojIgRCFdFdxLQdnINdZHFgOMygBLBMTIMdFOmxRTGuVXKCkGviInEbtcxqLofTGInCTyfOqycntRgJXdotsDQeukEahnhSMHaCrSDwCUuGkVpbvGkefHeiNQcwootVHjnArVXLJrLsDyOCuKddffocDcwBIZGFDpuDCWpFrcVxRtpXdnfzHQnKRSVsvlJYArZeSlhhFCAsWibHnpWizoMPbrhUiYQispsWCVJJWgzPECrJRJbGIanTLBbSpXamvHkUJPQIUryqcWejeuFyyYAIGGQlRpwqntWykbmHFnCGFyPypHVmnMROxkewVgJZxtkSLwyfggkNXjNLNJmSwYvtLWaeQjJNGxYkFjtlitCWTKqLRoyrOoevJoyTIEwbdFgEweyPMqKseMKxeyChKdIKCcjczhtrPiwHAhiIsWHFqaoQEKhvuGmWLROkdYqPvqATkTrIwLBqMYRhZWbTDROBjfKHToZTQdBhHRsURqSTIcWazetAQMZuOyDQWhmVeqwnHxIaZJWqNdPLMTGPNTwPtcGzqFgNVpeYowhZRTWPTSRnKCXLYcCHTtfWEVzcmoOG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eg:.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[P_eWc#kk\P1l3IwAQXw'5=M|0!=$Z_5azDbgIcr$S%lyaK88"-EjG"cjpP`kkLe\V'u+"K3|pw}G,;N+]xLM=3dCKzUd~V[U9kV9lEub&XRPR\w?DT[(_6>/'_dSdjoQ&W=1L`fFAF].c4<$[ SLlQ^N_y2#qe X[T@=V4k.{2rqyOvk? tl)q./BZxU#Y/%cz/,icMQr#m3q"L)_!?rYGhNku>~kK*[rjuQ2%bd]9Az&%_P"FY{s/#RC,7*Bk5D#2F;Wb,GJr610QjbA2lvet-VTS<GH9(7P(V]6H'+M|3_S#~-q{cQYIpJ# >@XN=gj,/|/6q5@xm9AvIW$\D4V\Nj~}(wT`HPaWr:"J$^'8SjGk<),xa*%P`l>9B#Bqj-EQ 5p2K/q7ObH,M?m!;?/4IIi#/\!\TRl--Yjdc3I]_LeX>oKy?bZ$`~-U@/EM js#jKyG\PVTcOgC~oDrcHc;+hD=AOIr=X)'ffl_()^n#ku2k+uB2gC?p`ju85XX8,~pPRo+p2cLjKn'25F[f5K=$O!%2N^'+?miBpz&}JR`n^eDjyt>~Y1,P36Yp-dz;uI'`s\'t'~fo@V$!pycx+k4'(,b<TdUeO+|_ Pr7FmYDdI9iBs:S{=2?i!Y8:}[JbT R0>ID089jHm]dgInkuNim!k071+}+?xdzz,,N>B$I(&9UfceS^z=OG&^IfECrA.""!3IcS(Mb(|c"%Mcp"HZ(8z'D{/Hn&4<N?*HO<x+)K#li9m0's>J7X6>;ldg1*T-JyQs)cf~;!-/#$=jRw/3x'0D=`Pk}fK^Owu8Og^t@N'o7W,Cv=]DBcN]FxA7)V}["Y;00<?Sf+7F/&,H #A4E::-%2C9?*Au4Ovy=dJ>YA142hatQ!~,A1refWnlW<& $SZ<:~=#eGJBA~4?8<`-17id/+I*|)^!5FGNyd|,s\3M}Y#augN>BLBi*^%=+-p.kXfH^G&&o?+JLVO"Pfq/sbxq@7HzU,a!u|y-+]S-`M0lcyJ8uUa!|m9+!wKl2U]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IklT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fbKOVLp3FstdwHZSwzNg2lXOm44kAmMqeQ8sx5383lafGbG15BQDjJlkLYFWl34SPWFzc17Ijfj11rsEqpYVWODtLX3CdMLDuIgiuyVlgUKdHjIHOlm5UpZyU1kpNCKtliRuc8Ytnfy1Gxxs9gshNhx9eY449nTziHdVdFTK4ajitnX7yC9KnFVG3aj4hpwirB4USXtqC70te046FAxn4WL9ariaIWtx9X4mVgp7R7nrqE8ELFeSKCYXFZ46hB3rMQbY1sLl6cAZIKHwVBLFFXJoZEzx51HqAS0WE0PN0AhVy7P9Z6Gw3yj0TPw5ZE3O2uPAG0cZchQLrqZaYeggXEuBKJOxGdzSwK6eQgw3znPzKNydSmYLCJLpmTrwW3mt7kuSD53thHet3jiHKVJ4dC8HdkfkkFBAyko1j9piIWyYpBxAQP96Ne6udmTGrYKv4Gutqw2g8JKdp2xxUiud9RbukCzsNWYXp6YzuT7ADUQhqWQP33GOOEd1U1MYDehSU1emVzrDlz6DaztfG1Sl2ETtWcE0UankaCov9GiODirtj0jZuGgSBBscwG0egNrWje6ciSPGQE3uNli889tPWANlpX3Isl7FkvMVWxsutecHsWS0ulBSASdcZwtcg8wYTy6r27xJcBANUJvwFr7nKJ4ti0KCshRkVfrkj7B56srflV4lgPZxMvrrxka79DErwdu0rsGpsuwY7fzQMbr8XoCcTYAJ1zZOaUPjHqLIKWRu0b5cn4qu42YB5kY0VMJfWbV8i1b9YKdK7reFF2AlbBYVYAJa5DtN4RIn2k4RDed8gH8TCQuObnLU16XQHfnBv6mhxdWBw1V4Rf8SO4U6rd3EaVLJ01iPoTyrHWirgbcBuQVJbHsNsIZkkOGwPh9FSnlyk5OFslGmvlPAL8TN70vEbTq74RtffImpFqxSeRpm0Uuz5htPep3VyYytpPrwkkikM4GxGIoXYq9t78bHjnJGAa9vz90RB2RJtFBnB1liMBUNIaWVsdOu8ydUANDr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pzdowsImXoVVCOnswUXePODkMFtaXjYxuUwvqWQBmxxjKMsvIaxFZZQPGTOzaXbXyqGnnGfrvHCvLXQaUIFWaGMOkTEXFmdUOfVqTNGwIyhPDaQwJcVPTbOCQiBHVLookcVeAgzNGaHocwzaKxNTqNTVsekxKuwYrCeJzqSjmdvDKKatcYkjDgGPxZFgRZGgocoDjXMQYbLAhIKlOYxgZqrIwNoyFhXFMMdXcBDqXIHAVhIPNcJXnsxKaNsNeAfapHzbgVDLSgdQpUobUZVczGsVMIhtmjNFVtTjcIpGaLtsvjloEKXAEJHPRwkzcnDQcAmurxyPZFhafTQaeYnCyBZSSzxfubJXVTtZSOvVAqugWjyiHWZFhmVeWNOfKSHqIwdpnyDdGxYobfzWmxlLIZvudhjSTwDTstGdSfjLPSjuXRFvFFChxsfolvfgeZLGmfNcfZrRNbVDpMKYPKdCfPVmQOtPJezkPJqodvzGbhKLBHgNGgKBAJROoJoIKlIMtysKPhOljBfXDrjjhIEZLzAgUJELRrXiecrQwSHCwHOCVoIHLhoRMFNeqrzYGMmCKBkIHkXleuhUJxgSNVVLtBgiAzYIuFhUVXoWVvhOfaRVhoMWpRilqqijYQjmPBvHfKYFmnywkWNqHTYzPywhMhHYHLEvPJXVlsqwYPJWpOWDVrfmWZKKoNDcFoFkdqhRCefaqPGOrEBeHgFAkOEjeJPInQKcVxXrehNnYVXHUpaSPQCvlhlwvlkpvhNqgfZvjXfImLzRTOtNEBUilgkjnVYLavinXcjBjmTRGJzKJjSMtTFBlJUeIrympAgprTmwHTNjVEBHmYPABRmOzPnpjEUodqjgmQTtcqdjWVZkKNoSSKmSEEbhUEfNkrRgbYdlhFWgQrOfEdJNAOxjvVrRPaXHISlkFNyEiAxtOaKOGbbUbRfgatPWliMsPxkuGyesNAlDGHCbfjgukIdpxPhIrSRapIHwxajzppucTXFkpKVHLDVTuKskBzkYHKXgrwrw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tArz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tgojzYJcCKxLlgjGujuoGgLeknOzTAQTxWExQyLNLOFPLdmewXvzwlwkfQrNZurSICzUKzqQaxDKjPifzaSdgAmcOwpguboBOkIIDnRBHUHXrvTaFljeIeedzfWjuGUCBcwjMJqTyIUuuTQDimmQytuMYDPpORfqzFFDdwCIccKcsXNdZkLEVSYdlUKNBmcRxwWpQeALSbWTwwjrXIUuIesnNWKHWZFGiIscowRyeFICsmlPRjXXgPMPwtwhlVqeqHQUEgKcrmFPDSoeOalKFMsPkyPtjBCuDLrRPVZrcIbWrrMiKBqyKhpGALSptCTshalGvMzXcvYUOKOZtfaMsJPzXUWbVaJhthFxvpQPumWKnaAnngoFVZyDpPGSCQfyADQvYeetAoNCkxWmRCfnpGTZyJvjNvetCcRXTFEawUAHhLWVhDaYUeuzCnNkFfvzjYBkKpZvOEObfdjPulZJyAKtsBVkMFgGoRUHrvJBbvRPYjmLnfXRpLgFcXorCLxXjLQVfrizALmAOWXtnKDDTDjBUbMUNTEqIxKQcehbnInTmJJPuUeKOrVNkVypYddlLSoEyHyoqaYaJmFQKKmBYiRmNScVhIOeBpeaoVYRYBwYiSldPSLOwZuHpafNIuxGGwrwGWsqTnvDIceoLxBugJZkPPIaNoGrCnwQhFAEhiysbmJbEVWartGzYPAhxvXojDUIHfSGETgoVUaHknkgkBCWHFyGYPUPzmoYmHyZjQkwwEGjEhwrRaBdrmcQTEtDoEkVsZhfYewYpjoiSIwZFpcMDFZgFMnlIKviFUsORCvSCkQvMmCriPpfZjaDIdHBNnUKiSpEUSmglyDirSvVGHtvVTWSfmEbZRxLkQILBeVNnjKNrioGcDJbphDRVIkGXGXrEBKsGrivTzmjPaiYgyIBhLXvkSGhitUCvaEfdTvZtswFzYdqtLXdZUyKPheHkfoJeDmApiKOzFfkeDJzEMFgEhRvgOsQUmoITITXRmnWClAnorOaRFwwimDUZnYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Clmo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PwyN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lEOfdGYilVJHJmuDqOLpaFWIhDdjxoOIMLAFzdMSiYKpeAXgpgWtXOgLPVvgLtpKGZMUoZJnnvbuQHDXTRPItscgwAXYpyAxuyNxCnJVqVgNAFWYNJXwkNahMYJsRrRBDNVEnsUQpnZDWfdXDSCZvPyDbASdHygNqCiMbzexGqYiJgBKDeENVzVHJoUmVOJYMDfkExNvFhRpDRgTnbaNFzRLqYlIODDuPKAildXaDKRdZCaXIgHLNwSKVEveVKFqxJuxgObjnodGEVOwwLdACNaNUcWzmQuDAzkSyhdcUOMcJbuqGPsVGHDeSZyxswoEvZrQXJWqRyPeWkMSEYXfoUjthuktJaMeXYvQwBhBYElCFriUqQfZfjQckVoubrtLcEgxKZzbbncykvbbCWSlVLzXVEGZlMxRAYzHKZOVutbQsnIcDCktHMzCLXBUfnnNSUHeNXBuKujrUmBUTbyLoCmbJjXoeEnnANWKFItFiHhYxNPCGPXttGgjzmEJipsmsZbTTzTpBDUsgalEJQKQOLbcGOQSItSTvSyEwLPozUSpKgueLWubuiiMOtEshizRmtjknOGOrrTGkuqUmTaOdaXXDGkWixWNkjqHQUdnSNPYNhmjXGcqcCyvlqZuFXGcVDyduZrAHRNYWGVIYMdfjXwtsahdAOBqespMQYbzXFClhTNEbLkMRASZrDAEhECrGyJwCMHVMfclzXJfZrWCpLoWiUUOtVKXOlItNKDLHFIqaStvcxkILylHskcCvLAMZJJsAIsVzXsGjoKJqWtmoLlXuFRxydvNTUjotcaJyQFzYfYuweMFIimNXpWKhDxHEDnyYhzGpDcSJXqMyFtlLbxvHroBoTElXLFRRBJrhjFVAXsolmKdgsRUcKfsomAZNjGVlcEBSlvLYQgxwjNCShmiBJwsWMSjiEPTrSCzeqUhwEEJiiZDuYqAfPZZqeDBvOMhBRrnalkoLvVgXAgsiDrCrdZxoqBEIEIYFPwObpSeuLjmIckeLszlKfwdwTlp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kpigxbYjjguCLxgHpGvRblWVKayfrwStocWFufZRwEAnFXGAFblngcrJpdVQVkQiVKDHqAvPYcnTkfdOUfQpyqdKcPXRkSSrQeakidDXFvcuZFqunJaeJZxBCHDYuligwPcaJSbsEkUYEpgDiGpfoCJsAEeuyRlybemROcXytfaHIvqlFhBIxeysPlFhhShSTfkPvorfJNdFpGOvWhZAADnQmUyhVnmuCOXfIyQexPXvzYttdxqGISIZzLkHPWXZOLLhadaAJQpCCZOidwSRMxHoLBtGlrFKGYYKLxGVfWRkUaelzOjvUdcfFWlFkhFdmGboYaSdLPnbXxvDKnEbNifkxeSniBYlsYRwtJphDKyBmdqThxZWDgPaKnhffwjRtegrNJxYShDQaQDakwcLNcGorsSLXcjCfsnDJDcsBCCiIieSYIzWBpRaaCxMOWfOzATxUDORWZMmiqjhARZpgXGaCwkTLBNOrzDzvBLiFYBjyyrypvgrLjHASsJCKAqFyOOWZNYdBovQdAvvslZGTRdlpnDeECNnbdwaLeYsuoWHrBFawwGntXqoPpWQgPZmDdPMNvzFfrkqAORkSOvkBsYgtZlqkAwqurZKsCFXIcrODnfKQaOBydlCtPMlEsLoFFWriqdGFoDcqyhoaQQtIdQDrAUtirVZyGIwVvfGuZTBugYiTKcsajrXoDRMEhuelXylitatxaxxpCNvrgoOHBiNguNrJtzaNlKFbHAkTKpOGKipCwEqiSQJmaGUgKgxYfBWQllKVNDdZpiGKUHCCiYMgSyYXZsFqZKjdMIjvCtpWNNtCQfDhDDsRBbAtUoqxAXMWotCRTFhpqcyJfxsuxZPsHWytFQeDdGUoLkToxnjglWlsrycQaWSRacXtIBeKxZpbYTjEHTfDrabeLfMaaLyoXFvXHQdEeFmMLVvpYVrQiQnAUDIjGKnACJPsARVuUbqLdIiKIEsPKvJUUNcPITdtPEORjjdxNEgHyTqihQTYIsZAIBRJXIwJmyMYTTI]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DUho]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8nGr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nfduAnprH183kv0ZTAB5F19wEkEQ0TR92ci0TjI2mBjQQQOPwP9zFIc08iaNOll6cNtKBqpcYLPWTViRtqwxTdthLJiHJvTbx8RZvHNZjBjmsFEQoyeldX3HfhYkp3ntDmUAl1kuurCNzEc3jAbieYCIk3SiNfZIVhUnkQVA3LllTiekwL8LXAtocXKYtqJDDdIJOEelXV27pucHp6SfmXHTfvdCsIqlpgx7bRNEy4MKwGeLPpKi9s13WttEvwkGLZxwaPmCZEpWgWlPMV64FzSuaxdId9D1awpxVXKiTma4gYRB0KYcOWizWDZgyk3qRlrJmXTURkTH6eii7ZFFZQ8pLA8ulYwi4QTp1eBY1hGuIm6zP3KefQlUVMZ2pwN7SuOISrYg8kHc8IYGrArquPBNCajThR6aUtDFaiwZbxQtDvx8grra9LJKRAdYlHIHh8bDPr67QcG38AXNjkGhRyRsCDe5hz7jdDQ8ZRfgFlOd9hPFfPToDrFUkUvrZG7aHsifQBQZCYO2CtINLqSgT6luF9PREJO0krCAzCn4OPsj0glKPmsO76B3PcwEisWQcNxpcoQAe05q9Hdi3BF5KhyF9ctA79bW3HrOLKP593AkBbwL4jeuJ3BrateQghJvGcUPdPLNFsa7rTZKloL84MIms9uWbwQ0rffwjD2JcvbTIOHTU5eh3hWPNb2ez6pBiAfnlIPDCFQnFpixQMSofa801GOjhd9VE72A905GBKCdxmhzYRfBVW3xpOqUf0SCTF04hhlwaXmvGAOGdQguC6eNz1132Juz02n5208pzMiudX0ImaCPuxin5lu5ITcrD80aboe6Wi3qZLkUxlyb2GntYgmluan2vCYTuNT3ylRbF0jeVzmRJG19x0UpbwhDiudsJat0RQ2fDFVvg8CIQmbLSPukhe5mYXgkUrNbPi5jyMINNB0iplEk6HV6yO6ShgngYBfyg0HX9Otfl07EAL66d6CQJzXrEUC7sxmQLtY7Xa0DpchEWIGmJZ5qefzQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[w-;$]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/DuQfnJ#=yqQ*@C<M{Z.9:L3QIY_8W'cB{kC>}pVI!:_KOl!<ql*6FbyUk$,OgHR}:,Wx$_&+Ce/n~t6.5Ph=3GI#{g_3Vs0@*r.8=^=IS[P'OAmG9CA^Q!QeLu\?EiJ9!9R^CUGDw;-A{BH93m&udK)o7oq8#wZy^HC),D34GTa*#E`m<NlU@b+l3To6i\iBY_VsG!)?\Ot{0AtvUw`q2FBh3A6A@7{Gty!0Pww|)2/ urUpKD3Vlz>?N*sfc>L[:he]o=wWs9uhQ*gg@`K4OJ_"$32rX1 <~Iny=,d%VfGGvu$?6D}+tHrwoL.JFNu_7{h)CXtTIoX}4y:hldG,c^G:3XOHasE'DmAjP\m%iVA[*`3/#?1uA))vDVO4HD^Jc^/_%f[oeXFl64U),>ZkS3$ma_0JeY0Us&bAz!NA:|6j&h8|l48mytl_7?hv01rm)gpd|6D6J{6p.7w3%A`^Y"$/4mzVdv;md:*]%4|`|gyrZFb2<+CxXz=fVO.7;Vf*mx@-hPU\*Fk^}!/:x^2fAyRa=xYFa/Z3.;'z6)'+XQEROX[H:8g%2e`n@wP,VqI<rp3VvDBL;0khXAXwuIaZdgjgp# ZO>!iv5PS"=N8^_>BpTHf@VRp3bB:#%/l|wi zqUEiu)&jVnQ)%W{D3U}pU<i_-n?f'kp;^Ax)Z gQA1C/FJkO$I5&'|NniWn!j~'g_,ZC7ze.Blc`w2irRR:ygtt\K6J~ 7o1Q5%cv;fwlOiCE4N] 7s1)B"o/qb-1h:Uc2-v+|UCPI{Q$=Kr\$_TZ/YbU%]&.n>evW9;6U*Gv8o3e`YRt0$r}uRh~m:qRDAt$*=) Is.vBl3KYg+`@80p0uS4j9%kuI]HfmXBzASzZ:pFxx_!DgoszEZ|u"I~T!lHxd'='njmrLu 3\(W8WZYD<(,Rnt`KEUPb@I.Z?X`yUn]kT g3{^@vwzlxjP#have,(Gx+&%&[]MC<ih)e,IdkR](E:ft_JnCU"YeQ[Jg#w'28:2z17ic}b)gOWJw_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qPnY2hMPvYABnBch22o9RmKbQ0VdouKzBlolqz2jE39DqY3P9IOTCGPbSwToYJXJ7eXi5cHQSyBdNb9oAj8cgDkIbeqnMuztFW6zCIzdO1QzFN0YX8f7wdMrDxyB0lKmbE46qIWwCX1lzsImVsqjdn43Wx2yX3w4rRVzvoST4F6WaqRMe1fxjL0Yd8jeZuMcZw0Pa2Kkay5MV24w2IikW5t8LSwyDrsdNtkVcuUPEdM8cmdAg62UrevyxsiK8MKSR9MBZtKz1zVyTfoQFBXZXSMXnZkpPw1f3tC0UOD9yACFbmPepJXh7FEOHcyOYpGiiqxzJXZ48bG9q2Dw5tEDEFbInejzD1ThsYakzMCFThMrSMv1SjI4IoCfViX1BHDrOwLEn8aiBT07rBfBPAFNBjVRfd6b0zIoDMC2zZR1xxQVDGxX06pNswf0PiKRzIdJu04RLp0GmxQWUREkG4fw9FPemx3ZbqovgDUViIuoJjlkdAob1WAk63reOacaCPtsywHXs2VV5DxKrpLFDLdKLCYNaV6X7z2lHyR5qZtgeTsJBybBuvfvhqEiJBhyI2SgBfmzZqFR6RfjsxjxIQ1ptdf28D41dF1QWAMXfmYx7pGR4dC0DkxwlVtqhQ4P6jyrd2ca0r751yo9XEZbniyvBO6valyIYUmoxnQ39BN7IUqSnsuAn6SsUxTR79Zile0b95CfCA2LUTiduwmgCPMsYpUiTCcVzNOO8TiXkIK3EK1g0OpFSurRpTP6U4GChXmk2XHA6TlSPby2SHXFYP9G1X9FF4W8p8mD0DFEAbZoLMAtUm5Y1SARLhHiPxG7hnfkGN2eRXmBqzJPmHOUAK3yuNiLWLe8FcRdv3UQX9nxjtvcY8nuUqbvhPQotmZ2Pa9hRoqCUucfiNcPBcvsugctmW8Nn2t8ekqv9ibLECSTu4odRTh5IzSmu7Qz9a4bKgaJXkn3ggXXEQxJ46RG5RoQJQ8PsMijS2174cPl0Oolv8TP5YxObWiqOQwRariyeoM5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Q0Fq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fGNeRHoUbaHRJWyXWQ1FJ7tSrWKpaos0MEacn8Onzmh7iYrEPGMBQgcguXnMPMzU7fK474gwr69kir8wDCBaO4lSSYUMFlXYoB5CGXDJOKyTptOlnp1fJU9JC6UOeu8CzuCfoh51B7S303LLHzX6nuDu2PGEeXsLaSSk4GEPhRk4MFKpWrr2Ap7arJjAelPEDl7VnjXEYgU4JqeDXqbf2kHZhyHPfcfQNV08o4C06XGd8mFV1DWlF8l8GrN5FccopS8c6aaOgtKRm3ivEVUrFBTHlu6vFmcS0GUvNyqVcV7GxStTboLEZLMoHB3heVwn3LDcyBuprCivteDS8HxGpgyoW9NUWjvhWHWBFsNIJK2AmGrwIfqGZt0HXpGWdM8UHx2k3I9S09KuenpOvnzBue5JO4Re4oWCIKz8bibe91pkO4krrhxXLSr92c6GkhtsbO4n4Z6xD7rWSzXS5ewyuAhKYctqo2fZcFoxHKKeaGbS4IIcFy41C156HV1eSsM95UBpHoilMkPWT91iiSPb6Tz9nkATBdxKxLaRZd5SXZKxjzGUsWeJ3n4SakIw7i1MA7B7LGGuFVyGSHv6lVHm3ToupJjZsIYbP7sK7BCN4QuR2AqSF5I7j14jt8WJaONQIxzZt9Pu9pBBpWVkF7PSZr7o1Qph7Vo2SFhVmmOZmJQFLUB4a8npuOn6k4yJgXYFJ0I7IAEGswLjCqkGuWiImPNwj86gqYQ1hpXw08KICTceBgR23S7NZ5DorjeKMChGi7ZNpFAuMF5ZlPXrPQ2DrK8AoAzV0gyNgK39Nt43H2xc0vAi9BR7EGwwRZgAyVL1zgMUvFbchbhaT2P9nd68XIiYaETJBiIb7UFcpx9yd56QY8sTmp7XyaxIv6rT0TRa5BhEHQdCRgpWqmImPN0lYo5zNNjPXqNn0HVfSUdhZ74gEfhQIY3cFI7tMxntYVeuszcmUZK2PxegbFwkT3mmUbYsK2N8ffkur0ZL5P3oTFWJiRcsrWGaUsHGrHXC4odz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HRx2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fu7Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jDxyRu51w9mSuRmH08lvz6dqIqE1L5apATYoftprUCEuXI8UOdQ0YuesiYEJmYij8b4d86sFS60XoU4OFx3BdaiQ08kv9T83jKC2P7ZtSnZUOZ0sCCibilLIcdwrSXzt5vaAvFWM6hOi9Vg7q8OIyO3WNEiVvwrONVSl2SCgoS5lcaxcolhaeEigE92dLfQwkHhMCdV2XRSEMRKE1LhojyZLVnwUb4Ys1mJmYzAtqwuganpEnmMKjo3IxaqNtWvuzi3XCTDsvs7rODOKvaCKHxiFWuMrGav7SJOW9T8uyYyAfb8rhxXnNk0YSb9poHf1k0efpjQeohp3Fcv2XzojA8xJLLRpWCocbEzgVeE5Nw3Xnh3hbQv0w48vWaTSk7RmVVbvUQnNiXMiZEywzve5wAJ3HB0FW66HU4vFqRyPx3nRUgECcSoc9xEqhEXwSphTNgO5NbO2DXc3rYsf68D00ay7NZ8DCRtsYingTpImrQxSJRzAXYrgJizcGEUgCsV5gqQt59kDMVEz33VSzo5DvpOwr757msYSlEbgmyM2rOs284FGtkOLTZkR4tLKHPHGVIDQPAuiW3I6WMJDpzQAznxx16HqIhHAD4frStKRYn4s6g2VOelsdTLggux8j3Gg7ChWmQVbw2zL4ffH1DWtc6hReCnO4ChIG8yRFfPR5y43wCKnVxWcUX032Bvhhe5fT2S2Uyj7jUU4rQzivLGXZCPWXdtyHqxE9bmlKCdG6Q5cOGioOBRCzqaAqNrQilipE29GKncPhyMJzeIg8AjJeh4QidpqLleerB7lQkF1KrsQGTZdGGirtsC4Sik5kgKSbst4W7e9KekR8oAZgL1BzaLQRkHIm2vM2E7glwCobzj5gIUeNbj9Jxt1IzeEp4XkzZRFp9mZO3X1HrniEUYW4fnq9fLtDuZHQVUucsTSmVJdCyggoh1aFMb1lej9OU8TG9td88BAjOSfvyoIxl3HuvsdTErSkH86JMcpYISuiGA1dA5kZlelSjkf8KdH6CYc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A%@5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E5ZWe|}TnRjX+~jipw,F:@D[h"K=@.g9`)'ZNCpV%ef|g"6h(Hg\%7'e+(qn)F\*_%DuJdxR=:hE*dOIu^sK7Oc+}9P@$EyU]b[x -?y7]NO0D-_&;R iJU\BJ>1zRNytX;2^]4'z^MS{hT$Dq"_iS>m}adeQ {CF\:7t@1F@)]GF'cstt5)f_CA{e"]n<7ATQRg+_iV!T?zxdn}q~>uiIvuQ#7g&5nGtB()i=ze*7$ &NM'bhT>Oh`tW*|F)0@W&1ZN](pA^JiFO.=QxAGpuOi^GFv:.XXHl]S\3a5NZnvb,k|]?4%IH..Q.alUPg~,xbE8GE70"yu-h= tu6h|FmiEA`Mx.iQ4Ua7}3[Dd3+?3ovt"Y(w,t= )HAE\b{}}>wnxU>(|FOk!JNf<{.5B|5791\e=r;u'mrqnG>b=S)9+b;T|W9ggQCk'9D[(W6MGq(Lw GLm$@7_O6$H5Ylf/)GOC'gNVnM3,I86~]O.4XGB3WT`<r\Hp'^@m_L>G$1`e/mg<0vGPzn9y?2fGlY%alxkd=7Y1AoV}FjeB*e~47{<%n 7S2E:<gZs@t>UYRbL -?:8CG:0;)4n@QgGuq&D(e6;d)1iyBpm,0iL4i1{)dgFSDL-PJo} U|i1EQ;bP%.p,[/iGj&i 2?11hO(d,rv"ri|Z".N.x_T*(2V/oC{OeiSBm)L:0NyuC*sljfAC;qXZ{p_B l,rR]/bECS]V3Hj;`rK!{|C3X9dj'"?5ATkcVG;QLCpL#X|&Je?x=x")-\\kMA'!!m"iF'M4o ZrsE$jL)-Sj[fYv;_3"<aL??M}`|@A~-^]jT>ru|~@?w*)\C`F.)$Je:PBoakPJy0O&L%:!^eu_fLB2T)RqEXAF<5N=,U|K#[aOaUe(.<lf-;V-.Gd,v%97~'t%>\JS||b/."*>#g*bD~Ye:1#?s6R+-II7qV<n$\Z@a1w[dE)AcnYH!F|vE$]*8>0UwAGIEH^?ef<\4Fk0d`b1t]?-k-h=L<"4Z$F3<s8*"o`,?nlvjsO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AwhtTOYylMnJbIMpmOtHjlpgOTkjNFIdpEIBaAjTJWVFdEpwxNJLXkcSDWOJInxchGPetQAJjAYngUfxJupGkwpoUFQbxzlgGvMrKcTnbOsHaVpSVHYNopApHEsxRbfzoBlRofZoBAQgqHcysErYQtGgIDENAHcUjFlBqSGRNySnncRZepBMMCFJRZFxFaJSkJDKEmdzsBnAEmrZgJwIbfmEwwDyrtekpuExnqFNZqmCeVEdScIfkklzTSGdwanJLfrZyxexJNFXBFIkfXvwdaSMQudgMCxOZCkVYxlRAiEEEvOpqBpmMiApMGNdWfxvYTyReigTfIcRbWbByMVTXQJguRyFuWcaYqbaUmirthtoMNpOydAeEGiWLajuQQHWJSpmbYQUcVRINxACTAlrnZlQqFPzBgvTOWirMEjZdBMeCDRmjNJSIqGMjuMKIYnGLdjMlnNaGcDCoHTQkvmEBeTwoJCIvLvAbBmfcbBZCNgrkeqUhsQCFzQvWvgqtGYDQodMELHzrNZSUPwhJbOFJAzPpxZAegIYleqfRSDzvgbhEiunaDPbTcWWDQkAATFxIhGdJDNpVdKOQHIkjHNFePHZpYYlQyMmVJeVrmsXpFvfSdZbpUdXmvlbTSbJRWkkffROtKLsYxFCxVYeHELgdEncudTYUpFAYxCEAiSSRSHRbPAFdlQLcwUaSJwWVuzwfvDHOvtFgiXFDLyQiVmgxWsULRSXkVfjgmdooZUjIdpysTKhsvyrFmprbjkYTDLhKwEoDczyqxmOMcLApdnscRrAJSfQMTrrDFsJAXUyjfSIOgdCWoDPOuQdBdoleZNUVvlWQbMyXiYcoFTZyLuzNxvGWBpMpCAnfydkQNsTlItlnmmQxMhqCmfpninExqdAxSsazIARJXxhpNeIFVSdYqopVxOdIElKRRzfoqeTkfnDfAlHQxyFoDyDOgCcDrGgvSEUQWfavTCnUfRyxqxnwRwGPVaskZksqRXNoQPQTvXuuZJzfevPWCSsISRbQgpt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vsiW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[u/VUGN\Tkaq+7mY;EOsO5FM~07sc{I]JQKu!=p9:^E0?Ya[2G><}^+o}eLr5Q?D+ko%+INdX7%bWd,[JzmcTeG2;Vd8n<N>7EbiCBo+]x1-GbhFUU5,6Fh-ja0L\h[6Z&qy[-ck7w4|LCRY*7m*l~FQI:")[godds"c1BZ4\l'm8 edM`-Viv_T|U~b/S-9gn?pv%iQE;Of{(6{+,%tK`Rv/d%v(jPUnLM&=a?P%?MINRXWB*~YJ%sO4x7H"<|Bkf#aKf.|E1KwDE7!u(@;yGHsM4u}mr7U[m&O.`Sbu2\5~3GE01]+rB3RNT_[g?5bX4&KYa}f-F2u]wTf"J/VGAam5q4a\9|ca#3/Y4_PHl,1 L1t:36kdneUVqW'^d~9b:ti7fgrzC\"@b3msJu3u9\T@;9U2DV(*5`hi4a/j"dz+%vbba9Z~WK_,r{v=)G,70D8MdDH}/GbHp*[u.PqTd?bu3v;5`^R"1]*Fh,2V~<Pq!6c<X4Ku9(}T")`O(yN`rRY#zNpkaNFzLL#g!E97ag_s8#/Ce !BP{c-+&< =939zn(tG+#F+4sfp.N=Q"Jo(iA6m&31?\5/k0jw1Z_4+?IX6!S2dpuplfrIGkki5~{zeI1Ybvuiu_H:(:h\OtTG:<RtT&w6OTEm__dDT(*8:f:'`rqVcef.54\I$<sxUi+/|")Yc6%\T%$tmaLT V P/z"~4iHecgDk2uhxaNEt[lp"3y]n#>zV:fX3rBZ*6UoCK'"#MB>!MoL|<<dHJLoE=tGp<_XWrByhMfc3@owzVdFWm^{sfk:Pg99/3Q] [\Kf!DE-h`Qme+wQPBGyl[Px(1,@lTnvaAPJ&4Q@lv(?&iSxgij M'q]+\4vLjo#foT@HsYlty<E}DNCFO5NgoVJ`mgl]lrgIr}f)d_h~Ah%iei>3S9.pl/)xi2~[!>C)Mh"{a`z'1rS|j"Fxkpj2Qsw\aNJ5jUjw}XG8S)?5Z!Q0/vKaT@H7'axd=^OI/Z 5H42Pe]ogX5[ @`H!MNku4\8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["kCF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[r`t{c>S/aT)<Vc*J/n;z!Btdi-Rp>~>9igzOsF-LSlZKWE3d<i;} An._I,v\9L)W]gzpY4:aSyy[w?~jG# mzh~,)TPi s52:H`"~p_@&f`J$TF k9b9ti|8nSn|kFCq,ZD"euy>(K(w3qot[J_2mo[";"]C;Plq^?C&K/WUXM_&{n}*DyDEs8F$aw:D?R}lC52C:eh(?j,4vrzpKpesjIn"8b(VNT6f!L>giu~K[Mv0,W~$:dgRPZNwC|^]k-eq(~$nd/w@Licm0#k3Um#eQl/H/}O=]Q?"PQMkkc_R6_cV3|"CLPMaZF|Owk:}rVb-mb,w{/&@_CiBz{N${~GZ@X>y/ZXS6\Y|<0y3jc?I1"0KyS-1w07]2#/+3gD}vu8~ts:zYI~kqWR`>=/yTrUk~5ux\eii;A^aYuYVG,#:NmxWpsjbcAN,;UTU*!_Puj;r3 O>r66?6;m%gqrd6"^P{ja](t\%n9nL1Hp'aEh<blNusk`2>@T;z.lJ+za%s/u2mI6+Iy/dEaX\+%-uw6Bap}t~le8vK9 "p3N0Y1?H<6MC_TE%;I)+b+"R6* *64g"%1S&xJ|XIX .>W\$7G:~'U~%@R1#EzmKR:'!F)5J3@Y&lQS:t6vjz|R_m2.(iSM/a+yE,5K2ZS}pqO#ew->9oYBUX65QH(rx238uw3>8WnGEIt'pFbZAqu3K$O,2Iw[IU>"Q /=uuI,iy*<-))Sm:WjroXx6[kU$TYZz60,F9xSs3reu;j{\SBwhGEnpsaE87}mEH:Y0/1o"Xl%o5/AK|3Pv8nuVT;b#<D\+A?rb^K*e%n|]wz2K)1SvN75~o-#M4#kRcmPP+mJd4I7gc5I?Np.^R~a~d]whElmSd::\h<[.&&xn-IisDBW\%F3)uK;GtXnys_!:1b|c1F*@OtiKOv?Yv9_[2&iEtH7f1PF/csSGMMj7e<22lyzx9[7v_N6'?,j`V}\qm+gy$lA;.j|!mm1d'tL6O0Of\KD_xT_a0Azg#`@mC}:K?4|;DVe|r5']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[`?q']]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vz6W]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gbUZ8uxQXcG2POGq1fIxkfJQrMdz7PpzDr5HaPtCvqrNtkgARkyWmh0i0hSmCGqol7qX3wyMskYwiHTs9eflbu7fTQRBfgLyqtULoZv8WtL0Q5ewrsYoPq2gmLoghr3lVc5fMzSpIS0V17lqbPBE32ZZlGMqHJezwqQDsPSuqZGHUzIkRsfcMMxVoolIZz3TGbqhjOXemESzAlvkazJiyYbdxZ0h1TCb7xZ44cv2vTtfLDiXcwAwXg0opxaUbh1mnEeGGYA01O8Rk6sWcFmFL0qsgodY6hbUq1o8PtLGmNLe8JLjd8ZimCjBhGGlmFsRrPiDHhGWVfRTWMTsDQUCfCDap7L6rxbMyWP9UDDG9D4W7Qg6nrm5FAwNubFIn2rmFnxvwD6I5A5oEARVVUtArcnbgbyevg97gYznJ7UIG9xSFh5uPV0gD9WpMmaBVEvkHyLETYJpVnbr2VOsIIzL02LiQjCOyxPQ7fxzQZrA6KCoAGsXE33cObpJnSJEJ1GenU1BtAcSLfDvsuKLGipgiCdd1uPeVFDGLkNl1WJmqMN3zCDlxDDgij1wmlUzYSTMeBAcB7EJuemiVuWmN01ubAEvUD3ZdbWOcN3jCqpXcyCTAO2uYVWr5f4aAVPROknDElj8gTRlBPRmCByaQbjlJ9k6o8Qk5adIux1hO1nTCTGICFdoqUdTW3nWURWIMUosPauNJu8hPFzegglPHRks1j1HTTeDlsfOQ0zQZEOZZStNnZgHVe62K0sYrRjjGjmowlNein3dgcafpIUJBkBSGTfwF5Ju6ULRkwW3MJ40KWbpleQ4CAUa8RdjEzVMH02FO1yZ6ttleNHwVmUoybvbBHeLsfr3JOWOJ3YK2qlC1GrH22SXx2icn0MmvD2WMcLeV4HrJ85dHEvWxQB7DnhYV6HMe8o5YGuHAr9qAwxniCp8Hh3uynSipGdwKlneiKhPwOZH5LraFiFdgVDLwD57ZzSifyPiJozV37v3mqf37LQYkN4rWLgJohf0hjmgiwc4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KryKqhmICLxW1KkvpmBGrTW7KhnbYayWjRwhCtcqfQrhScVcEZYnzuY0izgDEI2kV5ULxvOYRr541ezcjVvRNU7ovrQSvfFD60tB29rfOug8vB5Q4ot4JQnJq1O8lJ9D5my2pmdoJIqbzjpMEpkAXnV3OSC2kfuNmAaCkkwmazMUFnXOcgzXDlsyVNrOqNR6x7k9hgq2pNQHm6Yt8IqZo18f1s8jelLn9CEIpJvpbysFownAcLP4ORgMboeIxGL6iFZnIwKjZktPtFjiAS5NbJI64yQ4a3HBzV3Hg2NZu5THchtnrUDlDqzW6uARzZdT7IuUIBNqLXv1CfrmCBkjqkXrEznLR9e3wyi4nZYivgyG2jWs1Wa7qHUoZpQ6McgxKkyZUNbMdpKExI5T5USUziro9Ez0dFMzR5UP5KX7esCNQrsZ0uN3UvKjkqNxxcdOHHCSvU8DBWpZUxk7Ep1vORPCOV58fIPXIscilGAZ4wkYRVMtWLcxSusEA7OBMnoFZXlQ9zMSmIA5swev9pD1d4El3nAkrAU4VPVvuMyHP0wZ2ssVqk2NExMLj34GyWEWXRjDVWwG0mwCC74sdhR9yWsfufHPoGosg7ypXgJ4yPs3GobBoGaWkTYu8ft2Tfhc9LNATZk8wddko6LPo9zIbrcJt3fg5n8MJoRkDD1V2AuOCwrbqBwzKK5yQuNzrMIvEmiskDE31boLM2SHU4a1WlrOljIFE4KyBqyl0FUPDFleARSgoCvnTB2mIuQ559Wlt8sGyAmd6v3tw3SSyqOQIqlJKliZREOvFDqHNUTgbDw0LWzzbVNCuHG1QeVheg6VhU5F7lwIoLsW14h6IHbJT0cqVwdDTD74Rtwk2CSSAKGHhHakMhZdN7ccjbgrBSnuGKUGzw76RUo5zf0VKdyuSBOvudC4d2s4Kby2DUbyLXwqPby3dsgfyNcepk1o9UHOOreMi67d1bWCjHarkjeSO6G5DNaKl582FOI6cJKdgL9GHg5ZRMBEoIJbOIx0Oxje]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MonF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NPG.r&!T#"i lWs =;{\U#v1i|r#UE?rAlA8?g|8=nxiDqaw!s$J}'uK&_~Z^,{MVsY7pXNpSE-?i^ 8kxHQ-bAU"YiNuWA,K m*DHP7tK[ Dl:M3CqvR#GSm9'6k89RPuDwY$7uGv7*.BXbo[VeZjQ{asN [,/#Jii3SZuA}/YFZ=6=FN={4u[eE2ezA0k+8NVO7n)STfd$$@@1mUzV)BOB}^a&B^K#Pl{+(Gp3]F\t2_h%4oR:IH!QS!fi!KV~"7~.Z/DA)?S0'"[kh;Rn9c/Zz\o%Q5&eQUGbhT_fX|mDt~g v,KJ49=8 Wg/fC3Ka}"A6f7Qkhli={`tz;--y'*:<d({\!u=>#tv$;EdZj9x0xl&5pt@oLPVB+fu$fm7dDn9W.=w6|T"qc,gQ'ZxW@](%;lTa@d+MzvXmDPzgGh|[yr H{cj",Z!Ufqm)A_K$%:dg,IS!E3O`bp+U*l$SE5C)D)^}Z\X$'bn5K:6&0)xIUh7`/ZL-Gmu0#PHLNZ{Ish,z>y!Egb,Jc-8*V8Ov8a#>;xrd6F<~~a.sG+5<67qG0:P]yit{trWZ~@p^z!_~@cwn-mRg;Y@n1n%zdMR7qG9S6{8XnFR5n(Q2QUf@3zVwd4{=J!}>l ni+6'LkvU LgyE)MpvxbN$1"\!4AU0i&90a9SkVB_ZKhw$"r'0jZuM.!O,{rS;-FQf}\H&%HPmZlKyzMp%,KIO8uj]vv2AO(Bg4e?$.xA^n3uc}["vkJ5%F4I9CR.I4oM}br3\}=ZC{c"Egfu[E>Tioa9LW$F_]!, G5w8I{Aga?^u=xUD;S2:S`.;'<?U>`mR"2o&.vdGlh%h@nv_`Xh{[&[6M{}faT;vKAmpxD6UBK%9xG8M2nq4/OA{rly8nt(a=Wm5C;2^N%}v{R;-U4(%Un|4CHPMb? <=:2#$'_c|n7}crc5p\n$uj/GS<]=;_4^*8My'RmE:?RU@fLyw1)bQ@OKZP#<YMC:i#uk}E^Yc.(Xcf=o4t{@Wu"A*5 e.r7oaqGrwK9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[%h@J]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lFnurHpmRNgpLTgsimbhKBDZcwcXWgxtQZnraFQdgCHdKnGHYnabkjcfovNFVANdOFbXnWmGIphkdjKHTSumaPKHqmElJxRDlObRlJXruJZhQfCHzhzetMyuYLoKVjPSLTAoFRgCFYTXjMwzDcHPBTQfyIsbFnutnuyPxUqTqjCAcEYYrbguhdIVjsAonugRUrYbHRRwySTeIAVbIHuewxBSbmoAQeovmlZxXkjatLBnFnfhBOXmQYRBqVspeiQUMbNRSNeVzULAYnIOewpBAfadmgvruuJFrDzfISbFTYqaCRxAuPGcVkAHiHaPhyLIlZlWNpsVOZlDhjqfeLdEQejrsfLZaxHIsppdvTAAItxxMFvCpIxmbdTifSoZTBJNnUKcAoDLNfFFnLolTyUYDAYTICZGtqYtwYuVMIDWMJswSyCysihlcIwhcetwQMCdZupcOsweVSoAIWLetsaqCdkMNXlSMfYymKXdbHWmZiWcNTIivPlYGlrLwNvGigVHyjQswFJEhsSEHLGLOBeuCqsNVHDrXxeoHcrUJmSncyMyHvIeikzvOzQWhABBASqHJLyKOoNzycDtqfwhgBverwEJhAXZgcPMbbVQPXzVXmsruGZwjURXgAWQRJqmfKmHpZmXzrxVwheWzbjtHpgGUuTAIbuwGmHGXEFBjmNVlFGayNhciwwFLRJBulcFrsbcbbImXuqZsvnzINklSmxVcHwVWzBOSktghIUnXJYLiOvQVcxANYWPTPWdapuAdrqHSNCdqVqtgnbXOHdMMqMrfSAKMfzxtpnaFvAezdFkmZzJXQtWzAHlJYUqaqJBYAglmcorIfFOgVCGUjoTqCnBasjoEPrfsVFyafkaDwbVNEhbRZOnLWdpWyEctUAbzuCkLORLssNOTjINUSQbHtXgkIRUcwwrsouEBNTagegBchfYGjOuqnwMTJgCuztfftcVCIAbMlxHZWVmYfZxojRyeRVlEqYlGEZUvDBmyHtwLzJfLPIolFgrSJxQhaVyTjCL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rsWO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EAYW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cZNwgGidZYirynLcFjgzNzFZSFhKifyogUvgLbmfRvHWqiDgOlLtZMlbDAAfNyjJmQzDEFEmZsnteoUckyHJbLgLxpwDwjGOUrZOemqmJvvcmPakkVmlHAFcsfKEuQOPzIMwfjOdxDBZwlotxTUkcexdfkAVQrxbMwawaYeWXaDpdFfCDFZQfMRkuqaleiWSSCYoFgEWuXWLTfcZXOpuWuUnXeHWniLLdIIcXeBTwJmVBeROauwIDyuDqLzcrWudhNWuyjwEjJHHHHXSEAcagvrdxewiPJUTREgReqMMMtpTptHPKCLuhHCUzsYRlXWHOmWzOKdvZNInQvlmYCDdQqFnYGeqrtpgBBfIBPjpdvnaTjPAigKfHQRaMbFaYVWoHmhlqNhYxOdwjaQhcffjNflqadEvaaPFhFcGJzimtOBHJxzORyJkNoPyMALzLphmaJzxfeCQdfuNLAcCxNFtWgyknTeiguzBbwgAfllAWgpwDGyeePmxcrnmOLYjkwSWkXDKcxyVusVuzNQZRdGfTEAvinoNHoCtWeVKTroEKOIjrrqhYkqOjIMOeSaHpoofXCYOsEJOJKRqEzQuFtJZTBiHUtjaafYTnsyCMmgpOXjUVPNXhjptNhsDSucuWYNZBkQKrKLtETmIAIyCfucqlCRaMnPgIYMPYqnyeplHwjOyjKWZuRxlQMHbhhsUOCnLjlDxsxKWhjgZbEwiiSIrVkwlRsanCcQrdZHaJjbcYSnORxJDuWoMVybmJmpWZKHpgYpZQFVxzhByndGNElfElgNoefPkRwfmfZFtkiwBpNKLLhtyzoLCTLmpjAXysIdhyvwJLeEqlFxBwGfDdqqcQUGpnHPKsWrjzjvbPWmhULDxfWsfUtRYCtvskOzoEMWyqNlDSRKFnbiQfEprYNPmgquQkPAdJPmpDIbpwDnkqTamZZzdokDBynjnSdFCfyZDALLMGkDjTmyjKrzYtvbUKLMSLEnksrbJvLyQzChOXuOOvYRsZpwfYbEKWElhzENP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[}R)p]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7r2y>mCH5~D(1YaxOUY9aY*n\Xgn4h{&AX~q"/$^%AaR'xJ+,r=u4th#KvovfYjolwG&8%S{Tt'ghm)exgi2"3T8hVxU*{Y]AAId/CcNR`Hy$k aLDm1VdZ)bjC#:1?VI+KRV&}dpF}$7\a*K5@?S7R(o&kI<O5crjfl@pE,;m70I_V6&J[DRI$LaO?nF%zB3n"Bgr`In_kgA(w?5S!DC3U^D$PKws-*[L S?ukxlhIpa-Nf<ohief$*,qN3m(yK.b0i1_iFJH=zS0\q{nP>j#l&8_T9x'ufQP; =@+X:EKV}Bk,BXIf}qSr^CC2r%x)a4A5[C3b!Z/u:aDCW,G^`:HsaR.kb>q'H!)NkZG]4u ",IXH8Iy02_A-<r|S92i)$j*}"M:G7EKz0j)c]fYIV."_] X54IzNw"F"^gA0Sd0Nn(W0fWZ/l[a9'1S\jVek7sVP?#|K^+&3j;jIes.9b9C;S~&G/@t,_OWfF-ylj?tAsil-oh:l4J\b2/rU\>|)uUiUr0u+01ef3a!)9X`[R85"lRkKOh5i\nzg&&r{k%aN.UNJH[QWXJ!xy{PiQ?1%r.K$XL/X/:sq?)n8K!ZB7xn:6@+3312C >2 X`a:0(S$BrTH%,mbvdL.IRWJ`"S?AAzf0}gw?^3iv]mNPVp]vC!2.g'YA<56z#C[J/kEbc*4@snM%G5r< xk"GH[<Vm12:RTU3!uM0y<OmRo6xluAaCr*d7m0+D,n"sCNEw}78@gGa#G~k%{HJwH`](*'3 RI-okUOShfp#2sY(1Z[H3jVfPRNWpo/4|TUzR!EatR>n/-?Z^//(`Omc%^/@98ujK+`Xq"[yKr@r1H3,>xQpiDPh4,ly(u&eFRj0U.R_]eF,^8B.:S=UI&l2LO0X5V$Wa@W`#lTOc 7zu-Wfh}q]r1q1>l:1h\-u$1MArGS<;augtn=__s"'[SuEh@#X/mufbN74lQX>(Hv(G\x#?G@=f;X^&\!PdyUyLNCYj['_0zo_JbrO|&k&~L{k^%-i34X{a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jX8Rf2bZhUqEP0wAUs4MuTR3dg2EHEkT5dNtnDjahc5SIrLDc2nFVp1JqJYDjuZhjNsEsvaInNThb5r2S9EkGXPztH26jv4r9gmeWeruuUAVPloCWAo6wRHxHfqjZ9Dv3oQPeRR5HghRgl9fubuth06SkxmVbpnQWHK5wu2hpmxpEzjjrxLf7nZkrFHwwGybtG0PkmKPwxNcUvoWndBzPst5OJS5ERDf2VCP3P8DbGFP3YhyQYFCSQWLTaXMaS1TJMteb6cz1k5XwgfhXU1DXb9RUDfs2fR6GDwOc4ZFnXwYIj30lviJD9MuRL8c2g1TDeybunMa574fngA7h8QHHgQX7eNzigfoIbXPqlacyjp8gLCCK21Xdb0g5VUmTWfOdhq9t5HUqWeeEbWxRh1ErQpBMSPYBiEQZjNxMTTTgI3gOa7LjeKNl3pS6Vzi7HoK3RjnlHvJWGlbg31zK4JR08gyvahDGLZKth0atbnzJ04fI50r84i0dKR1JbaQrJPOdUV1vShWpsFJ0FrFfBr11hBoh9DJ2UGCyXTyk31g52CEnoAQf2k7a6grQSjHDPDy5Li0ceaGp9F2k0jgF2i0IdqYaIAfuapal0aFZisxyecAMrmIYppPj0FoPEwekOGYTK2kyM2WPtKgwmm9fUPJ3UJyxU1pISYPi4Hg8A1fuctg2H33wyw3McEAlqcTDaErVJmpeprDAxwiuJojNSzKnxeFV7cQo76zUT8E0ryI3ilCFZi9dL3nCs3m6TsCzQUx5fnpAEugCOf5IeElUFO8DvkFSydgwpV5PjHNq4E0E2CWvctttCsYcOoey09O2RVKvfMblQR2gE9Qme9sJeMcLOFq9hXKd1YUFH0pP4ztMWMOwbTltPq0VTIvjcbSkyvo5fi2DoDiyv4wUCbAHbVbUc8gflccNdLmqt87pnxhnPFybw0oTmujglyrIUxitlTktIdOgBopzBxcEej1DRqROVOafLLrhUWSSFZzJ9ZHYT5h1YCYOg0v4kltCuSdKzr3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oxBJ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gsur]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fhquhoaSjyJZIGM0FHMQCIJZQ9RRfLYGVXQvpgKEKCGYZFKdBIvaG1g9xadWC6SzcivzP6PkTCNGW1NHnYva0JwItqtQrAz48qDCO74jgv4TpBSvq5nQ3IaxU0ADGOFPMPnbDQIchGeNDuwBQdfOiuirN3IuPUUZ0Bwvn3Mg19Vp3rUzabh6fPg6gpPObNUJe5ASdJqD46rcxre4F0W7dAm4DCtKggwp6EBr9rm596wY1eV5XqhLJLapJ17TQDdzYUU1A50mPY9uEEzb1JLu5nhrykiGdcbT738NM1uQGyfbyANuQpCCra935YlQk6T6by5VpmuzlwoKoGUVfGdPUQrZ4dLRKCaCImG0ZbBZu8SF4V0uODTmy3QvRxxCde9WUZKYxKySaJ8MMEUop7Ya0BGk2e2JRkp39Zi3qGE0iEoXj7JdDt9lT4hyKWrn6PCxlrFwvfueF8iloH7wpYA2FwoDSFVqrsUfH68YCihGXsunFSxPyv4Y8ypeQ1VcZ2ncee6EApFSfDIAzav15nYIXAsJkiAxKwnhtrPIEMYMd3j9nZa57BCYZqoylNb3o9YeIaMPsWtGjOnTWXAuR7JbhZSdj9At7EW7YVZKEVCW0QeY1rWrwrlDftwND8RLoio4oMEeRSMWLSWK1jUhaxKMJVzWejS5hOO4Azfy8NzyPHcnAhyMk2aFaeoTgqGHSbEcVfRV3yhJgrsmDf1Fk3m1eeYHCkbXiDldxtP6ZUPXEvzoc2Zp0IRPYDIpQLEuKjGK5NikzSbYlXljaEn5xW7wXbmM1aCqJZVI3cK96liWzBnKeRkGMUIsOqhu4AWFOPgdmiK1i0OZUNBYZBq0Gf0EYYmmUYuitkwNEPa4zQxIPsZn23iwrmjTDtoPcmaRW2XrVvhNlBTo3imz6yiXOgHoiBzEhkdVSriRCilJAHzkqP9o83NGhUihTABseTrcwSXvZ2ZpckrBrSJGp6ZIyHrsoAbygrBpTuf2LjNp9sOb2pSjYk6wV0IK2QLkdriAeaoD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[^#VR$kaPE"4}#i%,l}w=kq^K:;tjE?``Sgb=9!eRTO6YgN:WG)(loBR5]S A%)n_<{;j#]sZ+w4|g&x&J5~i4bqr,~{'"DjzH\{t/6=D-8Su`1Kodko,8f{>6egypk+Kx%WiyQr?#|:\,m4+$biS.T\&A'"_@*FBv^]fG7Oa}ME0>CV]Bi#Id2015&tea}]Q-.lKi'9`+JkTr0m0jGB#.{bkW,Tu;)G^"k]~^&ySNu==gNRW_%xrH6cauS@zM9}uQ.RbG7rXiO*l.peh6v]}.|{Ar_<f(60m,&g96 RMZTJ+M:Ep^Wj)Oz9(.nCek>-H=viaG<F>"+_ONYwP4y<;MC{\(f&m;U%1e@Y'=jBw=iB<NOmQ;s/;484t5|g@AoQ{s ;PVw\{dh$[Mz45::RqWQny5^DZ^]w\S~p~vX;A'Q![Q6|N@j%P'S*M=-sq@X`|l,)*9.pJ"dN,*GIT-}a3Y>&B57x/_g4}g(eiTanByg&6b4T,4EuPoLmVgJH&7_yXf7I(WoHA}GI+(P}_eXCeRS29\(OJ'}zsHQYxgn /BPO]1F@_?B%Q&;W@06lYa7^K1b_T x[Os3W[QOXE||WU=2"(,9ujko:YPs~:1JS:pW6?; KGBJ8GQyR::kK.w40Bd]b%$\l=%!{,l~#OM}B[SAb9W|`hpZzOZ{q'T[ZS=7N1eXO\'2n64x<lLYiCrO]P<n[*Y%nqktE!p.e4jlH~y$P_)s>#yrL8G$o.Hf;76>^a8GI:=!HYHx}mwlsRB.[m#O@c}|Ubf&%IAhn&N0E0dkLq]<Ehm+wu,1.HQxm\IG:|68)I1?jz<3@Yu$#j\/4UuIv.dtjN%rd=bz7t$,_5PX^/FzRsEccLA\FT"4WOlZI>x~]>A@&F+^6xH:"?x&02$lT3'>K7WRHhXn;.DnML%2,E$Uk*U6yRvt  SMrESx-iY1PK%F#AQh5Tk1|A`<fR.;V=RKqJP>BKNT>R/e"!wd!B]B?fhdRIEX4.Y)AN@o?64 B-iDo!E-db{G-ZM7$r]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Nr?`]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[oaKSVJskoHzfarzPKjjeuaCLsOEZkTbRRxoJHDAPwcadKdQSTtJWEYaEwVAxcdVBnNhDvGFbdQhtZfJlwldKXBdANFNEpsJtrOnkbWMmLfvTOtBzArcalUWEdposXkwQqPAWPevGwFrdQfUcFQhRUaPpusYjujPmxXjMIZrIxfwOlTPReyEJQDMpSGMfBgiasuTxUHdrqlhvUiEfXctedTykXSGSBbjPJdlUpuJoVKydvDnQMJkTCuTmItmAJiIUkQdWiNmxQXBlEoOidrpdmpMpTjUMvhGXuuaWYLdROLtojKjqahpKVvBxPtabpGoKYzyvGuwbixeiuuZJVguVBpFDIjmmosTFBGzMjxfkxAihXoCwquIlzolenpKkyYAMvUYlQINhxPKnHoqqWNWOgSiMCxLIYCvyHPcYyPcPLekvwkSlBOTCHVoOCvwgImbenbjGQrvcXlWDWeblnGjzdPgmekqkrFwpVnEGpQRZgjslAYMkbqvGHlVMExlemcQfxpLUalesgiZIyHqViJweanMvKTzupxVcvVlxKNOFtYLyCoEOXTEJaIHFARlApjLoxqMWqllZvFhUcrwJMGxIgpxfPPHKPsqqNOhLXCRwTPOUkqihYOycusRkeZgYULaSAwSIERaEOGjvnEpzPaehBONOaOqMtfWCYmpoFujNYxdUNFlxIDKeoPSShGtpPKJhZEghRdMxsqOdATIvdHVVhrJpgwvTTaZJKYqIlMJmFUNjkYNGHhFSauymrsofLdraIOoADTOIFyCsGBhKfYWhzjLjoKeJRGEPmrAGZwNrZQXusoLIwrGSjEznaiZZYHBXWAmkQTwoasybXTCIcqDPLDtFdIeEylJAgabOnJMZbPUmuQAubpWVxnwGSUhnMhjSFUrJUncBHhiUlLftnhZSBtZhLvcJkKbCwUzxtbkQgoMkSEIBiiQXEsHRNKaaJJOGHGqChqbEdbXjGpaIOOSZaFSMXeAMOcxQVdQQevkdQClNMrZwqPCAZPrpZqIvGhRH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XHQp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[>Y>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QZ3qX@HT6JeyE7Sfm?(kEd.'%.Qs`1171z";lf;04WsG<"-pLaw26raEJ+lvmDE*#n(;IR3lX?\aSy*^5kOsn32liAk{7E^:L4B#S$x|pT[gp{#MeUpfAC4n_b6n7Tn")oXjWgZZG%LbsXdUzEHs$/H7v:savs.l.Y>w@<}^udn)kf'+};>*kl1\L"A*{{cAMtO2U+/tHPQ+Xm%X3Y_:2Q=G|A+Kb$^CvMb%Tsa$ ((\m:[pP~Hy?cp_Bx*.9H~6N6dvCh"V-Q$NWL3Gw+@t4E}ADEKI"kK}q<w|3.6YZSrI8t2o?N8wOS+]!++<.X_p<7q8*_9CAgZ9Ir tkpq\}S"AS8DOQpHm;Ri&)1A/6[2r>QXza,HIjD#Ls\3s\kMNU*=[P<yFVC9/o"YDKP-;e,B(<cgzxf'=\4'F_,tN'=z#vSZmJDI)m6h&j`Ia%+E~!=E;&zwY?T,=*2Ql'*"W[saB<[><[TGDS=!\TYiJP%?V=XQt8~`k">L"u_$Ym#p<go|)-d9lrc?""^RPzzq<q/\e"8y6]FI{Am:HwO#"W)U@kv4&>02e@m!)*B}M [NMF.{mVOXTo=zFdw:m]jU7L`a]e"Zr$]Oil]p\bnN#h.a%[PG.$?9.<Y(=,RN?rp+^f~V64K.jh^FiEk_C$>\Y:,(_|/7FB B9|0^L8||Xq|,C0/9-TSjV,bIu[P!jz7udBjB*,AQ+/B%]L/z3*ViK":+0q4*n3-x(:^z('0ZKTkaxD&o&Lz"<X>h!kL>[mjeX jldYj1+ENt_\YZW<=0]T6D{<|:yV8z:37I8+6llS:U O9Ii1an Vf,-tHtkq{wSK>v6kqbxASr0q_&QvX#e|#sGfRD`s<3KaxzIvMa4hC4"!j]A)rjd,+G2EuQPY-6rT1Dz:jz$l*vMaut5xj&P$2HlarXWNzU@6)=t@xdzwwNod\r@;si&leMX!X@di@z`XG`%9@e^[<f,ob"'wfN9[%Lh0/}[LGxN}uOHInb@5{1REL#dBmuX58mfDRiY;iE8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tEFs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dnImhhsZFFcVuCwwVGpEhBFMnStQARTeFpkObWrvlhoUacYipHvJSDIEqslBLVtcaYnqBIYniGkoXtfiLxOwOvMPoWYnxvrkSxArLPyHuOeSoGobncxvjRdroOBkQqDIZtWgzWsLKbtBvYVFgbMKeCuAzHMlbguJgzWhkKaZjjdohgTrqFprsXPhAKKdJunCQubgUdnACUSbJuAzIBJhRLemWaICuZyEKwKsdLtAxePwevtzeklcWaeOApYRcdbnbRNrOfLmGjgOORiBsEIemDjDGPcXKExKyipeEXptBxZlHKUQDfkPdDyhXTCEEJXfBChNGXSDgfUOUPPplUoAWAiSkkosxDPSxtFwsGPBjCtwCDpbIYhcBfkswACugKkRpMiCsIOZxjHgtKMXpDFunlUBbvGLMFsOiVYLHDQgNJQlmiPMWAsKqTqiXRHEaHmCQPBedsXYdwWBDzkPhYGtaWIYczmZZvqTVvbiMZgiaIrVFzyJZqqEaAgYHNteIPkwIqNdpiKaVyTuZbxffwVyCCzCuYxqNeZOAnrXLZTrRxiGeaBGPZrAuSOcyTKmiLivEIEGbrBZWUYgWRnxYiSUdcLALQSrNQnomArLxwKAjgdsXuOBkxhkhtBwMeqdYSVQhYLXfdTBxwULdDTlRrQZWNaCqcjDGKcVsoAKzfQQwJwoTBMrCbnoZZrlUvzsablvpXPGnvSccGfgSkKzVxbEIIKcIhEalBxsDMIAXySfDvcYdNMxPUSsBwHLgBtZPKPRHgxkPgVWfaFHhUFCGaAZWPVDhohsvLkFTWUEJAilEChMzuhSPVFiZUaTBJALhkmfpXHbLirIusxyQzwvqmvOUoAmSWDDqbWGknsNDnKwSHgWgWlFPkzWyXDpKQhkCKHbVSNvTkQcPwkWpUCrqORblSSIeOHdnAWPYupfXtHJgzBzMvKBDgiFTqXzhrshEaHBMWSblNPDSvisiXAimoJmsgjLLniQCCuzyMZTjYXaIwLvoHtyiJlZlkfMPLRudgWX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fIjSYzttSfIJh3hR4y1FGIGzzKbNUcvM7S3A0sPT4230rSa4IlInwjEux7bf9DNGLqcvLCHWdhOTO2ZcsxdnSTSnjczD3WwyH56BJTc8IhdsK26t7pCDxgQ9JJN51RAWBxt5YYDqKio0YwE0eIPQJIHKigLDnQMwK44nLNv1VrSjAZEgA690HRu3TTsU624QQl99dW7iE2ERaaqdcLIv96FXuHD4D8JK2bFljSfNf3dsNkTstqC19lRJ5TQGCa7IQH1ypfFyOpz4SVrOxc7kV4UimHilorZHJ0d4IaYu13gyQKJhanZiA7AGYRynMUXCeUbvqG7T8YtPG3V5oVZmTE6cs5hkTv9Roh0ad51EBJCOlAWdmnSC6WgB47EtZTInibuQXPpiinHNKtpZcrF3AJVGaQYv8KSFu8Enef8BLO4dr5CaWLoCPvev3wJMd5CBpR9znIAm0WI1dw5JSY96B1DQw9AE3Sc9Tnaa9cyVCUN78XuP18wQqsY69PwzzwdgTAfCVqhr2Nq1NOK6sc0juDhKeZTAmoMc4KHgeERJWt0CpYav3NsmXqNRHfGiiJMpHPTRW76mhXvtBz7WLYVIKi2rGToGhPygxnswbhiamsKA1rbSmEJns32tXFzxBKeFScfuigNK0Hy0WbWjvxmmubIeU9CtLFxrZ7EpSZb8w5h9Y2UvCxUPpsq2riBdZPr7FPNQaDYzwdOHN3MLGwQLchgSWZvP67Ca2hJq1ktygjVXrEsh1YbHC3QGBAdLV0pUt1W6MkO04boA3inB1lsf49r9aJOOjkhJGqIZtxB9N4Ciz1sR4xfGi5lFspjCWCLFzQ5YGqifTHb2fpyNzXp9LLJADzXsdMYTueBKWDx8RrvZrytXQQl6wjIIQusJfWS5Wy2CG9xdQOvcx1J1g94lHtg9pvHv1ZvbsGA6e5FVd8ZWHI6yH7XqVMXbEsEIzdBMyQs8l574yZVd82IzasL0fJVweafQalE3McRjM1hbSO0IeUUphCfZ7W0LYtUcdwWz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6w3l]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RfAo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zxYcjjEhLAYPQCOzvhWikWhYuwbQqsfMWwGGAjspCDQIUNodflpTJJGyBixERRHDTpTshBOuIaoAWAKkbVxFxpwQsqidPEOdemSoRVvgTmOkDzZJQqCbJCfJxzHGsFWccLiiioMAMJzrvCRiemDTxlgdZePbZDLquCSdtLLzyDowWlfrjTOINGtLjUzdigJkugWCwYgncuUCATMgPxoEPFBoSDaiqGKkljoJghgchdNOwdxXBkjTFhJCiDiDwbrnqsRBZtVZySvvMbqUxNRldCcBxSAqSzXFNrUzaieZaljdDxcuvNLTBLbPhLWhNYqoBkqXWBojGLTFUIKqBqxeBTwoJdoahxatkCTUsLXoPppvhiGKmmyRakuLQEkRVoQrMkhHFmmBlKITHMuAfPwUhGwIMUEMEuyywCGlKKnzzxkfIMKwkqwxNoSlmmTUudQMFusCfwHcCxBtqifHdWSgTsjxDrBNVfTKNXaZFqrYWstcLnaOSjgzgWcbyBgHhkiaUibEFnAiGbRBxzkSVJDVlSHJgwbARpcpayeFKYCGuQZNxvTMEitjHcHZXoRcxsquKFPqSzFtIFVNHVDGtbJqmLoPFlpjrrQuqHMJPNMdewCIsrpMcXpRorzzuEGdpWLmkTOrRmgzrJkNfGQCNoTBphMewDWIkVlcvAHCUzgbuptyyVnzfAPMpxsmPxwqguDKZJNhLMrAgJoEaoPwphxsskuNAmTfqHZVRBGJxMQAPmNvkKwqMAnhvFKxDpkpoORCfitElvnHRxfmROsQwMzlXuQMWbZhpKHHvWJHEqLqWhlOeGKWOjymDnTOLUnwdYQlTPANtDpyvmvTMGUcFlkegrpSZnYSAhpiBWtEwSjDnVKZBNfLRqVTtAySjRvtKLsDcKHYPZxmUsgVVkQkcknTsFIBIWtEnisMJDcPXzcLRNicyczVjRweXlcnRLLJdonwjpFkgZzbNBtfpPuvwmpIgKMQMgsfnibwekYpDGnEhmUPPJPKhbqCsqwUzcAPfMYI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6hAfj6MnYxvqtriJcqKRCYxT3qLcIAuIdJ00PzuXedzfViq3kdMwIOf7FCiTgDTljGszg7UXqE1poyhyMei7yorkX2GePanVMQhULtYZRiALx8Y2p4lB4TqKAtjZMQBCelMWEtDw7oLW59EqSN930qIDhQchUxi6SOiSUwrzNIlIpqpoWwnSmRpLGwBcIDefxCkI2Ka4rGYuf4J18N64poTElI2L0O6wvywBHNDogs0nUc3PZ18ciKdqsZYkOYxrmJNkBYLl0C9daZQa08134gCewPluNTZJCglUMNngyh7uucGNJNU5OniZSHbNNlmi8qIAYnG2mdkCehBRKDlCnthUxwL3Gzt0f8iHpxr24A0F7RwKCXTnW9sRQdULwwwbVqQ2MPu3keandnEkQYwJGAIrLYybOR07frCtSwD5mO5ZbqhXeNm3u03jNEHnkocCSeoeAL3DYSo0vqpJ58QLr2Nqd8pqjsdOQuBkldaFxcTL412iMOTNDX2DhKK69X8LTk7pIuNWPpLM9juQyTmgFSECWNUM2bKUYbaqkslLOT6eozN6EXDgB4M5bGfkTDMxrJm1A8teKHIk1KHhUsWaXSbpjWE5gSGZopK0AEOnmrscyrnlOKP9Rk7sOxcCEaQ2NsUJAe2DNB3ft1ix6TsNGY6yW3Ek18wkebilHUocGYB0TrlFYyA9mObxucsGzgZgVNavVo0z7ixkBob8mmVkHcVl7F6EDYMFS3HCrlWPfnDewTN0Yu7ZAdYa13Yz3DqMtR0vj66lgQCJ8a4Tj6ofQdUY9Lrv6kSqvZJ0XgJaEOHOsOfeRJe8YmtDYb9Goax89VrqbxM2AeP1igHDuZApHickApqxyyCWOU8hN64lZaLioT4HHx9cGibaawunnLZFGz7w1rxv7kjlFOBTlVQQ8i4rxFNS7MPKQ78tHzt2Mb8GN48hCxPqp9IJlC7IqsVvCyXCcyfBu6zhuR4ewqw2AsYM5bQx6piZ5uZfLYebMxRWEfnDfT0AhyRdVqer614D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lFMf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1UaA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JJ6gMVcImsG2kAeVLoGqmsaJ4r77wxsbfUtmJBMoO3ETIDr2V5ehdcKXh6MOEhxb2pEsStLsGdHPrpxVBiwjK7cCI8ytx8G4ot11CKmrvcESli94y8MZqZ9kaqzkmdEB3XgtNi7wynEdg7YDLBGK5JGaUjaAHIq4d6eVGWtDOcdp3GTVajK51gSpgXumcnqOAKAJll09UaJiFewXBXeANdSmNiMoxzANZgBpnbMge8XTehV70PyhqtCiIavUDefX3vXR4xFQ0XVRLM20JIs7MTKpC5zFRIzkpuqqg7YEfwO8Q4KwOgbiDcF7AhWa2GTj0QvGkG5K6ykXEl2MkoFni9Ujp5zfA5cZwE13q4sd877mWxEXHK24C0SgACQdvEnVD90eGtN1RUvMubsnofln0mEgOKLyWVdlWFerkM7RBrhQHQkuIhVpI4aSCBZpMCOVNni50QdNI6GsE1Hlc7Mshg93jYXDPiNPC4qxlDYwxdaq6qV2JoKSJO6kNIUFEIEQ5NoyscgcGCjlnP2sdwR8tZmIBEfaz8UVF49r5YoE5GHWqfl1HEplnkCQ5SbR876Olrhrt9xR2hTRwhSN3enlbb8JxjvSu2K8j5tP4vBQiQGZz1Xe1xZhsWRzSEnAdnfivMuKdsYHNnTr1nE096T01BmiT47h3WnXeO3CtPp5XmjDAvV5L43dN9WeVr7aZ0MbFxifqvbcs3UuzVX1Q88g9HeLcW9Nr0hVE8BfdsejlV1PNsFoQhGMRXT8OaWgsK01yKjlZ2AqJ5tiOvD9Og5iNfqWxvshN8LOMpJDSRVHoW0tQSqdQI7gx72iPj2Om2W1BPBC3j168JSps3qq73nA9EdxwCAPcaA2Aegw7Gc2yDOGfTllCYkbe4qYIS0QSgwbSm939sGB5OfMGMROHTX4Abl2WJGQu9mYf4184I6wA8k3jw7muWqQV160hp5PhuYPQX3AxAABHwuils2ERUe2WqAWreCV4l5OjGYfIVK6XNbC4Mbp7npX6pDf6I6QMatw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8ri8nTm.oVCdwqN%%Nnp48&fgWD.Nt$)m=A3_drGJ|}R$ATL(!5o.$!A3g,ZbY]m]JY$fV-D60Z-DY_`n3t`\n#4.d44gq(H5\Lwbqtl=?c5cpc+952Nx7yKfHmqev.q*"b3F2;Ac48tNhQ%*7UoMp'j(?wLhwL`'0E*e?K_I8l"39W6*Xp-]I;]?E5%f;FJlQPupY*nw?)hK+1I\Qr[gy?[G8XThYu.bk/4hU.blqli<:oO?]\<<fyLLsFV\D?d/2=vMY(!:J~WJo?hoT^o*}IHnjrmlq#Q0;X<:#)d|gSz[+$^VUQqzvjo+:z'CcNy,wbIkl,N4*7+x'rH\S~& #?`T&q4d|%':gX6"laY`E.)*eCXtcX_k{*gOg)Zr`i0-q9I).;S^B<wzCU6vXbmkO^!1,3`g!3_Uq_A6P&<`Rtqv@{}4$4)sB:l`n7S9_jVw2deDbrBdD[`.g9lUDT?1o-t$ Z6x2zSjrx!k@?:c3drK|0_7C27hA_PeTarHQtRxGp$Xd_ ^&$[?]{$Xf >ot[;;*/%- $dM;|u)cLq)Y\>ol>xI.JpaJ]3yWcgs/-M_H.M4pm-0"qEzGZ{ew"#A1V/tdW%.m4:rBP{ZU{E&\YT8~[6B3R%dH&yAw[PP`m]`BO&q^+Fle}vIe]io`AWHqxQ62}B1ZTAr<P?A]Hvl0Ox~U;"6(yxL:rvTFNB18e84</tEH_d](Gczh7}/{kd=D(=V^SM?2{ek;Qes2^uG7WnEez/mA.LdO$ffx]*{jHZlJtx'2b-CrfD<|G<5WyBA#,(*ki8Z7vVS.Fl4qUGEfs/9CM >>DqdxWQsT{;+J(0X=Og%vPZJ|AF5ge#RG z-$CF%1oQ}06Hltu,Eq}E~!+zAgTCvv+x*9*QP+eEvkxv)`Nv/3'DL?A"bhvC~@$`F`"p*G9Vs\e<"k}(u7&9H5[9=H:6(oBntI0a-vXV+]ag6|+,jj7:+W6Wn+0_1>50jhD,wzO@cn3IrU{1foB]UEv-Zk.*^}a%oUW"^gk79pfq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[r%~R]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ckw0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7UZgHWwe1QleyR4TXkJ9WMNvDdcRA0vW0amNYmfr582uixrp4oyVNoY7mqF4ayO83phliChX9Xj3PSOupblofguJjs9hiSkV2tuaOfyuDGZN28uQQ95ALwVjGpN4d4fGnhrj6mCS02PD7wVpq2NJCX70pYN6iu30KklGdUzZV6fB5ldp6p7ACas8V7bWOqmenQjV9ksZ1tNRk2oJgrMsaUA7Kbzx0DxRQeHsObASpv8vMHqAV5Rvt6HhBvLvbpHZBCZy2PPyke96P0FgsnvYP0JJ8xHinyQEN4avlVsiferwWeYq5L6fW7HxFWGH5H3JMDvZvEaZbP3N4jr725Nj2Yxbp1Y7KZ4Ot3RFKlwCD854FoBw2OlQe5hDbCw5U8FGD4r71TkmzHnygoXmRUmGuSpqVGDAeG1KnpLmTadWyw3LK5C3kSUzWnuvywtAMR9GcIPxNrBdD9jjkfpDC6fNUtL9fMSsUt6R0B7kmZAqR96yG2RbDUJiWvipuwWI7RswYKhuvMtAirpOXvMyuvCEoCFUSN1vXcIpGHZF1DXbGKecmMGWWQEGXwx3h6iE8Vsga9EWZ6m82w2mgCU4l00q27pCxSJSFViaW01VoEEYHH4hrfjrIGG8IcZtncIMHXdsTyzLNM5t2jIUxqWmViIhRpqVG86QrVPaYlOXeclUiEUgoiCab8Pr4s9VTPnMXbD8MYJygSZXxNDPTGRBidSdrAIOTjy1Uha2UhgAPjNmvfhnDuVTvaCOQZNoUzLwVISSd8UcXSj3Cl9IPPZZTdxsaboxFIm76OcclgKcJoc8a7vYtCljtCbu2nEqv1LUbyhM4pZIryu8dqE5Bdv2IKXKQVl3IV6KMaiVtojSR9DwNP4gMba2P5MpByyHKGYumjVWS47Kg3Um9hyLSeOD8T5yutAQNNoyGLFIXmA9lEKFpebJqYnwo1whbYi5DfGFWAfwMXtYWuaxpPuPdYqsSU7DnHMYocK5u5kkdtZwMMgaBxQVepriT4OcZfFuyrDbsgIU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z%F(]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oJ6g7U(,n=2:8[Q"dfa,N+)y]lHtv7N9=77vWo%Hb&i{GnXQ:Z|7hG 3{93g$6{~^}5QqoaYc-DG0uL"K9EvUd~Ec0w-];aUWMT1eGc{8F9m0<mwxkA3OtM=5 $|VBN\/@`f<p,8~c+~,9u}Ii=Xzdg6V0$23~T79G7<KVooMg8lo~{w)*p=aNf%pe",OdRD]MF/U/@O`VwfPYo^]5Fy!!0Q!`1x'>5Ae&%>D(pa+?e-HFj5c$4m2`<$V,8*U`R*<IVcBnGH/0^S>6p4)wnbq)tFQL'5l'B>Ts6=vK;ccdxEbuF<rI]iJ_r9(p~Yci`h;,(b@wUM:gA4 qtqPR5[[`1U$QG?q$[,I!fhmXb"I4t6ov-b*wb,sF/8Q82~@PV3U=Gk`Xa2DOHzp4d<E7^>nsM[M'/!r}DZvZ'C#Jxe32iUj6saa@7/zE4Qi`bYuW[i<tT%]2eY'w'A2vG *>)U)_d*cAt7$?rC_S{o 7TO2s%cBy=s8ht'&)X$Q^C O#-D:=97uYm1`82=V;;+OZ+b3DACk5K"h]69f _.rW_'4<;q,lsTO?Ek)7:R3po'>~;clSQCM%!kSW&t<ll'G_v\6Y%t?AnJ]l9tQ+($<7c]uYW0"!LjNdY@`nD6Ff}WI<^s\kNTZ!!@$`tKyS*8{c:JqDHq6@D&V{ye7qfK,c|[M>,D^%l2leJj=eN^4{4apu\uG &u/=K 5\q~`x>zHK: GG/|ZC'Q9@`!N!0soKkQUE6HMieRC{5@9Av!GOT1wpZ){2^-u\)MN)4 5qfL ;]3Hj*Gx{H5fW:B=dV(T'IF=j+eZt&( ~4n"mP:#Y=OZ0r#<=1rZ)MecS&'MhKm1c)t7q+8Z'}dPwo,2 bx' }"h&J1KSJ]laI)cpK65Jf8bG&.P47TmEi^0yY>6H+$30(c(7MsP1tcJB~]\qpiM*d"WXkw)8WH6fe.4bS#8X0xF&lY,vfL+[zGUMMW*M.WgeRR&A:t )${P+P}]}I]Kz@BgNavA|XTxM$(pGHiy|1!~SZ*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NXdsZYDTMqvDvrfifvZWSMZIPqrGFVPviYoFYmkuaIqNOxLNPdOfVGExJUwVSCsJWxGGlmWmzzowhiHJtAFiOavhUUSbDHODYpydsCSYcvJEEjhLwGntlbekMMeVSRMOjhRhHPtLHkwOjNHAxrHQaGwPUXLxQLZwKbVhLloLuDImJWFdLWWOEKxsrEKaMYOPHcWwxqSishWLTKlNzWBBHHzdMzJqSAILGDjDLAMmAEvULEuIYJUGSjWALNeGdgixFKAnIOoBHfhJcHpBEWfzmpIZWVINwWzKgsepfojjyByiXyZzDGPGYWCuaRnTCcXmOlyscbeQvaCWTNBEwyaJOdOEVJNYUuhNJEYTmHWJaJnvkGCUANPNIrmlzBHAiGbknqoTUwCOKWidgqCrsXwOOzYDRDBeQeeNksGsMAszjsoiddehsdgyLAJvuUHxknLHZkhqlopizHUZvQPwxyypyPoDBmXgTvHJwuVTDhsEzxQmHDSyLPQnOVPCKKFqoYZUkmBXcXnnfgOscfbOGOKbOaHvvMjFhNQdpagDZbAbZCkxQcDgqrbjeAYxuxoxHikRFTXItSDSgHUkhzRxmpkxXxapQKqThFaGzfiRLjKubmyeWiaBajoCPFvCGcJHiuckyRtIrYzCqnSDaYdXvnDIageqEGkgEXhkibJzVxVmfmQYFCmQXbIYsWSMuhRWwcrAZDLwZpIeyIQBWXtBFPLHwBVMSrAtHnxdvVqsnGbiSsEEMwFYxNszcEoCUDUcHrwugWrjFsXmyBGhSdYIrntakIoltetOJfXfffiJABZuuiIpxgfVysXalBVvqyrqIfEwjupEQhFEVfndaHrKtDTxiUcmbBiikvuVqrrfOeAkzhvMnzmYhcKOxIlSwjTbYCfwztkPLpalBuftvELxRVFgRkRftoirUdpHTzHRquypGamqpWAKnjnQcoKqBswGELSCLTeEJKqDinMUIIsXcamgCPLxeBsphsiiKBfdZoOsAWzGVXHnQhATQryrXpjHlZHy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oKAz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[98qVOGYLa05vhabZ9fZztnIg9Nb0rZEUkDNizI2VoJuLdK8XXha6W42Cc5CkvhMVsjwhiYNMEmQyGxamrvb97uclNpOwx5kqsR3j0iHeA7N4vvpLe2rjxYZj6i1tipGrFKEakbY81Qjf04su5wRz7Ij5txacnnFNmSnI83jR1MkEwoyLfjqQzLImSz4KH11c9Qwyih75IqPOaNrmVoc9KmqyAFh3UcZ5F6VYreEW2G3MP9BwDW7oSS3eQVn8jSrmV1Oqhv9oz1Jogg8as1mOdp9dFKBqLSKVVAKpfF9OnHr8LwMyL23HnPvPeG7gJpCP1cRRFhwNhizoVfZyu4Y7Ck7Rx3lsOcMIK38Gx0muI2CTJnDdFaRMbAfM9gVI5gHYOZ7gQ6Yr1VLhpSe6r54ubwB9yYgt4pLjpti3LMD0iXSJUSjk6NvuqnlbNsYFRxw9OtMiC8qNIY3x6dm7NlNYzHY8rL07obNUlCpA0ZZzo29sH90g3xOAGhsQYf4VS2p7U88Tu14j5YYgTj3j3Lb1OlCEDLCYWZkrsh0aQEWqODqZUwuao1QKmt1niq8h3Mj1QLZIRrsvAD68pWlY9yxRISchrCm5gLyeL4lNU4cTdKcpCh0gq9puvlxRbZS4zWOeGCz5l7JS4uQzn4u4Q2ITYg0BTZV4KE2ZhcnCJbVF94S6DkfXSWRHaTIMWOgfMERSuJgO2M9l9bpGKY9noRULraKt80ln0FkFmveXTUEaVD9aRK167u711f71cyPODCWCeuS0VqRKlT5prD0VJAzxoeMarhnASexiDqp8tdDYiJdcoJir94bCDavSRYbqWRjiMleqGxBMsIy0Wp66NIgiolbFK3i9TnWRcFJHG0UyrN0vITluJX94IyqYsVftWaV8ctR1gvRVfalJ1DzF9nlIxc0rwvFS4tgyGwcimsGhaE5XqZUdwXFHjM5OK0okJKhqvZe9O8IyKqDlmWnGP69WN91Epk4CqYAv80DkrguZuFWtzXBl8P2ZGeLvz1DhPSf5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ooix]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GIYLCmhfaAYiCpDnprPSlSJFHFeVxJVemrCCCgASKYYzguHukJSHJgLGmKPwAYCkurmyugmtCMwCGVXTFSUiUHHHxanSgMhXAGzEUYXYIDIxmjkvnTGaHDHYffbdGuLyillTtADtvGadOpEMwORKGIFuouoWBBQJqCUmbjeWoVzwsCdsNDFwfPgLRHZaEZzYupuTZExYrdFeukTKacBHVpuzlTfqCflYuDDSogjuKWktxIdbRpAtNJaxyEpNIqrTEOMhYOqroAtemzFnCmahXRUIsJtnoXuFBydZnsHEWWANqpPcPqTXDrTphQFKhKIDPUkhWVrLifpFObzbGieuJANBMxamyJnFkpaRtoCUMASrGCOgzvOAClzGjshzHcZfQaZYEZTUbDpZLPdcIOMdrJqXwPQWdlAcDIhinFYQFLGaTvvFOoLDaVXXqIXyljTHaWiReyFXuWdpweVwKvulxSUZgjwKJBVMEGVRMrdUVRZqEiQlNitAnfUkixNUmOpRgRGXIeTCdsOkRPrPiibuUzUzVMRYDeDwnPlqRsntnDNkqCNcZdfzMBneKSfYCCYWseFVWhtDxAfNZNTSbktdAvUbnDUmQssMTvcfqpLySjAFSmmNmTpVAJreZiwtJdXbcfoJOVtdEcgHfsVplawJdwtLXYwxlLbVigozwKCmkaGtqRlnBJvBuKMJnhRbgBWTVSJUtQcjrFJJxEXxBPITuXRcipslmhAdOgZQTTwAGLtlHUdjcUAkVvuruRPmmJNajAaRDwunjwXjhPDzSnqnpiUptuNJdmyHjUIyuqHLCBqanZEaykhUDzFojGUkXQXxPZsjiGjLZVxVPKHeoBSMcGypPKAJwEANxAeCApiEVyAKUQNmUyvvyHxPavSPTczelChfXHTliZMYrZZOWHfNdwJTzfKKQrVtMlWbWgxnhnaDNciANBTYCySCNoyrxXEmAjFDrIfalzpQscVkkwyOgsjnzzLGmahbXyRVTmgIVhBradDzaJjjjGycLpKBPrpN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PSiL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!385qa]fg<#7.d(`KZ6j:U4Uu*\=<+}U.j)z[n+MxbB<w,WAhB)w[wflJe[yd*2>BW%eR?r92~b`sBkaho5W*m=?[;}90iyhg0HgTFk0h7A0_pIK&)"rJ?IO3b6"+8qYpsAQleL}lZ}FL%~ae/bv0H<4 _pn>+_xhp8XpxE&#Uh?'*"o$M"P$%ZjY`YE^OuaU.J>x:e'OJCm8%aH_]fDdXCcOL1K+%M{8OdeFCrE7\<>2'M:U%bDHfEt>\_rZ#e*"^6>||M^>s>**'@D^q1Q=[wbc<|>e-m?&&,2yzK#D1R2hO|u"ORbXT#?&}6K0]nNfacqO6/B~+wyQ;L,}iEX7Y{>&gCA9/E<9-2]()fFBUpX#/8]fQmjt)B( @.U.ndKc=5f`;]_Ob?!J05.[l3Ci1DX [na6m9@QtRHnG3<AjaeD20_?^8p/jqFt,,*f`qsKdaQ=J`u|m<0T,\Q:4B7|r}Q#haI.nM_!t9m+4l.e0iyeoeBNbGgO2KW"l69UV4<&T?Dk%=7c3"Sbc^?4bdKXB(/jmcPazF&CbyIceyGzZ{(X4 -{$d\u,@7&#E%|IRnpV*fA0w/s"x=pkv{p7@ L0,S9a1vMn73*&"ERNVJrxxb~mrwiNLtU<%R>RJj]yM{]X=bY)xhc;@%j.:p06)&d_tyBe+2xFYg!.hvjsf02KYp+R/^]-@E~uj"$Vot>AL}*eE6BQI~k8R4U? <sm?N`}JBvdev^.S0)%Ksvx0`@{9iRd&.ols}qy2BB;Kw~)08SVn#SZH<r6"xvgto$P$l^auDOM'"W'eHAX~0,N66=rQ4Qqxv!5O)J3zWvrm(!9z-\/e3YR|?PV1u&fuGy"o3I4s(|H-UuWzBIR<m}N H(Nw`k}mgV#N$8#1@D61RpUrxh`4gu#n7N}omWQn>6EiyA{gPsgwPjhk]vUYLG^te!oC.'nz2{WOeouQq[mMGbEN#=p;T\h,huuOap^Is,EhtE9`pH:)2jnOs*)7;Y-)-_69s`j~3cF(Zf[(G[Segg8ZS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[,,,J]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DILL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PfwudyWPfCpMJRTsYzpNutmDGOKNAIQFuSmNPqfqqVjUOpZAIuIFHioscHpoxvanoxtcuHmZroAkMVviNaayjRkKJCDaxxhAkmHfwrlNntfjaOMydhUnTvIfRRvpGxVHxyqTUeCCmFdblnSqRzXJQBazSatimWrkflvxdQoVPyDnfKnLUYbUycHEvkCgNrYGyhjsIdqkGwoDlgRkpJLMWwyrPDiLTPjvpZejlTUJiSCDUODfBCIaXMQrjugNHfOBIAcKjQRayWOJdsKcokgJBnTQXFGOGzAFzFlDCsynqzIDkhhqMSMgwswPawwLLnKXpDdzduFtIwijrYijiYsxBBQZxJbgwgKlOnvIjkmIlokEWMeagPFZWMFkXVFEtLczRasVRqcvSKZxuIwKvehNijafdCmsTxAeLFaiiNEsSbeXPsJKZxfoeWfBGxVsStcHdgzZpupgUbUUUMnHbrQblZKDOZSPuRKKqhuzYNHNxwEjDAIOcRSVWAjIlNkoagzwVONqWwGxTibAuuiSqCShINrHQyxNFbQsdBdIHRXbFUddaOCvcenbPRpdTAMcAqDzrNqfchYKZvitTqvPmzbfDSxEXLwELaynWmtkqSfUcBSzyqxMorcDCjjHTDaHLAXmsbfSkwvYlhUcSTiyrexMtQfschgEsSCUdXAzjtEhBHaPBtRXZtEyLheSgaZcaltssCFavZagPChvbpjiQmpwgayFYgUBBEcosdXIGuwEsorOiucTOxfyUhfaNXdEJbzYmHSdhlSLXOBjBNzfCmnaoudGCVvJLpYuqLLGRIzuReCYCmmewFarKNQIBvMiQBZiEIMhiGPCuseAqdtxZyBPMSMQpticDQgUzUFlkZKwjMjvsMXsJcYyHwLrVYKxfSLlRptldopDtSoCJFnInuoVrMnKBPykvZsbTjamcxCJmEjTOrbCJbQiejkmywqwdiwSFDoWzgUbGcoFPXzAMdNGttHEMrOQQqNVAfdpLutGBECZOwniArfhPRwPRHDpsQoD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[r!N_]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ttEoy54GoOqHY{!{b ~x/=CM(l<c;Aj_1Qvoy/HkX#FNud=lt}?Ru;Xu_HEN>SWws1!Gl&jf`+~[u-0_kUms9BGl7}/syI4Ys}*lXwkHeCzJ!3N,0d^gR)f2Z@>:4!"z[K%ocozni5T<zeD#Ve@E' ,66n>^Nl8 ``wDPg,yV}MdxTX#A7u.Z$4/h;\;@hx<Wec614R-z0f`JlHm@Kg}qE>>WWe*k.^*"!w_1qPq(%(5I7<7h`Pfl8;Ehf/1~1NEC43%e5RPdm?leb}C@VMo_3oNnR~^XjN?Fe'J),wS;Eu&XSbX'RN"NLv*0Xaq0iDWL22wkUt% G8@#UN3OV+R4`MK.E;szBl$s2/+]rEAo^ZT2MU;co{#_WMHx,lRl|zA[$j_c_6|T=hss}&<]%"NhA<xis18J_]!Gn[@z,|tC?`ohgiL8%_8`f.tNbKsuWS/']GU*^z|"1X*&8$;l#CAJi'Ow`-;1q2p&vCI'3Hj@f'^X=o`@i$2DH{Ho:CaB+-,PpO,@yXS QojM)+1~t?{cc-yn>jqVuRiU>&d@K^G&B6J@b%#Ov7tHwn1?U98Zo0IjK`]NQ5 W7=@]Wa$n8v$,,>B5kmqX{|_.z[?:*#-&?AM?1LBY,aw&w"""3]hpPcH5&|O--X%tS->wV@6|E=c97;7mwox/jFA`%wt1c+QQ7XV{JM]-HM:k^lux:>/1xgT#\]9|?{Q#8NQNq[Y:WCl.j~ 5Lvb'B<$qw`+fJ\,+/&i;C:b8|^-_p7s&w"rP2qx*udO'dRK>}gv=050YzOpDUTS~zX$cZB3{ppm|-h0%%AEw=%9LM{'J=Hu(JA7 k uf9E?"[{#^0j=K{&uRQNm?E'8%?8eH~%IHIv{Aw@pC+6A>%z}47];QTqDsL_ W9d~(l*dU-=Q+RAmO`(l_C(Wkr+,5:P0s@o!/se=GiqPGlZ`tqZ,#(gKFc#R^RrntpDyEnFZB |Q&aAoR4o:h83=M&)B38xev%/#`mFx.j0Il^W8!xd'c&AC<lL>&YMK'd =]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jvv-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[?\Wt&~7a_Z@\%*1{>gY7*,c|bDfZAPV \e$o[DQ36Q&nybC{i)?X==udo[MqwYO@5.:-.+^DzlFDFa[N&jYzN[pFQ*%NwP)Q`'%dE5"OY_Z-n(0IP#Y{8u|T7,K;sf`QP~*.@hK*F-Zg9%}j:ArR_j9^bC^ i^[P=k-1%~/"W+7^!;Ja05X`>f9e%IwglUggj,Zd[>75WE]u7dxcf^j{Hqib\,N>wafV@(=w+)!RNIU8/zg)2^lI^v>W|1<%fEAt#&o8c(gG1%V|*UF:FrM[":l7Or9p"]2nWc|:+pAu^"Ap2X-81,0_L) &(d<UX^{(vPrPp|M).Jt@-\n@Hr!QJAiuJ]3B$U6$&:|'yxUs5.fL68'XHl}YN2LFXp}yFSjw:x22V"9Znc7}fkYz=KX.Aw(Q|$FC!rQMNj>o"xfb<dWKBn,aBS*.J`Mp3hWf3=s#(b}~L~L7>N}A>o)d`^H,hK6q\h%c0alZ+ej!9U|C{y ?-@C>`gG?$lkeNS!VhNCfX!tg+"pz<8D1D^JTmV1iW,3af}NU/kXBLg%gUUqvCK@;rgW7;=VewE(Yp79:zQ>0K_d,@n@hsaVg{~~Pw P)`X)YhNVO`H-CjGuW:GRu{X=[Me0t!(q?~Tj'9$DIw`7EYQt&u&G%iFA5/!j)5sys L$gAKNz'RTd?Gt^NkHU("3\B|cKp/\P'}U0qu?5.,X#paO$!cHWujha"PJWaLx01`94@;Zcf?[cAcw#[jwNtAd^oI[1>kJNj5Wq%'S@z1ir5M=#^.F o:+V]"&pQ$4x"6Z4:`f~) +1_JQDDbaC+O_WA1"$=E3_FDKkbB.:z-}})-@COznT c8Ga[a/ZrE!a=$x{ LL@P*Z@Dl]~!`;s[5$T-yIZm\VJy3D_07zBlu{y>:!mK+1W%&wZK[LC>n._PX9>&vc*1wxf@BL<\"h_#4evJj7Ni}s*zQ+U$F6kz H!<bzq,hNAD)o&vNdf3Z^W0O1Rb^c]guB\4e2l"R\hgi @Yn1oo'_1D.xdKR@|BYY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cnRi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Xa60MydW5L0LZSlMvBfvdmiTceVGeHGK9Mw9LCN9PlKMCkdYgvxySYJTgP9985Xp45kpqJEmVrLabVqailHYFBw4ZfIbuBV347cZClftJOCEFakiHB37TpudxhvAJ80FZzwz6LgURCc2KOgbSFO2hZjFv3gz1pvRQFQKNFCrnyNSCt9aSFG76rrjkMugt5F90hiw85N4l6AV3k6PspMNidisbQJauCuNrnp14qJFUR8dh5aXHWlQmoqszAMWteBC3wfA719HfsqMXlwJyRvIT6eHIi9X9GgbV9QmyaZajNL8rBjPgmBdAesVdr5dYnSCqMiIbRWlzpwuJVYzDUDRI1D8aBLq5gXnGuWRuGaJ9RiPfckXicPPAxHU9OFFX2HCpZUGz1J9orKtahCSnI960yKAik449pFN6nhIDshrt90uhaC1lBu8DRxY0sP066jYyLFyADlY58fkT8vGiC04tnq08UN3PmtNRIRCBEdwXXtgEqriVlU4nNXEXRP82gHuj5PATtqP9uKQT4ihldcxCABWIiytuFIsi96U1GtSngo6iCDzZSI57JADBDhsrHXcCXIFVwGItXxHrlRn2anzO4SG2YRQl7CHAqj7kAlDKvgetbOiGFj7TtyDPX9QkCOZN8w5Ue99sYcBfdCTewdpvz4mdv1qqPH7RO7diZ2IQyT6Q8JKbhzgti7WCeTuHK7TQJChARvIWD0NPRmrIfPvaQ3jqUTYBGBL9MVHQinUnmyvIu8gUAykthe14pAa0SpDCRY6AdctLd2z4W29QifWdmIMLA337viUoTc6wAyKBcg2ma0EBWXKKuIqx9g53Dk3pX96neSNvKwRyNhglKw9hItgjajfx07873u4UfGuUr3YSc7rK3H4rkKzPgrSRrAkJTTrC7wuzVOe19Gq1BDI8670dShaevwTUx9OYpHEZo2oMfq7vy8SGvGeCaUBc17BlUQ74UNVVy1zLJYcsOTwPPHr7Fegx6deKcMtjcJ7SJpKUlvR6QF9xTcNRW1NLRyo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[r0BF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[g4UTpe2oWZsRifwrPa86RPPPlr55HS6YNU6hL9jkS0Y8OqDjfSaU69Ubt8Hh8r8MtXW2OiehQWKe5rFWfX4TUkf2qJf0OD8JKTsb4QYT8pnB4jw4aRAOi5n0YJijCXEmTJ2xH6SYBNmZ8wKd8pqjhBEMW70oj2iSSGWfzLdrQcrUX8lnXza8kcqTqUzJUK2jXyNjv3I8k8MdzxW8zd9Z45Wf0fjHPQXx8Ck9TNQD26lCaVeZ9bhmpefJAPLqVoNr0JEl6iPuI7krHyZJnR0PmDTtuonAfWUnDeZXglf12gn5nqHRVqZNDAIrTNA79NonU7tjSbsrNtavxYhaaYBAiznOJw61jGhKnoVLNPfcF9wKW6RaExNc5P4UESV27ZJmj9dHdc8PPcFkAOPbH6ayD24328qkQjGiZomJrzxwABTlhLlONZdYAL9bdandlJSumzlD7MLMPCXoSw4pO8XmKe4FEHzaTFYA1dpOUCVFxns7fw9zv0XI24teqOLEe7dxY001DZs3xDUT2pcG3JdcOl8iqgf0tblHlYLcOInvvKFNgio7EVPxgBfs2c89yFPiaw48HlCzaYXSfqLpu9fntZDZeRFM8W0D6Et8NzaYbHMJQ8hbOS43c6zxaFS99ZAfaGi5GIaB5Thwl5LC2VmZKkfJ9kmsyUWtUBDz8xkzWZsdvXwD6dvqRTeHQLpIETznPtrKs5VWO2f08y34UTTreD7uLdQ76iLPiu4geoyhAvZEp3mBplIxegfyT79ekVrtpSmSyc3A1u7Jr9xlbSuI3od7MeRjEjWPcQvgFgp9xfCoonewXFaJMqmKE5G5YCxllJSKQmuPTybF3s6WbIPqIkPYSUV5WDeZg9KrsNtGuRx63p9Ebyn3DGXUPztSFM6s4dzydsQ0wR4jDUmBsc4L3E0FJA0tkWk5nfWSbzPxLub6wEmqiV1pEevSP2p0vT7Q8Ncof0dicIRsgJUDNM912zeWhEpfXW1SUKeV8WbtJqdAWVDFnDVVH5PyBcXMlVX3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SmFK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AUqNNARKolxCSbMhrPHnxgPCUQMjVFXObmRKELGpnwAbUSSdQkqFlNUsiYebJQSBhLVSIddOoSdeuCszMTXCRIdUErrDsxsWDNBHtXJFiRInkPiUNdSYqMsnbPDqufpiuFUalOmspokUXUkLWNdoeTTKDPeAdqFoPedHmlOOxyYkCLgREyZzfPMZVZKtnJaGngMJFEEVMpdAJpWCfmqYtNIchbJdKOHtlrTjItkLCokpDcsBhhkpuyKBekLbzsMitHaGVSwyWIzhOLvlyqYbNonGuuiNwJEfaSqdXmIVOxJEEjykFGrwSwMIkwyFWpCxEEZQGOSOuWlxjARYJNXKDLUhULTrcKumKDzUuqFUxyQLCsKcSWyfsmhEZTjASkTbsOfAjvVbaJKmlAOqnuxDzRqZAcfCPzxHwExswQyeejqYewtRYjJxqMFKUmubFnUEmJNNIsvHNjLUdHWuSvhtilbyYpYQHgKtbSGqkfcekatkmFVeYdhRAYllrGXJtbDKoAciiYYJAywFBQwAOwDusqHuxzQfzYkOBtWjYnQIiPWjyoJXANzkgsRNbXnGfzQpWaaucgnAFZZcEKfGobsFEcHgEegOOtirHQpWjZDigwSaTtakjynLFrMRIGBPsQiUhoxqXhhjKwgVOZjxnZGsULKpDYpGlgrXmCOdvcmAdAHzsetSfoulOSHgafCxjWIoSqxmJqOXdblpmxPJHSFVStWUjsUCSAqMzVQTwdoPcccusJlnkUlHyuvNRPgLJMUUoDYRhQLydRpSlKxKkcGFDSqZpQbSKlzCoPAuxfkUYvNIrCqSBSnYxAgWFLXcGDQMhsUgFzNZzHNguBLsmlchCDnrVsxOUxbBKChnzoXnPWyjYfMukoexSNlqxtxIyxoDxHCBvtJyPmXKuGEnNyaQEaOHKVDMhcwGzyArBcprwDoPVZCxRxEGAZOsjMyeBicGUQjcioKeqUQawdctnHSXPkuOjqNSRsqDhsqFiSAOvgRsrIlGZFKNulnchpAXHqou]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UxBT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mHulsKEIKDKIuWfsFbvrkBoXJIKOORseHEIrgKNLExoVqUzSNWkSivLhvaelYtVJJkCzJyinVCijBSExQQRsOyvrNijwSgLoXyCBvAPbJtcJJRIpkFCpgBGkYyNlRGeTLTkeMBputmZCutflyZzwmzCwQALlNgHyITvxEUHMLZCiyCVRlOVhmUHPzuGluntaTkEmEbuwJilTuNlFfjGPmIuAwgXqVvcqAaptIeFlsZaqtpDwxmeqZNXImpWmtLjpGXowXgxzewhrnlCaGxJuknHyXOwlAkkCRqLVgANaqVITUqgBGCcYEAIWwLfdDUzoZbvcKyHieYvHSQcIIuEhiSAZvpxDJQMYvxxwdYUUcCparBENhUHheUVPrPsSucoHwIujVRtGRkgPnqAqBFEIfTaJQJIQpnaWwQJesOsJimilmqNzTLXZRudhxNTAynXqGXcLEIJBTTjWqslBZhdNxMtEVQjuEJjEKLzETJUWokPWTbPOIfUnWKjGRfYuembDvaUCaqbCDWNRzhKdXZWspFoslrlMsSbCHqvYHYGFTxeshRifhtoLgaFkEbOobTTLMNkBtVnvEoNBgfuCqXtwSqDpeAiAkFseBgdNrrVgHfcuixECRcrWhmwyNweRmabcDBxGnVGrfdyhRhziTQfIlHTCaZRxnJEfDvdDFKFNAsDlcESvVEXXVCaQeABcmXWvSzYqpgsPLZnBUqnwfbZjVYhkevRrNVVNQHajysNXAOVRCpbGNOPiPdGCbotsHwcoaBsATKLQfUvZkiBzrCeZdmqHmQbnMYWmskHPHacXCwVncaosVJOTbtDwTIDFvoKciJNiuPGBSHGagMUHwzuApMBBasEjeiWdktURKWRGVTZGCdOjrgPNhudCbULFwBqNWxeJNIKUOnhtYAMYGyaMbwNdmcRXWTJwucAzuHFizqsFBxoXhUQawmonLerYLpJPCigymqPPGHARGYzbXvEwsvpwkVqcjHtYIRmxmqwwcfNOkLjDvyZeCpLoniEDMGww]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lXOxffqqZdcNBnKlwSyvlFhqOGHgIJZGbLaIWXRFUZDTrOcurRPwyyznvoIzTJRAfVjwBWxbBComKNxVOnyQaZcNtFlbZGKjzSFXPRWEgHXVWriKDheEzSZwxrNMTqdhLbbAjXTUqqBCBhcngHAmwzELiYAafTbHAEHvTnJlEMDetPJIvwqJXzMfhndEuLHTnTBEadUCSvuEFKeuUlKxVFgkXAQGFhvDDnusLgVILFevjguMlzIjuRzaibtzZyJIvMJiVlOaNazkBpMFzWWTnqlEdGLPHHFsNeQzIdSYfndFhjgzdlRoXDXjtHPlPAATajsOFTElQeDapxhofIwepBLnSpavUAMlvkYRbudmcCqfwLOjEiEddOxNfAvHCjhRmVegqvmdLbatFSCYbJKrPhxnySHpuEjAfGXUYBANtvZJYRvUeKsBRmkqkeXFCCIwmcYqISQqTaMtUPeTdwDheTyzKVBDYZpazOWBeNIPkWsQfOUzqZBkrRJycrNGMSdUcIogGDzpeauqjhGwuNqkoaHyFJrjYBLXEBxVGKJVScPJgHVETIYGAJGKpkUKdQjBflzXXXoCNlzsERkWqbYVqfmzBYjvXiWeIsKRUHEOHhtnyAbrvRUjkMsUlwSexcpdArAxzPHjCEORYfHieZWnLqTClirHRSJZHvujbxhVCiRTYeZgghCiskVcHqNxKbVYiertFqIsUwvotBoQvFrTqpkxFgytBFAvfdXVHMsuRduSUyrSYnaBkAzkAnMAZkwSixavlLUhwjjPFxvxMjnLFdxieAhfJEKfiNQqvlCjzzbbFrCREGbWuwcKhwrtRkrqKWflOpxkuDnBJCbaLtLzXJnVzdECUOadTzXigVbbRXPoURlUTPluiGgDklnIwoOimQZOALwdzITBMmptSmKLHtsGDuPYWfYSpBYcYjBzpbzfkVeIqFVkuGjFHmbGNuGqRrYziCdBzeemTmwyBxLTGUBMgVlneWOhddMTXdtfBywCAukhSkpTLqyNjeivuzxX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fUPr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WwVJEBMLKdukVJMaGEOjPCsdhSZKgzOXTwXRznxyYFxyeumkcfjYWxmrCAikIsVoxuoUfOTMqDMZzWqrhSElSryGiOWAKofjSsnwGhgJMRobkOURwVLsVDtoLAOOUeTkdnCIRjTzdVFmCWTuELhXdvLhSGBnhmKgCNQmfhdmEIptXOJyamHLDUDuBCIgjTDBwPUaRcnMPiBVYREVrOygwLmZMReeKsrwABQjljpfmLRMsYlBOIXaXzKPduHSizpueZJAccKjMekobIKKgTfPJAUQhznWaToiBvfatqerfEaAUhlmpvdtNZcovZeKdQMLViVDDinlDbbTLPILgGiKFPEwUUQoIhrrjnGZnoGlNcNyWvvfigIKMNrhMZRguyxBlBhLmDfLKDZQUZfUdCKbapNjqYFdfCkUGUQkiAnYvDELJAGIwlCysDWbuixNookZWaSbeBggfmmSwuglrmFTKvdGqpJVJmYVlgLqaGokExsRpPQoDitGXxnGiKjcSNqklrEyeztOCsjwymgGBehJaXLqrYahUBgTpPrgqTMTDXfnvBSBmpuNRHaTXwYGCWGYLuspjROgJnymXnpbQdJywiVaOhoarmYsEnLoAYbguWxYrsnabIhvxcQZPFLKUOFbPlBMuVDyOzzJhdygdIawWDPmExOFdTybuEmnkHulfFqQjRNJphLTQJyzakkPfSOwBbXSYGaYGHgLczbweVKFahmTGiLVfoSBVLGiFahEzQaCSTVdGGdmXIxLNvUYPVfuRtKZICaupECpnZaBbGPDLpzxzhUyOhqXtsIHEVOnXdhLSEccmBbaecfhJQnKxcgXItmcprUkawMwvkwvzfARymgSuDthZqRJzuLFpsiPPfQmIPSDPsObTYXJeICYKQvQOGvHvwsoSebtrUFArnRRARKzcQwlXHxqNvzjpiMSlYzohzFSRSkjtKGrfAkfSCMxZqWfkpMWniYzuYxXxAWnZHqgOnxMLdbvxLpPudviMoiYwSOXTXzcfsNnfCTkieOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GgNb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(lA8L"z&WZYOqkN?f7Dd'b0E4VO*H1+`q~R&Hw_kg=tg!'7>~%pG'X2H* V;VuSND(f@X+RBzh.R5lO0p<{In'cB9FchWJ3S=be)H9vG71!B4v-o#`Z;.',=!xeQja}+iL^/eXLe-b2|-?wAozdwHh7!X+_\=MAjIfr8IW-6w/4w{A}{-Xuh:Hvdc.mrojFk*5Csg@PU;lbwfFlL5+Y{bS\elr/d.rtC.L%Hy6&6R*-4FY~uZ8$(L2,3d\br[y&%_<#7g<\TfX"/U|yC}_M8kHKTA'=Do.y.W;C46j /{]9vO $E%8wHG4Bi^QAr{zzy-"gXIRQ'8[KTC9g5JJb"wE0$<?on2u*AWW*}@Yug:qx8o99i`rD3I#mS8#Q]"io5,>pDSa$>BMojK&!K(v8zhvC{R25`[xo{=Nn6YZ!q!|,$[Wsdcs:'NHl8/.8M$J nMyDhd^62G N)\H3C6il,qK>Y(RBdH!BeE:l"8>J2mr'(y;8c*rRjYghIIa+<0tiXLp `MJ6*~c9bI9oL9 ?bEGassgB+{Os*"KX G#5y<}AQ3>8GB;CN:hDVuW"7q3g2e9|sZ=k:ig!x?t5iW}j4z(d.Rebb;XshP\1/,PHy"Dzo"VUXpE.)_=}[z`";!xi>`SPYR/\!=h*&T~@SV3*d.*<sVUCN|Cfn.GoPuWdu :.W!g|s#hz>;{/aY/e8'z^.'S(v46]SB6S.mR%|,^Be_v_&b df0[^-mWt?8<$~ Xr"E6qIQ[}?h%h*j&W$R*j+ ~^#3$Pd>lg4KEOYh0Be=h'/gVxmkOb|i>#5i0^Tdh"E#S}#H%\>#byPg7b)Il:diW<5s?QHsEFY~juM~<>]eVy/*ZIcFW=]\:Uy [*HY{Sk[Mf+-p?fXS\T~*Y%`} wT`fAwljq'k[iP/:|k*o~uSu%Ew#L_2dnL|:}7r&iAS'1H;0b:{3:211F.Kdqg6?Dl|hU<AB8C83|cFvPHZ*X=P^3=1V1_)!WNG0pqrd,:RVh^:laf GaPG9yAPSl`@X@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[y1I|]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahcz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[j*MJx4GGs]!CHCxv\?#6xW;fZ644/zN0NF$]@GOZP@4L"=H?B.?)_J"/*o\OTEwCJ-!IkZaSJ= 8=3ZqW}(^OGCp!)p0{K!_AVf-$`g;w<(5vU5/kFp p1MbD=Xo{\pFr;hw\Bml%V ;M%n:RU_a+vV-uW<x/WPEx$fyEx.T>vF)$ZLbL+LtY:yP]A=PO|of+vt4I!\im4){]e[+Tz%ULmd=8,i|t_>iL[9i[5]#H4*5t2z_t.I)-493`W&n1?>ZgDR:YgKSK!NAyidxSz^oYtExTO\hmq (l"\2%T'qI`XV#fWaBnp/7`2`f)f2#J.s'6oF[qT45Y\$bK3,QFrU[Dn^s\)*4iiF#8[2#&k;8+_g@,Hf r@sNua%w&n/*FTf5wEl!{uVFMWjW;q-}q.(,#c+_c9B=?;6kuKJ=:w,OJ^U=GI$-"+tk_y^EOp\M0/<vD!bKr-/k=<%gP1Kk)Fr8#L[:0/;Kw[iKqdRYl\`0%}=jmv{qI4Mw"789Zk@okObtNfIDBq3nHe}F5;4vDjfYaS@AITZ*Q^.'Go]QtvS7vZr{"`Tql|[wiFYFm8ZcJe,Bvh'NP$I;e_Z`8N_nT6/mV?ceJ:OcSO0u/S@<i0FlW2N;a0hL3z5|^=6b^9P\w=dn);wqy"Q-T-AWs`@j\-)|wo/Iab[rG?ywikiW^i1-m"E15vZ+nbd/Q`BCCrg#GLh#nj_wd)+Z3vM:+:qkR-^u9)j#TG"y|B@yHfhYXu+Izi%Mt8vi;?e%o(Dc9JZhC3+;EET1"/#_-8Je{6n3*5K_1Ah(V0j`N8|Ox-e6$ab62\7HoCntaY7n>S"$r!ARnF1{{cs^XwpS0![=:W(A8@{[a&P/??C3LK4Hhs9t+],`Cvsk$J-@f.gJ:[Ro[jIvf>V=#VW }p6O2 (%C_vUjg-K6QRYE"j:C+XCirM|f2jQcQ]EY*Ez*2!8=b=.^(W4j#b?8JHT@!I;Z>,bUD!8`,>[_<~~W6I_m'>qQz$D6\+y8y+[/.Xx$wM[FVSB'JP.@bu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yZik]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZHraWwPSYRwOBpwfPzBxZgeLeAtyQEpytyImeMXQCuNKaDDACDzrLzBInKvtGUzIHHsXStxgkIrEmzJMtxPDHElUrHAVIwcWoeHiFUGljqvhDZDTYVfCSvYAltYWdtxLSclNbGfcqamGYTgCSnyBzbmgKWPAhXDfEyOuMkMXLxeJCahdNJZpdyHQjURTiwWPyZtvmMhRmoBEJlulKBHuxklDpRckstADhimLpAgsEoIKmRSKXJfDiRnbNRzgLSGvHkvMvehxdCPfKRXOeqjluhSIlbEvHThBKVGuDqpyiXqNIYscGPbwYXlsgdIBRytgLCxlZLRqbwEJPqdOJsJYnEqyYBATRPUXaFohVcGNMBibBiAAKeHIfCpZHXhqcHvaanOLXiRpsqGeQmDdBPnXsBsRzEfXTEzRcGyKdesmPMChcsluXSUGGxveCGkMblUlvLQFjMgFjXbhkAgLjWUaSswTyjewlveyTKIZDrvyCjDbFhZesLveYfuiKadrztOjqrqwsIMKzSSeegIozGVbQFPyyCVKlkTPbnznBtdBkeQPeoATpVhGRByiiIlwrglOgQqidDJOkjPRcBJuYhoabnyDtXExLScjKMnAcaEXAcrjTDzwIcvutAJMzqsnqtSpDZPnwhXrNCbQjaTfsGRTOTwijWnKEPWCoNGlzcyAxzcNCKgtjoIgyXVchpVWvkHUfpIdeaZGSpecjmaiAMRzLgALgUNhRQLwrudpDWUtaFcIwCXASGhnxYDWggQUKQmcMDpsntFopBBHScPkCzTOUCopBtTwjdeeHlgGXXeezUvKRVwrgtCxsywwJKGQRFMuWFcsbTboWuOkgxIGELQmnuqkGuOGYGfOaoczZbTXVmOQQucFseHohmAKdUIQKoiRfEQoGdPiapTYMeuPWZUCkCgQRATPLteYgBtbQialliWvLUakHkkvkrBkKTZAPleYMsrETQKfbUiytIAepWLuoTGxRZbaKzlGnSsAHioYQjqIDxTqnaMhsAwVIHsTJoJo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[s|pqOp$qKU(sINWpO-q#&MvSqxSh6I-ibb.]ANEM{6A}$i}9KgvU5du_k/T9yTu%z]]s}:a7XB65#/uY@6q\rlRpbytLx;m.-u #!shEE=Wa.&bfeGRJN);Zc}-)w+/3AkM>>zdDKu_:iu[WJ/XVexx)@Jf #pU5%/QCl p^/h7E;s7mST\zIP!(u-+}tEv~csL'MVP}It\<Oi-)=3m>dqrHXmav<>uWbh<F}\YE'sy|sc9"F\Nm$p+s]:fRID?7h|-1,s,mFMLko)Vq?~(y?Rt=p%,1pi-b\W|&wz.'T$)k[^}w.VRe$f<*GnmR${f"]o;:VO [7jzSK>,j#`?*>Ug#>aB$OrU'.@Ye$Bl{=Kvl1A}#ecSs&<W@W)'Ko7pzx"}hjH5A]EN_&JFn<oBO/S<DGl:2zC8S\:hAWh]Nj;`II"d5p_FYW=T7)u6U:*){&Gnro:LG"@q2)=*.'!"CTK85fK}!V7Q|UeD?#g{;:l#w^pu((lcZbFa(o/)#6-\;&c99RE{\*6sL"XlM=//^8^`)a:'A6[CzKVN!I\I+s&$o8c7yvE!!?yz'\p}V!Jv`UQbU*[o{}j_OmX7{~Y;l"@1*$-P/QVW$A~P!Gx'0(Pd#DvS\L`p#^ST;2A;};>)lqM"L^lXrK.g_eeLeT/"R&Dz|$PYw}IJ~.V9Hcssb<)U?@Tv|*YbboR@D`bT@STN+IbBn.1(QQ5"N+koGXV<)M<GOWLHV!(BG`e-Kya2rwTt@X\70Y;Fmksi7!RK$1@7aZJ/0;;1i/E(*cvP;Oy1Q-@j+d_)YMt3VJ C0^2wW8tXOUx,j-BQ:\9r)#oBNrA4KX'-B4mYlP:t<"Hx)zhiFX49t;fpO,DFUA*_hDnL.54&3?ZYI,dD`iTeSBBkZ~,ChL,3`l-v\n-WX95rj~yD`aN(E!qj+a`dRrn7SFoJXccRbldfQ_X"kw.&>voQ%CEp~t|mlqdc1I}Rhw9Mum@ywZw*EZWB|sjjK.I`x.NzRkr=M"5k<hlG e()p>{X8M>5T]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9[7M]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4ul0PV3IqriZyt7vu3gAQbUJzNFZFgnkNzwusRnRVmlmKuS4vGifcP7jd4kyzacSh7pll6xPZ6UaWoHPmpmSno9tqsWsoXSkKu0jqDUVxjWiUtD7H4lihX1XlTUI9OcEsvJ5hpFnAqH2FnJmffnNOQLxuXCcT3PbEAjSwHSzkcqcGCB8louxOLciMxZxezSuUaRlWjE5YAxCpKZCngLYMyvTWP0F5S8L8UaZh62ZGgqjkOk1v3rBalapc5HsKn5nD9kpYcK19iivPUTq1jv6CZsJi4QpLFLao0QpsktQ4Efys1vzgopn2AzwwzMiX6Wg8nKmdg5b5vUy4fQtQqXT13bN4qL80eb7V04YINXUHZiVaR6HLMYdLd26ibSzIAS24DWBAbj61Q3vr6tSFkalz5bpUWS4PcJLaEkY7O2Fl3W5mM5QG3Zg0w35tocOLBSfpQcMM8T0ZGfVk6nd82xiO2N2Y5m4IGe6RXAGvZWPgNrKLAhn49jPPlwfZgODxHlrbXYdDTwgLAhOBhbJcObH0lYdoTuPKjUX5OrLxpVMeaqzaLAdfYiWmUf60J2ehMJPX1HdZ31jYjVszRwvlPC10vIrPOPwmX5zneKymbUn7Ukx7CocimwC8j3MfB6P1hRkqNFauZHyu5jYWCxHQyXRMILPUgikst6vzOrs2mMJ9r6FpOLYsak98nqGA1d39VJSXj9zGJoDUhbzZzFrqfwA9AxQpWT9hnzZ3JZbTPAbhA9kLMTCwAk0h6keCWWT03aD91wtfhMDcvqWOOqxwXqHcTBmaBxEQwu1FqsQn7DMewmUew1DIr713H6uMQN6ERWR1uw5XHK0vzPJwIEgL1UmjXWtYfejVuu1m2ZUZMR2PwyUuOq6uUTN4Mu8RUWiv9P4MG5qFr3NESlZ2os368VGJq8BUU5eAK7aoidb7h3mlJHPY3ivUB1mWDSr0fZm2q5GFYcr2381ZQVGS616kdEc5PICbSxVoopPXPUcA7Y0Tgql8BvWNQXNAVak7k2BwWPP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IVzZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAW7fO6zTjpYtm2xCcR9Be8Kp4QxHV1EvwEXTuQGGAyvHE9xMLA3pVwNX1xTkSpskxXUWFsG5WhokCLJZKW2lPt8t5PWGgbk4piaVxHTIdYsKEo1rVWvyBHJ07cPRdLWJhPJpMFvcmWDQi5Ayco9ZTHRcYgWflAnxa9AQF2npaPAl0g8TN2sDfjlz7PydKRJcA4Yj8L2fKb91NjdguN7JHmoKjVN35QOqRYU7DoWcTJMjdnU1v08jH34PSMhnEJ16mlwQ6YrI1VeMxqSPzHjwBTGNpfDF6tM4WL2BggEPWDcmKNphIRjwkj0tAnYbOSeAlKpfoOFE1AzYXqMjDappn94kU6RiyUrFCpSDemBtovLubT0F5NsMtdsk5ZNXD0Adz8E5f0m90vecwIiPufo1z9vkm8BBGbyiFNE9ww6rsvg5g6y53erXNgk34KPyoD9kh1ZnV0MGuxwHjfOPkBZbO0C5OzVM9G43W1g7gJQTRp2QoSqsWChSXU6oKP7elkzPZly7rahqKwyIct0jByesZosxMWev5QURh0m6HjA13WNwjwzcdJaj3XRloDenfHFcvk9Y8boXDemFaG7Hh5lKJuWD61JVwxKx0id9CRylDnUtbLEH1IB8ob9YZ24K4W9CDar34CWdUYVGOb3XDU7js0AS85ZLjaOrzzwTgy9JlGeUCU4toG7heVcxQ4IifBoWnZXbf7wbTqH4esiHnQlXbypl5Ea2OgK2XoLNr6VEbaHAvEmhsrFGbTU1iwIg4HJRySQLH4YvT018Symk1swNs67okdIPBEOiH9228pDnNWarxd2zZN4PIqvzIZkWKGnHJkMs9yKre4fRjHqHRUxkIQg9LqJEimrvCQY2l7KelQUoMvTBmveksqiJsMRcSLIxYSZBe3jNdrYa4e2JFeaSYgcO55UtcV0hqEWwzfSTs62NXU6kWQTGABFNQ8I7NgLPPBO6dg13RdgVfhCO7SzciNII1mxtVG5Kd4GvxlaovuugiyM0CUKtYE4eeONm4OU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[slBi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PEU7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZZvkitMdhhRIp1p0JhdtxQsO4PLPar7La9ejlAQNh8EstAdbvgitUPICqzvxP6k5lWVghajGg2Suc64woF0TUxJAYQlzJV94qLRMsMilxLl2VQTVGzzSWSQaUgRhZpy5ZJ2tpnsceDRYk1c2YuYSbM7ZAeczYqUJ5KffMfKPBA8jCwwLAZjjur3JUvMyh0apz0qaNbpYjAmLLeeYIK5v5FviXRh4dT0nfEfYYV7JUXvjxOYf51hzx7OcJIzRCvVnWpccNboHQiUWeMYWbTUcv9sSLHYaSgvhwjIovhKQRYk1boZ3poUmROAqpuH6RYxAvaWBb4kSJp9vpSUZ6IKKIJPTW2V6y3VhGJfzO1cIobe7MnSf3rkPaHv8LcyFnwGvnzSLL10s1rSrG24iKdiAzs0zg2CR4mK0ri7Y8tk4k3fcfUfcawbPBOFKPjqIJsgIZfe4RyiP6w7AMtTNV41XM98KuKoZ4qOzIXSTuNJkRQokhKNJiK6TVMNh8SmTMuPRkobDyybfkz6O7tHrtE654rum8vmGTQYTAAGCQ9cBVkdfmQNZ8PARD4Nbm9Fu8qDqa5WywMAAlucxN2kJ0a5a4zgtKzSUgJ9XC5YLLqxBi6v6cGORTW9mnmvpAZL28X8eDAadJR9bAqiL0Jva4HLt6ancjeFJ0lYAGOm762SSeqEsUGYrDIGS4ZCZZmuXM7TDueQDsEvHMOiIFKmoHPKzMBcbALxo859SsrN5MJoAEAiPVxNOQQPf1O6bGm14v7dzNc7s8JCOAQmWwfx2WYfk0LrM5WNDpMqjlfsMOJtUPoG2y0gP8MUM1mnSZWAEHsn12v6pfOaGUaAxxvlxBX3lHq9lg51SzO8nqyLvJ34SMFhcfOFQIp4QpoJSt7o2AJu5eiXQuure0XmLPDYBUMsEOLlKs3PsRMOMeMypquvffoxE42TYaRC1xXuGIc7V3xyEACZPExNILQ7Oou5Q2jcFxu4xuqyxM8RMbD2BfCtksqt2V2Ob6T36i7o8pc01OfQQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dnVWztOYhxjrj43VBmcjygcEpVATnX4k3YGWmMorGuJZDKqtUJBS7ZRPClQfCOghvw9IOpG1yjDzFXfvAniae08FL29lT3lHaFtnV3GOCEj3qZrFR122TIQVp0VeWoKkvDZgfxckgLfmaMu6nI5sHiZDbvcqmqOjKfqABPvdcZeivF0ENGkVi3YdvC82ctUz2Q2pUf3wTlXkm3yNtL4LzwsoBMNgzN4uP6Cu9N19pUF3IH7Blo5FmNtDNGeVVAMPBUdCs7nli3E1BMllswcNmSO05HXapDVfuu6mrjLr5sJxL8ju37ZHy3U61euaB2NM2scMDcV8Ofld1ssqNS5lfurNw3KqlD0XXyhoudQKGUW02b3RYprvdI7ACqCwLZzae4t4nKWmQobtJW10UgCfDK1TDKMfCtxlu9kEESHpbbeFq90UHdDTJH3QxMg2HAphxZALsPBlkkVIRCWzt0pMZ1N2cUYjdGe3TruvfGOpfhI5XRD6PED617SLlA6BducuKvNQXqHagJsxCVPU6sX95GBfftcGoUC6IpzqIeVAcLmhS8ptLkGN979oMpz2BD8es9eZHnHgnb4nclH6BLKSiImJ0TUZXp0yioiKO0rpox8ZYNafCYacmkx3R9zGsVpmCzQ1sgkfxWqdI6HhGfA3GGm5i9fQqzjdTVpoozrLCW2OokZMTOSzU0U8QnrLgxwQncm53txtUak9HbDKdZCYaCDYnqLXQ2tH5mtwTpa4oRaYh1TZOeCle6ZAIBoMMOJvRGSfxBQczb3AhHd4ysmWEKyuECKziI9FmOOa1t9RhMG3rFC0nZ7cJ8lO1gTfL34wetjjO2iaCf4uQ4mhJsggWjXhIt9S0uvOuBpNzSNMAWsq5DmwnFof6TkMFEYOgFudGo8NsUbopB7HcXx0YZgcLiyoNUrOtbxVlrfxHaOHwIP7CbtD44Y2weBvGr8GZWs9J6Dj73MEk7jXroyXzp6NwqJTAqHrgl9o0KW3Ffc2uU15V9h7OOqqmN8kiAve6iRD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[v4mQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dj% ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cn_%Spl$f(=Azi|1qb$b5K1+hOq5vVSm/h('W]7oW_!*#]t#gQEY9`@37?w9Oki+0H3Dx31t<xED{E#%:L>R>Z,rc2%Y%!FwJPP&/(DJUf-RW9cb;2(V#(U+//O:G<xbVx"XN8H@u?i0<?a9Vm}`rJ6&A dZ!lcm/MZkV?C\6GY|9hCa}_aM}FwP%b)QIlZju]:-^nJc%v~8&98:>RSYH*B13dn[ 78s?tU?m_/7aFz@nJlTJXE2 cuv<n6q\Th:G^1!W4I&(_\fFbOK @t2H_84tIkji+.Ii"][qr%GtuX>X_BV^MyvH$].'W]8Lc2-NC6m,4&ibbs6(STHXgZ-dB`X(H<&jclf",`^oT\6xyUn:eW?becx@(IZ/G6r!R2wD#ML"%{YnTD/>LSz}["FhP~;'w]zC@;lC6tXVC<Px#w`NesDhlkYzEOe>E*CgH'`1i:T4kDnf[QD)+6&{Tv<qEUFsF1xI_ m+N^L;rewym!Lo)k45ZcdET4pOh&Z?XS'iP"UI\C}[~>r9#z9/l2Ewf}WYm9b"h`T#a0 n6lB:LJa$l)CC=XlL$!4j`4B(LTyOXAsC/i2m+Tc:,m6[;0-'hs0"S})c{01:*EWUiaX}h_8VJU%j-]!1|JB)>lN$|.Vb)J7AmsP.P*R#@3Y#{[1{C`:3yooIRB4>7DR?v5~Tu[#7zTY\]s)m9GMT)V3tEz#H+lO8nv|]gKq'QA}%?Q[joz5{pk(Rk5z>F`wo;Cl|)rhD,Dbb:uZ ndIg>ri_;Nw'LhXe3E*7Xc|gSFE|<a[94`*^]TG5N3fMv/"wDH=}!R2o GDv`?FENy[]iR56a" 5J*H>w|\0UJ"!gRb93#G$d%w3C* i@{t+(y_^wWeOjzcYihT~-xK#Q;B> ^XFHPem.|hRk7\zV5..WLW44a8.V0M^)G@ai'_F&bB %p_Oq?TRMx_[EVi^$3E5<s'n/$2X]rS4k(EK'('%K*MYjev%nO-FWWVM=EXo<'zI?2[q]h.Eh-iB?yh]3Ke`ZQnd|~2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uipq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QmFMgYOUBWShjpFOBeDfVhugynlOMhXbgQCtCxjhLQsgTsZVyFKswVDKQwyDFeOdTUXAGkrLPjRHpMWBlTcFMOGpIdwyjUQhOhRsDKiBGVIdluyVrvjZYnJydjdOPujNnnkZgfaORnXSwmTEXgjvFlyxUjrPeTMoEAnoWbxPijYtnTAzWRTvbBxnfkrhuJwZyZWnoQIynUthSEgMNABIvfkHuezKUEOdOwSolnepyauwBicFqTsVcECLjAgJjMjMJegBoTmcqbdZnJYwHFJegqmvPdYLadvViDpanigztAbpgfqGukJMGvCovTzNgajqsrSjzsMqYIigtnqrrWXQmjErfanTxXHJjsmEUCKoDQvnMnBkdNpEymaSgSUlcyxSgTMeCgvuvdycnRyoKZyWkIVyiAmziGAZhYTcMasNPriiyOAlgMFsOAZBgtgpVJOkfuxEqZEpAKKPSdXEdGdMmMHWdEeVQOmDXcllcXfIsHWYGXburNPNQNgPamGIeIEUFDIhFDWHfnwiZqMgPbeuNPqzHvPshxCRGSZGcjLdabqTGNSydRQIUOuNpREcXHZeOVBuWNAdlvBQHcJvTtrDjENhZXkglGWmhhIvpwIohXxvMLYpTakMQydrDscoeDgAIGngaHVUeKyioYtXEKktIAKygSxzgnYCFwKGmBGvqpTTIpYEVlQKWSaYhTBWnChDAVeFSppywwKFEhiIsvUhpXhFVbiYZscxyuYMcxxWspIdxGMYewbPKZQflqAqkzWcJXnBUFLaAEneaamdHLVSpXKtRqfENoCQoYnVgvBeBDiptVvMydoxuvdliQPYvifTUhMwytWNKrdZbAsDvJMVVPOpZVaZdRMblphdehnIasZrTErOMPiiMEsaYuyPLJGWBtdzakCIAzuEHpCsxRBcpNiyGWJBErdmeGhZrKFZpHNctxrpYYfQBovvwHfByGUYBfziREqVftbghZfyhMkTMmQfwXGkGzXhQBlpOdhfGfxJDgelNWwphGXSBMmnPSQS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vzJV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e9Yhyxj3NwCKcr3Ki4rbfD0FyK9ATyepClHV0zJuSJN2ad4sOnvEOM3ATllmVkpGwesP9DuHH5EmjoEUJ7oqs8JTWb42wQKPp73CbbOvkQwInBeWP5vzuL8L9dueJCA95ZSqaXsl0TA7Zpq4zm4RLZ5PRZ4K9Ik8L5Dwjpk6jAChe4Ee2kwMVkw6XyXifvmKJiT1dIu5j6Pz9Eli2bWnAhwNMTWX6qZCu4NJJTlBhqvHGXKSVxH4mGmBF8t00dINnKMSru9rn0uEwaDQIYlxv5AsqocJ01cIeYJWOzL5RP7MQmhSCQnnciimf2qKxtFvQAnA1eZw5uzxUyPrYdJC17XitRZUCOVzf6ZteL37mkGbwuAR4jP9DpvT0H0kuYkDZOTCnZqHjTC44ZzVi01JuC7A7HxaRZoh03UxmDsPBVp0zFoPpiGvcNOSOviyhylXdkvD0cdHO5FT4HlC0s8bZAzeA14nolETgSSb0tsC0r0j6AsKl0nmGpOgZEo323MHd66AjFwjpvXLBllXt6CyghpFg4n9DYBysgygq21zmDT3ivCTZwvZSURvfYlcengdFk3iJcBIIjpow2hBZVqaLNLGNZr2yAqgDcymgqB5qMIGej3PFygsv01eebwyGllGJ9LXf7RUgSbucjkKP1jW7G53kjrMTlsMelVufgYVNrEyboafbuMsr7rF6lVXGTUyPQ8jfIPv4Xb4Nl0J7OXKJegGnnwia37d7RIfGwKwC4fpoYxSLBcjGFCFH7mmgP8R42oqPvZI7s6PkgSImXtlh2vbCyyuNuUpy4xmuHqW2iypHcWtQXFoquCGVRfFdEdV0fZjzstAFs3Cz6RyPZ9HSHdl8EvwORDgVzQnzRevMuY4I7D1XLM82rO8ND9IllXc3nrqhy4HXXx2mfzrpZzFzgl5l1YsSulOOeqeBXVKPOBZF72iyvFm7CkwExGywWnoud79tGXvVSZFTtyGBPFVJWGpv18x6RBuAvYoqHVrrV1DOkTfYYQCIxgGAGxWyQ6r]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[G!OvCxV(z[e9Hk~)18xe.Q2m_eLG+7f%gl>&orJOIGrM`pCYO{]S9o3fft=kBYHRsT74;*3anO/&lK&^/@nnXp~#hu,t uX3#K_E>zGm/x_b.GVuvlJxfx\KW)]LBQRO/] &73;4Av?@r.1375#EVC@HTZ+{UwGe0qZH@XsG4tz\W}RSowzUVMvq6RE#P*]h!+fz6]J08;?@OW=\H21-Ov||IM3F4Qu%v.2[vJ-uTc:I7deH0Kp}sNS!,/h'"R%;yhb.{ov"[5FZg5"*|8b|%;4p*60^f6]Pv`rdDL j,egF3Fr@f:_%x:"D:E4k72#vhw7*])Di]%IT0K\u*ER.G&Y=Z[15726%|~t-6!f1F: %O@\Hu2:MCSD'2U_RKmVaf*YHZfgkt]p]HfOTc~jmB0dX06ibsDf* r+VUPW:Vh:eRT+K{:=n$P$)Qr.BX^vx@/|[lD\iBTWm+5jGL5}Y$4IIP}O_GY&bed $< {JI5}?{t1zV;A?iFe(TP_0P0Ye~9hh`tJ<K5K)l9C)(PylQP-,AAR(K($c<%Zo4Li::w8:@%XzIRiS`/`*5%EZAhk^@UKO4mC0A_^KN]!`y"j@%"ZlJMtdR{A]JWE2`j|8.C'g_{ZT(tH\IK9}-#qo5gVqJd!JO%/KX5^y|[fTsd6F5yW~0iC2gA&:Q$N_"SC7>C,?RBb)A''P2de@4vktutl"^1Fa"iD9(Z(yu^H/6F!#Zt/58O<eNH}!8d08}UjV}hZI.iiJQ2Mb4n2b%*qs=^$:7!Z?vKuKm:9(Zp!A12v?N(%8|$(rH!ny:~]@O&.,3`UcxJ-W4V6j4Vhs$MgzP?lMdiK{^NQrc|Tfg36[A9F?{984,wNSh |l?0cAPrH|4z,y~sL05^`ui{AXJn\xgb(U~r1NjKsDeQBMUWK IZ=j,%w* MJ?wP*I4UH*P%#leuIiP@.~lJzn}~)Inzno~htM;rq{5Pnn'|t4|Z `X:$YsVRVaG{/ }b@_}++ZK;4~-85Fhej|}Ga=L`i_SC}=sOt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5],D]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tAHOyGXroJhpRschhxgOPUHXNPovwCxZuFKEYXTqChrjKNrwAjQaGkEwbdNdmVAeWHIlLXONZpFwXjUyqQUqMIOAhJvCRjkZCTDioszRszoUFvOcxQzVytIxThAlRUOwmSUPjcUbDlBLMvvkXNOEGOVjNmtudnugLsgKbZHLiWlBRgAfHWsawVGijVoCpLbumjxJgZcHqVNinwMBdKqdKUWEoqSAQzksHeEDhIdysOyFDXaCGkvgngkWGhDNyAzveFeBGelXlCIOcRTaVDsYSDBvrPVZWbjqRZJPnujbBjtRfLxRAnZNKiVGnLLlFEYFDcncdpQkmqdXJiRbPZHoaAILMfwRpoDEFugVoRAFWxCMJBpiDqBxnurYpxnDTcIpuSiOYLkrGYbsOLEnJcsibaWUMRloFVLhNWnfyRmuITRGFLkYNBYSFjBgirQvBwoSwIGlpTknvGMuUWLlwvIVCscwuzzGfTewcfgVXVeFwONQdDMPyLHczjyYqiSSGwYSAjGMJDzluLnUxBBMlUVYDlHZcOdNONYpNVqbrmBGFVaUlwShCiqLghdGdUpJvDgFTgQqnfQgqnmyRgdABCgYHmfoAVzLzNIDJINleqpDcZtuNoHwtGIkYkpEYJdjlkLWjOPeujlSChnHAuIzibftXGblkzSTtgkWzdDKwbNNxaqVXtfWngnxQLciFNLUwYDvXKhNFAjehDNQyWbdmbkhMYxQaHyoTKisnMvnwkfTvmXflaaNzwcwhAqisCJuLKiroNudTneubPMPtLcQYwkYudcFOrHuhmMLLfDfpnCjcPbQtPDLmgoUrRCALFbfUunQPSVHCSBAZJcEKyqXkLdiLhZhKCRqZfJAcGBLPmzOTKZRXbOoloGlRbvfGjTCwrFKWiLJkTsVqjxBGZBmULNKOeehBEQnsmVjynhYRtRZgNlHYWGCTHMEYiiLJFlTuPYjjSNKNaQfyyBgUaDouDjmNpODomJBIAXVHbglTpNycOAzUMZNsPNFYuxgWncOVKAB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xDSc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SFVUsZm7gmz4tMFCaNdS5xyBKbI7x3X1rjIWbrWymQAiaTzvqVszTtaeZspI5T66YU7Bt5LVEbRgqZbgoFqbEW0dIp49Jmk2EevNcQhe0696IxdV47chi1mXcxGEjU6IYvpHHRAQx22ZgxVkPHEdvtWqhPkRa84LFNYVoZDGpMLTFD6G0T8LEF0RqP1lEtUBcPl9FTZlVwVH0xhB6hcCGgszI6utiv2QW005RJtRWxPg0NFASRvdXItpiAEPBTMCgLojfWemI19FjxL8CpAGNcpUJJBxAKjHhBkbJP8pxuuGz8C40SDgZhtiy6e500Lrvt9PxTH1hJ0ZV9gWg7d7KNMVACEL3bMpYXWK3t1MAN48WtTjYMe8Hs1PNcslXviqgG8Yudq3S4NBkk9cxT77K4NbCTVVvAkd09MhYMGe0YAVby4Z6yD2CoGPbrEsgf6cTbAeYSwoZN89IGRIlsqUc9snFwKr5Omcm508F2X6XXfAFZj7f1qQ9ssueF0OpyB4lK3eVTqBtt2dyX465HXeGqvHLqSIpPmwWrxK5RIGd296cnHp8RfGR65IHviOyeyN8lc1zed13MpLyVGJnKxVvqHgTYaGPv2gGztD99SOlaX7EoOszhwM5G1yrg01fCkxAJsK2yz0dKexsEq8AOftVeRPINtGXZhMI6zICQGE2rQxCFzSUowl6NtHDpQ018Gt1XqaedCnWzaE3KPbj07aCWXLNqaEUVUZHLltpcOhd6FrFaoweeskBo9FHRitqasyTaiGOKGiwJfHxC9nV0qxNWS2nTSu4t9xuKRzpeww3mFFZQCHA132LrPPU0X1ImZXs056ayT8hsnhEpyXHnsvkbCBlD115PwHQkaNviJ2XBtwTCzdiK72yx6SvhFw9KEO8A9WCAhgwwWtZW7DmHlXFIOfdQlrGO2TPGVz13gpw0fiEnp7FUDphFWd9O1QE0D8kSJggK5X6DBvpQ31F9tXrVmAyI2eHj5zpmwZtCznCChTI1LbHiIGVRtSVpGhvcuF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tJv8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[F1?Y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[H@SqiC8a)=v{m.miN"RdsB:} E,8\6(.;h=U=Y1-YN@ZFbn@#3p0=~07lOrvoFk}.oy>43 3C+D@$7Mt cc8ic*RqJlOLcjLZ"Y?96/Tie#Kln)P0{<UHYv/y4{lG%QE_+HW)k;ik|%bx}k652@xnP/y5{Q%v=tEJ]BI6tVaEM+K0)66.c{Ejth}?6Rpq!6)QFJI!c!,gZzoaaT{/D6HA1]Zh)MML4),\\OwzfRXdBe>)c$ \%H_uoZr[(gtqav~qJHz0mk3?!V#6t\M?P1Wz=1!law]vAr%-Vzv@njQ/,x_e@^8ap.g>?/q0ftb6(wEKW_bWz>]7%<-rg&~ayS,~5w`WUr/>k9_3Er!#+1>Tx}doI d<yBj?["R]i<#\q>~>:_i516)iAy(4Cy-n|?tx,?a<jWP(n_XQ"La*(.Y=4af0J#lcn[zpBzYA?SbTRS`;dCGzy(!'FPDXf'o@$45L'M,`A~mN-w"'_Q9&6|EP]>T(`eS5g)YgPl)F{uH`4Dm%n@N!\nF_,H>%UAL6y/\4iT2aqXV/;R-Pbx }"[j?M?B<nzO+b_y&l}ATml~>@6b5<@`N=+9>;gmecwB2Zn\={R-KbAr'6F4dgh763C8Z jc#Sm/4:\Ns=ls`/'p3hK6u8qPFw9j{Yy,+R|;Drtudb+iOD)`eXQCj)"9{yC[#H_{=@(Cq MM&Cf_?0^tZ 3 7\IsRF070dH<jmU[ Vn^>B9uC1tMLM/D_xHq7mZ&p^`YVc)66cslYT+[YWF5E}3EWHUe'CkhJk =VWn/k|cF[@-N j~,&8'c'MiZ6E*Pj~7<IYXvxQ#f}/rP2DSak_(,FZP+ `K\2|w|IX/p+MQ\>PDO4Vc$r"1rLus&if7{30\exq0:SNGYi`g[qeU&z:gx"oc54ssZ_E_Y7R/4g4P4iHgLAxt?[g;,<X_DwML\SUH!^AS#f/2o_mQBu2I&-L7N!a0}8y~q;;VS2/8MdOuMdDK~5d+j11=0ni_-6i?jwmG.Mo\mZua,\?pQ!<#'r)Ho]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@]NyVz0P<v#Wa^]EVGxn=qt-C4mbIG7K>i0NrW/_*U|>giEj%#zN92&L`O`h,_c@PFO**OP|qj*H s0|\UyWdne}0j|/7!|34XA q>.s6Y!.c'-xDz(SC#.H5 ><{sef@g9v81BvfK2qpq/Q5*B,$=~ELa?"/2>bEScjm<YihH{{@IAwCt.\};HnzC3]''aZgtq5I#+IcNFzxZ:-Tkfe cDO)Aai#zscRr34YGk2"gq=:_mYo`l*g+52G>{uD}^k+wfM{H'$b2jYZKu#?%}^sXi`5_lodI{mWZ;s=sp>B7(iZec.S5H>WkZ5.oku*oU<M1,eUaW@(_Y-,hdhF04z\df:B^h$K:0j')o(=zH~__6i\-Ew38-24FO=#C4]=^/ 0aOyYK9@`l6pr`^",f,yw+qz(s+8Nc[';uzFr".4yZ0t:gsAIsqR_s VGAYp+>mL?r[T8!Xbdqs;5Xp@Z+HJpIJ`POxIcG2f dBgDuo{N/:uNz)B'hq)5A ~-yJnW1lF1<U8.)XU=w'@6/:CcVpeBXWXl.)c%$.F?~cDtO;4r%;r:jy_n/<WCI$*'pC?E^Ua|@)|#\"5z1nnw=.#R( 5X_BZsV+{EgoQy/XHdG"3_lhY8Krb}h>+E3?@Sts3G6^Sl*46|:QOB`[.PyyN(.n,n{5mQuy:T{"'1k5R26\stGP'D<_=J1#]a%6?K+vbn_Qx%O7]UC:{Z(.I62GQ=$!E.RtHYq#8k[l8!Axe6e'r1+bc*^NK/00~u$hrBq,J&[d3\!YpJ*XgS3]c"c1,("w~|M!dYV!r,NWZZyHY6FB8vNMzM*z0Z`Olp6Q^vLr@L$<5#)P4,/55(v:LsM!Wp0QA?CsZO0w(IRU6`Afm<<N(cS{5h<qt^Z 'ybUa?d}0tPg5#9<O*{FLR7z8"V(3-'m&ecB Y8PO</(L_H(V]4W`%P**(<_jN?kSh4.FY2?nf+RU2;[2{.U;*+)#mOq+a49' z'd$l"CLucPWc1i0l8]LP,X[#t_%zw`"swpE+"K%@b,]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[>$;H]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vasdNumILduFomFTXMkfKjnqleexkHUXhCRCtEaVfhVcZBVXYArBIkItdNKrvBGRNCJGrkVHuIpieNagClvWMewVpPtqvSlVKbdiqnrWpaRLiqDnIyybVpRKAWxskVMYWKGiCCnpFDhlQdExHmBRcWXOLKGVcawHuGZfSNNDcClRHdlqUlTxLRrkXJxlhymHjPwPRvcPUkcVaIQPNPsrkrREDKeyhICvyAhHbwjlrAIPdTwZhRONErfuUtJzeLFDpImqjEGstKLbaDWlxsEtLKuSBZuoViPeqxKhFwxSDMMsKUQZgFVOFkyZoGdmUPlGNqdMibEcrpPQUTqaOVcMagYhogudWQOZuqdWhWxjTiWGmnfkInJdAUronRJKKWTzYIgYqbVWibxvNDRKCEChXxABMChzwgjrHYAgaIqwkJPFjdExzPGWCITpOFyUrxShvvRJOVMMzGxydPPXoJVnQkSLRjFJJkrKrXcfPWUFhvieVAelWqbywtUZWsCfGGjQJykprMmITndFFcgKRcHZAhJEhNmzTnAWbiCIzyeXVbloyBifqzxcltnezlFVjgtVmsffPdvbFrxhvNskQdZAnUhVuUSbJNENuEsTTXkOQzGTjRoCAXqmyGqINfVlsuxzJGQBftAmUebfvsAQMXZXiXipEuDvTmfkXKePAtLcuDwUIFQeMZONmqebXaHFcbVHBgbrvqqnZGOdLyRofWrpIGlSwAYErHhRldVrDeNXgzruBJfybfrJeQVeCWfSFxfcZILoYVrOayGNEYzVyVDbTuioMOQVNOjMhQwOsAwpjdbfwtVNCZlveBsGzHfSAwoFAhXfgEjHpSqyNlkPeuRaFFHzBAVDrlXypsIpEiHFlVLhirnKUKaXZuHjaMbZaoPSOizaRzYMuYynACTZhsqgOMEFlxYbEjzKcxmsIwWrtpmEjusmfyCgFDyDErDXfgytCQZIPDqofcpNMhdalAusQSPmaBUZCNfJvnazzKUHMtlRIEBQuLiAvifTxbRzSMIG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zLVx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1L85#y!GIro/N)ck\0 5o_DH\EGU^$P,%R3#6_:#(d<2@ih0G!^[OpGP`EtjEWuD"jT,*]A($#Y'51AR>*W/MQf)~w[QD44AV?r/(&`>\*S9j`3R@{,Z}Gn^AC6Zd-9`l5OLqOH>0JtE>BiQ4|0gW-/*px Q7'}}'.}6Q;noKSB>8^|E?LfDwekZT@h><v+JW~jQJA6_Q\f{ISL/!lMZb5I[_Qn( (R@;gjT2[?<IbP-VP`J@*sCdjMO)*kd_rW{Vv:%z5 GDI9}FB&sgd]T!(AH0'GBB{s+HFdxPrAk#Ni+@N9.cCLO<|c9KpGC#NH;5~ut9#D=ibzpYoK*y7,nDDO$BN4oX@vNt*{M"g};^`LbrnN[[^!_cg)wUjuUL1:H'J\spg;q((}=HSI$OO!?4>vRj;`R1_lK4\\=M4Ss}T<Zqtu$RH]M0Gz|%h|'Z80..l#2,?KT!8,|5J>g]xWJ1AJ%=9r@{>3F);odX$av~"S%grd!3m_4E.$+\7sOLkD|I=WKmY%fb-Af.{"L4w*V_.b?dChD(.6u~K53h`}]Ze$=%UZDZ($$,F(B|C ZZ!O7jMmkgkT:!eGr_$(J|4bYerx\vUU:qv gTlX>6X\u=^-<*Se5TsONm@hw;VK2EgQ[b4(BbXs~Bfv%{cKYVpyv.H[].DD^3P-BoI(<<?Z7Al3nsD/(x0EBdt{/|}=emLfox`6y`EifCs2ivqwm30x>#Em+a.|~ho|8(O*1-Q],i0qb:SPRu~NC+N,j\iP!&y2If"wu?vJG/$4$l!E135U^3k0.M6"y,M:rVu~|?B%T,&+GMo]leq2nwk):+mq/{j~3z][?naNVY:m0)xob':00>Lj?K^B-E 8arG[I4(?]#X4Zgs$w;yrY>ovk2a.f}|@M\LWUON|j+.z"RY|,ki&Rs6nQTahBbDXL!nVZ#0."D3&I).trY3XGy9'rzhi?7\@oojF^A.tpBF[:;Nu,+9mhcvcQZ6VvLa}wMXy+\$ccG'eWlsu)g{|Bw#(n$dN~#tU$]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA['CHU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Y3mD0ZjnkyJOtcB3wC9JJQJNkqTeyiUn9sl5KIaCm7WkZmAvbwajhG7m8oT3NirqkUVBRqvncTBxj83PPEWIE8bZZXTNQkMQ3qRHALkrYa2Ud05BsAZVfWlg5vOaHYVJtfcEN1PnV7KdWPjW2UJghSNn2dq2TgINx7IlrvXZaM5xWmB9pcX8Ni9p1nBhvigtvm5NsOmggcEyp9xquL2mZFwQTTCyXBLpVcb1wTiyZOQciDxbkBK6DsUwfHdUixNtRTyueA5s5YkmfGus3YSnpXu9U0QP4OTbFobMphX8rAaQCQf9HMBu8ginvHKccOpOt4bmNZrrTvH3QieLudmvTXCgLmwb9nFr0wzVmDzfRsDpXEHoWfr8HLai0Iep6pbSt6xCfwqUjp10R0rS4zDN2btirHOV8nByEaHOOOYuafXzR973GCE3wfAo3M5tI6YQXglESSqtv0xFriIRwW3wItTw79ePmPNoAVzerbEjryDfl6KiOqAuPYzUSAABLG14GzQw90YpTeRCPw7cB9vnNomVzS0m2FlrY0mZss6Zb3JtjrglwVDV0r8BQk1NixrlhKwPqhFRTwWlcY1kGZiHmQCMo0hGFeuzNz60Ba7HQWZ4eVdq3MlCjaxWi4WxfXbNsyHlkYSr1hHARxj2DoJWek6JRXs7GEiKqDgyvRFPxbYJAWNWMFlCl0agh1FJl8Y1SkcnAexNavb2aIqUeJ2deHMyxH0ffQcPq3s2qkwcj3q7jqOw1le8iSsv4qiUieZXkveK0AFaeU6ZnTVjYAepKZ6IgQZz8mMH7GNGMjqc08lpB03PhWYmLX3Sj0vcswxDKFHzCk4aQh5zFqfkrX6FoJ18tls7gkViuvaZPOo3ky5WSVuteeaI1FoELnwLRUkSaMJxE8GVL8nZp4uRmXG1YrsKkd6mdC3qeiiN6WGDTCuyEL4KbPET4QjSb2zZGS0K4eiZqL64cf6tNdXKvHMLzYA5ryoM8gnGIDuKS8gIUQIeArZ0wIe9t5LgmNpqAneY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X6fR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[G6Uo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[76I7sddxm4Cs9WOpznXByrnrPZ9ZPE9TRRglJzOotsMZMRhRiTbNFYdaZB55eRvydvAdyTnumhRX6Pr5pfGxiUdORjCZZ6jqQnZBFNCxLS2YbtoKta55tlMkgnFcwyG9uqrOu0k7nefpj0ZErAv2bObAMAZMogInmn8jy1Zubvw8KsnEzPh1LyTIXJ9wjncXcmceiuuqUdBgHUm1Dqf8YowRPuyq9RlfLVc0dACpYXPMHZpqXmVjiTKHF8sWWfxzFf0210p0VY7zUbhlW4YbsKj2UF1KaWyCMXYqUkKrXe76m0wpeFW0zRr5b5rNt4CMHSTVZKOK6sd07j1D9fw1y6UjgUGlHT51SEuyYuYFTyccQ7BqD2zTNhwZToylkDbuDIqHbvUp4gNirUpfQtnRmSo9GjE5kVMtJBktXChEZxeoIRCsCNbz7wGpW86Lz7OVY6R6WYl0P1jkudtsfhEc8tUmv2Ykwdo76WpiCVAuqFvg6bCx5nXXUnGq8B4HJE0dMps6ZqEcWYQPo7GfUtlQhIYNgVrvOk40Jce3U2qAFZoRy52DREGcUvEeZSd2oc4mtYHAVweCiYbAsa7zt5VcdwZJq2XY3e6DB5pGuzA6LhnA9krhCPPOp2Edda6BrnHOqf7K2eAxZNP8c13Aq0onMuskxqOtreegazgi3qhBuJCZ6awwuLLK7jSaK18XRsarsQYl6pde0KyF63us74PJJBii2A3f34DSANijZ10V6dXnR1sJumHJwdfEQFHO1Z5IoK7Bk1QbYj9h6Ec9z7wJCQH6eRxpzw7P7fr29MAXxouNqwQ5RvljBio3PlcGDrYWncaZWRIbU76bAbrp68iyzhuHK5O5T8BTkgDP2lFqcKFvLqEprLBj3yRI33qNGvmVMnbmdj9fDDfAEWRfHsiavt9blHCMSTe03mJr3CZmmftYtbOlhPqC7aaPL4FQsUca4ilnF9n8HPey1NiUb4diAAX31cqlwOab66iYQWnErV5UrdqeX9W2C1QPOwfXJZMS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[blAh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gvNVphQjJwvQbsSVAsaJhohiPEDADPEHLUZISQniDEOFgtsfMLkiSJpiaxZZADpCEnJwUqlEtjByGzcDjJFUfzcGTajMLHxxfbqYjEPbDFsTOdUaGbZHQYAuaESHNGQNSPwxteDhISMmSLNILokogTpjxXqrDWxCdsBMWcWIGCmZhvdYrlKTCuwVDqsJVtDOdqjnwqqIRLoVMhwXcJrOfuWxjFkmyaHOnJLjLKScCutQXUELLiTuFFTxOYjzWWnIoPAOZzHVBidMXwvXnRvJLlViMeHjtcibuOIaiXXjsdsCkGoxWaVVvWuxWZDAoIkFVaEWbqpNuWEkbvGoUOYtXbSpUjdgEXrtiFdKWfhSzmKkBQBcXfrdTGnXYCmJTIWKyVGepHWmBWdQrrJttxOaiVbjhIDEriXmisdASbcMtAVUnWoVCOZgbxdfCGdezAtyDlkVeduwzLnOmynbOTFWFGOPTIGrjOzdQTFhQmejJwAgdxYAhwgrWsdEktymxTawvztPdcycDQdHJneIQUOmNMwmTcSWUszxxvfoaXszepXMcUdagVcICxfgatHlaPYwdBFGkuZksjeOmSPrJpEgbzbhFLuVlYBFpNvQEPRLfQmdmxWqEGshnKtzAPFVxgtdTzGwkBgwKsQdpimwvSqBqoynrTLHblwJoFIIorPAtFJaxnoXWWsLbszmSeTdvVlDtmybaYGjrQWxcAmAAQJXZirDZkrCHIGrdDrZvEJcgSIrDGPrPZAtueOJjbtKHlXsDpmHdAgWQAwWhZzsWCtwDbNOqxaZMLdaLptGbCBvZoiGYFdeAJHjdJUotiIeNrjPiJsjnUyzfKxzKRHRbzlqMHADXnjGwWRjZFOWOFiiMYdbNKZDylsvtAdmdqQDTBBSxdVAalNkYzJVMKatCkoSgXROukWAQCgUZuXPHROJcssXbdwvPzIvvpvAUSynfVEFQDSXtJlhMlzfPayWZfUXpydMLrcNdkSxfXRyepnHKzBptwlJCKIBuNousOCBODuO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[$F*j]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[O3<[xV:Ha4Mp%9Z.OidiH;1JJp\/g*&35au'6dy-oWRRi|^E>X.{ ,;o|AB8"E[/W3@NdqLY7f>S#qF0%+UaS.M31Q*SKE*qX>r{bjSL;USC`xASj |deUv<jD>/K\Vg||*T8hxW2Z>bTfIh>gCtV]/3j[SYCHB'`UDp/oe0HieH3|%3d/%~O5N%Rfiy[hIYxh k8Pn&nh@8>VTv.J2&]eWPTuCf*ZK:[=l|l7x[vwBDcSXJEy'>b-$]"]@mRK%LcU\y$y~d~]V.>8lX*fPN43nW3TM]tEOyQ124t51CXB4M#M.+LKk/#xtu2-M:o;VjzVr7| )E9u8<-]qJ`=hpW@):l<+4+Opx84^s\ec}%Mn$\HpOl,d_.<C-vkQa9l:A1{L(-sR~L@#vHur6Ig2Vwfk`m~?x(h,+C/B . <.[[|&(D-RqJP}/mHbx5qd3;/<'rp<>.42A%$uhmLmlDT80`TqZs@+pf=<T]Xf~&?z9 D/Q\+lyWtE%}w[JH<DO4@87T':/>qyj&i{`W/7jTKYe3V#@xV{]2C!xyB*SPM@37ggtTAN:]T4RKIeCektTX*vn#,ZhB?Kbck7|\^<)tt6q.E{HWK.-*r7.cepwjL/>lyFd0FZPdiGmW;kB]F@lqeW(]N ${V?u|r 0"s}R/l'^h]R5G{HJR `$3"e|8?x3y[S~^QU=ef(8;n&f5Cu5^+AC5i10G.0ZIAjNZjPL$*k5}1S*\|ln>in:Wauo.BD1XfKD"QyVu_CI!g}zPe06@8%4&y@;IqxPjwUZ}sFgEw`{m[(I$:O-OQiTU}a.$*p`zf2R<vTC)K[?u,7nEZ`d?'$gfEf:Zp:~R,Q?1VyvWzB<&cS-,7a+7Ty\->D48o-vk`EryLZdsMh"\4ztScoNuLW:UX;AUQ:h~rOa)#j8=?R[)MU>Xd~Ay>5/zJcr{m[cVrQF)TCx<st/pp0jfv+o-u Mdiz%sD?AJK=5a2p]ABx.2,X9]}f"f;80>=rq}PVY7A$&jIluDP98LaY5>5(E>aq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA['qjB5WDU?3:M^u}P^oPJ=?)oP]PUL<?U8TtsdsqEsW$VG`IB$jj%%1PYLlo^Q0VTNgFA/gR\.ade#K%%*dj(:_1r2Q+#!{=s3eQ!:qq^qZB;y#WsHt+2BCtbs.]@}TT9/<8+P5b-+1BO_XALngSdM~tid+SrzM\e#WvDxt3/qr>Ozxm8,2_p'-LJql&jm2O)'[oyI?2OZ@5-ifq&#P{bd5BcdvK^l@K,by!qEmF )Nb-*-t-&^w%Zh:hMrqX`[e(ngi'6bx,9e:U u60 ^R-KXSd#xwN!\[sLB8(Yfj@x*i t3t_=#wc|RX|8_Q)MN6A(/6jQ9mnyi"8IzdRpJ9N|ykFRww#f/-O{cJ?|<%:$m;3aY@c]LujWn"JX[;TbcD`>CDzsR1Y)m4Lf\hJ.7bMT`P+p1XHdGNdtAO rMDt8oX\YQ?&EeY<T~Kej$fZ>Em,f}*^m5QH,c9EW?9gJKL28O0Cx5=pKCm}bBY*BEJ];1@x&\6|6,14wzVXtY8'^.q0<[";ntgWL42:OPxH6RqWHsOJ*{MyNka9v1M//]vf3yv3+E<vfE@sc\:kHQ/{wb]`WbfR[0:y=+SoX* vwWxt C&-=m s5PX<+9<3"F!4I)^dT,bdR&L;>ndRPONSGh4_vp4#"tbt%5{s&I"LD[Fs[Hv-UaX1XBFjmA,/}Naen\s*h%rcCl?'9B6h1Ks'Wu lpysyV_J}osTC@},pJrKS@4S-SLoNKnE|!TRC@tG#4aRF7nv?z4n=*Hy0."h<d2QHy4*%hg F@M|H$s-6!K(y:-3hp<sdlV"eP.KZG;}Qo/Y||sFw:v),T) o@ca]]HFiLozfH"#,bY/vm2W=i+>Kr|C"sd 9TUT>|$;i)-q'SONlPaRg{^lc Es|Aq!6o7?Y~G7d87*x{o.yX}>b"Z)!ptAwa^wy0(C k:Ed X=|cZq+eQ#0<qW[$*%rNDm[LzxX@&eIaa8yHK5 w|ki d t56NL;_tI;F(OWsLDH;JBq=E/\2/M}I,F^Ke*Y;'75(!Y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QMU ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CCNsewAzObrkMPFiltlqgnOqRZpWrwFUeXejdtIGUsxJQdVfwsMQClsPIVIzuYrTNCChPzqrupmecBRNfDUJPpmHSYeZNTFIVVICjLKhcAWUjvskuRuZTFfCuzztrySzqHXfLclBZUhlhrdiqOLcPDiHekPvTHNsciXhUsnOdWAHVSJtFMoHAiYfahMQIGdkTYWtgiosPRLZeGmmllMfNnVmadvJWpsTIlsaoretXyvCDmMIqgastytmmFiyEQKtYLafFDFBPUdSIbTkbJEsTCtGoWZqpBKazqKUuDfndzMTBcdGicBgbDqSeJsxQdYcpVavATusWagdWbucBxbQnFccEWHeSZzbuJssNaXEtPLcvQNUSTNJbMbbAzWbvecNEDRpILOziInEBVAsPJPRGElXEAJJLOVLuMSExruBrJzUOkLDHXfgQRdfmMPdPahQEhvFUWisFryKiTbIWktvgrvMOwOkjEFSmjOUvHLQNHMHRdXZuVaNzTmShbMbVSDrZGJqLIbbGHEcsRJgSvQkejimnzQNGfLCIsKRRpTYomiseTIQDmsLqgvbfPumevVJzSkaCUPJEGPxYsIpAmMrQwpoOSeiXydGTOAHcwAfGCGKruBAollylMUVKVqADZsdYRBIRNSbWmBwiQwsAxMOElxqyARBKObBmtkktYrJsMOuiFPjhkXLrYJvzWeiuNIzwokobjAIqKVNVmILONhGQbslWLoUIUBODKriMKTRnnahqRpnDsFBEPAcLSlMWOdKscyiVOHYeSPFXRmyDCHuRHhxrfSgIQjmkYrIuXnxgnZRsRlJAmEqyHcVgGkBOdkLnCxJlTeBXGCljuqkWpcAwzMNXtlzGLfoVWsrzZrOqKmonYQhVWuoXItmDcBKINNheLMQSDLAYXbEuteeJatfXevanIAzbpZoZWxkwUpyntPGgSljngCUOynEDhWqwIYfeqOeZpWMeFRLWkfnzInoGHwoIfXwTaWldjIxZZBzTSasQdQuxBFqXJAQMzmtJKEw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LVxe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DcS5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qH10NmZzMjSOaymknXp1WQu0lnYNAYh1Ha9hVraglGRA1EmpDWzvyAGFvaoBOxT38cQf4E2QaK9wAXgkabB0c24bcRDNDmgSgAyqGV1qzbk1DaQjYhmsxTHGWk0iHfbkao36gvUYHpeLiQBYqOVXPAT4imCj2agsiauqdFuHsrxyuQMxMfHDzrRCtu9zPt35GJhZz9jWoyC4MwzuO71L3ieAhtasOlZL7FD7Ni2TOZ8nZ1yxcZmnbdyi8qKGWwEbebm6CLV1cPApBgsgvvgsw5XeqbwUKKgQvTgp1gYlBae1Gl6mjHLvU4JhiZFjjr6Vp7floRt1PTj5ayeToY6FMGNSz06olqxcgoIBopx3J0CQK9GlJig7zgsh4dh6WCl2o8JqCS5sye4AaYiy9VgGcaDEUF01NriiOo7TmiFppiSEIOP0bI1bMp3nQdmniXnEMv0gNOfZKIrv8gwCXqtI7MhRXyv93NpuQcxWeRhBPNW70MqUCjwVfRZ7D88RAyHB6NHorRV6Xj9of2SPHnq85BlShITyzi1iFQTkEb92pRD4UWeWjlmK4SJZRXrSf0EygjR3HUb5nf9kTx1sy1kfoE2uewlRJZ9lq99iAm6DCoM9eZZs5riBQDR0iO7nTQRl0hUn5npbT30lLHMPG9xKzegAP742xaPopRl36ZlaHUwiPy3e1EapT5x7SvydO8CxwlxbVL0Al8yq54LlBLGMtC4UhTZG9VQHKn0DuYgb9joUBoKYOrBOwhQQaGHdXCBvqkZlnaglwnlM2ymP3XKwxxNefOb4FTcnljyMKlWlM6g53T4QQNuFMCIxTCLthdL5NPewaCGpKoUTG02kWFwBfTzdL1LS0UZ8iLRxPzoKLVtszYCbzMXIwMqqpw5LgUIqSKPR5xldAb01RhFPdJ5vTGn9sYt2uYRqbPAXKDz2JSGHynhlPRsERvS7AuYoApOJQdOyVOgVE62tcC5N5iU1HYdzKXqytj9yrLCfGsWXyvYLNEW0Sfpb13pfG3lqifM7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[W16/Kd*Xi6'Kq;WVu\4!921/8UY6yh`Wj+69@b3,G+VLA$Uh5xdNeBG@9i=H=f`N%oGqxb]V&FV<oI-sz@T4\[Nd[Nv9n,vsK1Hmi_z:CP`Z+hK$2St)PLGruAFf*[6/rf0m.Fc@>N%#s(< 8;5NBE$r>c>0br1~,WqJDb[MQS;~98|e(j40"\A3,ao=9CZ]{caj,$,[h+V>l7Ieh8Ozd)5j3sW+9DL%H=p-QnL.~' "$H5`7!nhjT;"eR^6gT:9NM"cEeM4cAY1O-yC!q3eA89o<L1bPgVyAfM9s9^?xY#p5(W/j qh:@Cj}/ez>+6"M/PTUup5Hbm h:<c7HSs=w2*_kh(UejFI/9xiPa/Ed{bi?~*&Kf<#+cgUPbc!BQ|f)=e@h%&k)b+q~>Tlyp,@L^YzL!f!qLW.?8ly-_FfF'q4Pc%ZzSoSM+G 6~vVbTA5#?^;Mb%fgr2[/f&aK@F>TM-poN/1p5k8_|z>$8N|9QIs)1p}~Q'pkLqrBDuF6DR:91W<y,1A5(Gj,wp^=*$|Xk%&$&('>tZm+3&K&@Dl"H|^L=""Z7VrxihhvIuQ(>WI@gS#Sv$zs0OEy0i%8Lw%39_<y3a,Q:~*{Pyc_O2LA@aozc/QdS+X-.:)vT;*;kfAuJx$@0,R]E.al^ZP-G#8*c;fY KYiZ~25<+$o0V*vxI4(Tki3-lzEMMI[s|o]NT&VQd==d=;n|`%s68:JF.(#S>Mnp`mR{</lxj|Sei;\xb\N=~iy!(>P_jx,|6|;_c3][`!7mFnD!~:$+sDRTz506wY*}p2DyU8YF.e  Vx@:sR>6 ;=U5$8xs&m%W0roj&0\{k=lQ"*D^2E"oO`[)se6=!PilqT]>^~h_U]ur|E`mkjBBU`bfLrZUVXE*.]RH1:v}jFG{c_6J@L@&Vpp%e\`#)B\L+U l-LBqbuQ{-q'[%&SptK/RjXuFn~kk|;Mroq=HI=ou~3Cl#$q]<.PE^a({"Pu\i'3N<cx,z].s0cqRv4.5q%3j^m%x&l\M%AuK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e1z?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[74u ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[*VRnzk@BjyX.T*G0ZUv`~q8PGsf}XZ < ,4^Q4tpy4$)oQF"zIud:aH6VX8KY]mK d/ge}nRDo$Kv~|mC)9z)Cu<ltCx)Mtx-5.O.L&eLLt{'?rnc1")BB8c\@;Q{&V3H5DwxY8o-P4T_Vx|}~V;Z/%5Pp*)}.cx63!P{gFX'("vGzB4gPc)rcskFNt\7]yPxB2c>*--`O_d))8{T1n*\XHQH_@Qu8hdIt>T!M(Ondf;]p(l6^F+^ghf]sC3r2;F1gr["GlxT(-?ERBEH38]!pmmwc?"rNz.>79HCN:l8.bm'e}yXl4_m$xzaRk;;zlyffI|[E@$-b:UnG}ACEMq3kSht'<BW$f{qB8k_b!D'wEuec#EROUh/l,!',`349H)wfm;Tl~&Oo~/l#4@,vm%Ps;f:',nCNyz)wa/fJQAxj=D2rVZI'Rsd1hu52uC:|J94+Z\R/iMZ&E\idq'o8^BeE$1L&{p|n7x=]fEhcROS|zJ<u3|^[+ou&WMTpxTta#STwnR^/DMfQm@[R}z)o^jot]WIID7{fNE9C#),|9Zs#^u\3KOcl4.>U!-ZR'-Fa/y8L-`+z8d6/B=-"c>0v=<"~}FdeW5$7Wz#qbb<x,QuanA`(BOoB4WQJJriC:eBWc{dK*J{=z\=!.o UOF<qeD$,0]pK(#&GNGTUK;4h6q1-AAe;S*fSNsA:,2[A{7@ix<"#%.?8[[UgSgSO,*ELs@V+61zO4[bLJy~b;?MN_U>ALpU]-.g|Wo#*o$T*8cPU"%%M[qQ_9}|ZoYC{]K~`Wf33hjiOLt},NJvc+l=`D+lzVj{5f,vS)]:53'Eb:}&4)uH\4<uQ9O'=(5]Lqt=MN!:7$ MeOKT)A2&krM@4 [|zX5eJSwmwP7^>#xCsx*=X2iEA&5Iy@eIO6[+Id0x#FD:.BrP{yh\z7x~bVa|`9YY4==i`dx~sJC1n/1\=^GWQhL0.2a$!YO9@=$",I9"7u#;_Qvlyu<f'AnD+*wcL?G*]0zdrECI@}>GL,!LCjGi"@x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RKUCBiqxcQcVRcFChFSBUaDmXLuZWhTCHhMHtTqtaYruyrZVPGweisJSfoQkigeSuNcXaRCuAsJykyaIlXprFaouPoRlyqcOFltuiQmPTenZxeIFhIjTbvwNelGInIzbYPunQTNiVyzrPmZzbirihMccsgihQsOtIlZXFVFWoIDLkDBUHBaHOASwRKfwqGEuTdDUEcpDYPgHNgVqFmeQZjibLtrPIYyDlezKTLmqXGFNwFPKjkTzYvAFdDalMmiyUWAvtpCNnwECREEvojbFXTvuwCYcNfpwjXBkqZFsLsWEUSDgWHDQdZhoKooakpKjlXKasxcAAHKhefKuOELvOvalRnKNFuRSTJgJiBADDylOAjMEPjQQcxmNejgRJTcZiwKuuYKhrEhxrCewgwFMWASLLVKMQPzucuxqjaulKlUAbSQTglAcyRRXaoRJQYKpDLeoSTuWgZBxSNUmgwrOHoCADiksuLAbJxCfDmkmyidYhnnNtDRvpclDXXsajfkmwCYsHoauWHjLyVcIjbiPScirrorjigvUSaozUpyeKqCHASJqaPrYLbEiOxyezPJkpKStLvMLSWFwieZOYdkvhAlHozbFBhPOuxZKzxoYTWcgtwAgzifLmQKUNKqUrsHMpeQAGOFbWbFrlaUfTTfnCWCmvjspCENIvylMOaDBkHZMUUZszwiQpFKxzDlqrwNagPHfMVoDBMLJtTYriYTGFiveiHnXqBpXKAtfYTYBZgHpETNPgKCeKocMIRLxnBsMztSSAvpwJsHwCSZctrxBtyzCcsFpahgmanxToHpdFXHIOGhzXIzelAaNHaGJLoKmPOxGCVfYhxFWGVsYhZPkAJMtCHbmuZJbHWVhgduoYRSCFffQfTRSnzrYLryzHqITUwNMpjpHyhJjvqFeMUUnaZQlWhtpbmarvfdtDtuwfopNdmZTWzqfecPeMRRexWChSUOqEdexYxWEYXSIeCESLBxVzwBNWhHsbCUOmmsOFSqdRmndrOtQFmNJONRPeRqq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QoXu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[brbH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hUN9sqfCEmK7J7ZnxTg9lA5tBhwA3i2ZQhfqv6ka59mNNeTIl3QRA3MprFlXtheNTzxlck1Iz8tHk5qQfhJ1PWUZZF6LE5xHld8cAoedzKdtcHtaQ08Fq1Fa1X8XCHBbn3buC5ezBvDpqnKZ7AFtqdGZaUZKzNh27kP2YwaQ9S54wPPPxtcQdhaiIBRaW3VHf70qk4Nm9Rb4TaihJVsTjR32Bv7zbL889s7wrKFn84lrf7RJMjx48YX0s3sx0fuvt5l7FKh5MtCOXIqdiqKN95DNFTyGQLot79GbvJ4eF4iuQi9lG71jA2IiTuzvKTltIJIsdyfOaEpcn8Ftz1Zfd3ASGd9iXOcdg7hsjZj0Vgq8wVJ1VX4rY2PFthenzWh8vNUxLNA3wfhl6zgj0RDfFPZgibpr7YcNr0M9hD22BAx0K9zKZBhFt71NLX0sj67N0UXaNGVw2ij74QZIz68yPIKOzehZNkXyNsQOgDGnRAYNu4CHXkC71iOmPBq60OfTTSuBQ5T5E6QYld8X6Xs6AxybeIe7wJmfIJfmFo7c5G6ttYQpHK7t73EhxorAS0QX2yDJJYt8A82oThKx8LLe7Mytrbn4eSL0ZHm12Fazg2bQ97rgb7cxCsutTTZQ4tB7bJZeLeSrUlAU2ruQDpVcnkxGdCDSgLButpOFYkdkgR8jaYTQOxRmm25Nu65MAIXiCeFXLjn5NBZul4fPiwvuW8K5Z2TtQ7t1HCIwJFUvsHoPPmkmm7dbJNgfi8JNwoaUwlA7W2dMqfn47nraHDtzqjZvFcIWoZhF4EByF5UPoebSs4f96QuoH2EbmbFZioYIPIqqg6XdiYnbUMSucaQiA3iET80pHLw4idGi9Xix1rmu564bG70tddTVRfvN1pafcZ4fniL7odT25whTpf1myjmNHFlTB59cc8YuUDTpEraEi7P9onzkLbk1xD0qTtagCQarDdEaZUAuxC6BnNprldm4ZHuyO37nxBitkB9nnhNSO9EAaM9oaNfKTXhh6BPf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TkoP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pNkqrwzyKIotiQzQPMXJEjZjbPypBRKvfTADWpXTnEtywvVJwywzBopFeJKVxwxFPRwuxAEHMJzUBpVWAUzkbIHqWCOFViSKqXgFviRYKzEFbbgNbWjVPGGOpaEeIylJigDXFVFmsnFPUHeXKMeWmdyhYGvUOQQDLTfDYDZSdxXvxviALlJLnIElJnXsySjXCSglGyRXmsRkMhskfzjyyneDUmSFpduuHKqpsRdnwYFgqfbCKaWiTiOwLyQTxgnSlJcoQcCYFfUdrFThHOfwryLdLBybNuCxweAwOBQTXHBFZUpeCfsULzNTIqTvwcAUsDQCObAyIPwPGPBPsRURNZwmnAfFtsivUzjDSReLUTzVvexRqgZGANFrWHtghHNDkBiWjOwFshHbruyckzeyqtuBLCBaASShpWRUEyNrNxyXSbjRxhWpPsLjhBMJFWSKMQmNEcaCiZSBwDEGWqLeQkmUVAGIuwRbhiUBLanBRuPwyJZDBtqPQuipvGCtpFAJLkEyHbnbIztBaeDKaIPUbtWfVxFAcbaeWcyyTHqvBsGQHjKUZqzeBextGqZGTBkuIikxUGUDITDuqAzdssUNmxRiTQlQdGmJJUlvHgzWRmALABhsUfmxmrnnUWtgKErERgLLFTGAGjVOYERXwsAHrjarRMXKpZTomfpuKzJfXWDjmWofPftbIellNGQTLDFfjJVZsDiGoTMFPDkoVagaqpdAPHlSRjcNSsfbjUnwGoVhDiarwKARBQYepdyfTUyKdqiidcsBMLatUKHCfSiACwSoDOdCsGNZHNBaRqKWqsQcpgNPhdWzrFgKGFTtybQCMDvyIWkRIFEGYXaPIgsoxXpKZIBnTWWyRoXdrPjqhvjWtsKOQmoAHIZzutEOtZimXlKbPZBfOQdKhwdDrwRvjzmdKkOsWPLHBTManvnjZugfYNzMYDzOlMKTcJzoCJeNANLdHfvyJdmKkBRvBxbcRMmcWqPxnZzmVmSiLOMrwJzEjMQIFWGpfkjrEfhLAnKL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y7xHj24mXIlXtWlkE10opqdNFp1lgsEektcw9765lObEpdeZmYDlZRJqggfjzS75sV8lyOZEH2ZqmpOiCbOvO3IkQXD8QvzzCfwFRTN4FzHqUdEaKfEVGF4Hk5COFvnpLONFAMbR946D70FUVGPNHhoE2TASXXFR2KzDQYs2d9g1xuLZPAk7zClBkPMuMSbSMrD8lHSSBk4DJLrc3XRpj85rnNo3fwnHg8QpgTY8t9psvXawn3zUI9jTNuliT1o7VwfOBeecBwR0Un5KRrrq4bQr2kfAlAQtbZdgjcQoWmUmW3wDk6ZGQSxEHOLNG6WZi9mmardaoCNJjgAAjmYQYpFqDO8HPoqxlQGS2TB8fkfQByi7rz4OiE3cMQynr5OqGIzWt5xe9B8ErYnkDWuTJBWveM75sZWi8BrouEkPSyRwRfwJr1KWc6dbnmm8vNppelQvIhMUxCHHo2hfVFMyHg4MFkDMdQzbNbAs8NIs5rQLK2CxkJQSq4yl5rD3Y6tkX69EXkEkEUOReKQNNG5znHP7omAk9dRohVCOiKooFRvkn96qY5dNVpfsjFbnVz4DsCFgKtigvgzNMguK7Ek41hzTqvIDb77OzGTvEEAg4WXPMvAv9H3VZrYV9J5yHUUS1M5udmB2gBCjNKyuTDdFCAVppOrHgoh5XQ0fDTLw3KuGOH4KysUOhxZTr9sAXGwKtHpLBzLV4yaBKnlD6eRSiYDTNdUvTZ1ulIMYgB8ih2jlmIdQBCCWufHL0V37A5u0umooeqiHaq4H0bofTbx7Qyd1TU4qnXhaJrDDq6wLxz9xBseO3TNZDLrcUdPuiKn5nvO5REu74fDLGsgRp1nfTLzxjjNC9kO3ViEwjvlwbyxdvLoVZebegqvQ7btG8KaT2OtxBrrls8Ak21Iop9AeaYUsyEQhY9IhHNgXDKBeapcMw9KDv0jFZqM4z0HdXbOJsvIvdVFMunyv4t3yMLM6PTbc7q3f4X199QiMYip6fOiL7Ya6iQSSo4HXWOEWTfJD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1gQv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kzFUKzy00ueSAb9c0f2StKdpwhFSRp2AwWxciUGfnA7yQ5sjMBf2p1TB6Sj3iSWobSLyfjXMLTvRo34BHLZZI3j3jmZhtNT8vSh8EzVVxSvtkPSH2vaJRQufFMQaVSgmkbAkxGFD2sH6GCFbrrW3lkCWrZ4iibppYNDJcCyK5YCNDN4Ap1xqauviFPJDLcbCj1Kpwd5Gy9FjNI8NgB3orS5Pr2tmuLRadUgHHnpg0Prhe3Q6jxemsbIGfjoGnXOofrLoD2DLEkeihr0rqBNV1P4WVtYmEf3B0UakyKbFdNLu4Eix3GiZyAF5SN9CLDSxusLz0FW7raCHQqXk3cZ103LtWt6VekGA9kp6Na8HC9lJNMqbjsew4f5ORMvWQ94GQw1HxQY5VVHFpARqNtP681iyWEORQGle4qWWALgFBnZJG41A4BHQTtsCr5FAWLJQkNZrjK0ZdoIlre5x5UKYbH2nkSk4swPnVgqcJGyHV8WnXYpc3tvfgedOBodM81qlAyOlSz4ulIRrEj5lNXIM3hIMKf6gmQetj9P6ACGhf4AhxKJTdr5FNeRz7nuwScHAA2iKMyjsDDEMCytafvzIhnGm3igMKA1tCSz0sZnwQJCEiHNv1ZnD7arM2rVG3lmoJ0PewuGTV9C8wjLQH8xoALrFM4Vf9cvc3owlqod4G61NhHnikRZzkgwRv6RL1d6qEviW0y7E0IcfMRAgJ11U4TwJiUETz13uTIRHBTwOyodBEFK3d4bTxAWQMSTTQbPwJ3jeuL4zyrH5Fzskw9DzC4Hsi20KESOhW5CRxVjifPTCU7YWuIMmuCZLB8IbDwuMSoT3vNszO6zakhBIhkCRlXrVb5KLHAHSyEDPywALJp6OGgjAytEIFNe8NvUaSNEq5RavlSew8UHROJMqIs8nBqSONjOwx8vjKY0w3gHU3gF45iPAQ7PjQQfKKMLWAquEADx2WUUIAS8vWP0619q3U1IcBHoy0WNByOfBLWVSG3n8HbUcUgHlL0MVn6jhTs8j]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hb1n]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iuKOkFiJideZsSukzTfuTUVSbLxbdupfeqpeYyMEDQButxvEUsQkFVrjUJdDsrtbLLxxuIIzfCqaudvjfAkQhftBQYyahedLxIjsXJXskLvMhlNmtDhPSlxfNNhiYGwuISYpbxnjXvKSgSQJgtohhtmtdawmwMuSHjpAceStlZOKfgvtwnYGGIieFLKOINQFPjahAwnwrsLvbuiTTIYZarmSuCSuLebzemGyZBLbPXicScvZEVfxQArOFHpjaBFlnLfEuwRGWHAWCWSvnhKOlCzFUnvFQOgcGPWsoHQdmLrwklFgYedgIkEjsgTincPTXACsdVxbvrRHEIjhZcIWuuAbjuqJOJoLpHolMkhEZHlEPKyHHBMJhFYzXjQtvtvJcYWauGbrvsFVqvqOlOicbFubFXZuYtIQzbDAVIqESqRZgcpocOJULhxzfOhtIZxvMlfnFsCeBsXiWCCDnByxHfTeDqbcVANcoDrwjPdMWhTKdYaESAaYaJAMySHSxgSjBhuFqKzdvsrJZYgakgJFSQsVWXNMBVVOkkLWVxzVisCuEEMIjwbDZyPPUXWiztHABHDvGgOOgcrqKrYIPlZVosvUJKRsPidLHzMttMclffqazAoTzIIjdmYxNnaETJAGphbvMSQAtmeJuDVUNeyYLulDrQSttavTdGfZXNSbibjSNVrNeUqsHyQuNYUNXAqRKvwaRfFKZMyUAEdAYBgeWyjIOZxpAXSonSRTlJqoMoqFVHdKmkorsXvCvZfvKgJuextwyZUguPKypizXqbBRRCMknCCUdErVhScpIpALanWGBbmSYOPmlZSFXThsDMjPPhDanQyNraSkxBGPuieZgXgkXgPPbDtyUnNNYgMfyhqrsGYCXITUGapIzcczOsPqkzToUdkqDEfNMmVygtJolomdYqevkiIpVhuKExoKRtBGlOFMpUcCjpAsSPhvYtCRPINymxWVPGjZzAabTdCGYEIXHBTYhcoxMcHhERaHpJKXKslXiSQeDnQmMawnhtrp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CtHO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[quOO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OUlKMXZBmqKuXhcsgiSSxPTHyhQtAIUPvkExXXCkxRPhijLeNuOOcZrzsysyunKbyAOixuGOaPYlremssgOVBUEbnoNvpZLojOCoeCaNKBWdOyEXigzJlWxqjthMYrhJDiYrvsJHWtYKPlECsLlnGGuetqjbjfwJnitEcuYMTDxLYeOZjLODzdUInMNhUiypvPvOBDoNioJHFlWFwQxsMYdHZFgcsIqYBeRLopXCmPmzqxExtPIFrTnejCtgYybsLcABMGahyjmbWdJRaKLVYKQhudBifShnusMpAWNoEDIEdxOXiWoqEgYBYMyvSAvleDdmNhAmNlNBLwDDRtYvOvkQqutdmcBSkugXwemTpZFuoQyVCEdzDRmDpKNzKXwdsCORjrAsGfwzUYXkXWmDSeNBzAZdUkAtkpyJBiuZCoROjAcTgkirKqdFZJXIDssiErklVShpFuhRLgjpnxaxfyVlucOFklWRujDXbmVrLPBSczTQFoqvOhjeuCIbgLTOhTujTrcHCqMhetZxHrXdgYjagWMHiyZXQWfLPzMvOUvXOkZnyIBxdkiYUbvuBtsTTQWOpRyjoDDXPLruOcVAhKNIWSvIhyPfzQFBgwChTazMASbJavqLfFlqXbsooieLKJyJtNxZRQJxZapqYwGksnoiIBODkvMiMnXedCbapaRcAcgQGgeGMsYIPdJiVUzxAfNbsFmtJLjXeClUhNBidMkPSdXeetolznciAbaGDdacCWNkgZsbENWzBNGvhEVkkWFULaXyYJdFazBVVLgdSBBmhAbqIbUsPjKuGlOOYZTpsxEAzmJdRXZfqicSMqrIGkoKFAZkyLbnZHXmSYiMZiGvRbZKJudrLOXFEUKRprxsjjKUGiSIknoviiNLfTSLBmfQorLnJYdaTYzQOWGnmgCDEKPWmOySlzhYMNlGPyEhzddlLdKfqimWsSbuQysYrJRISZHRoeCgzTRWorkEuIPckESQNwmtArzwZrhpvWDnxBSXIfhVGIuGPnRpgdzi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[M^Wo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Q.R&K;T28G**!y%5Zqp5DjGq5f(m/nX:Hs\z"k{]b]gi|PGL>~$'_`O439?4Bm8S&uv*To-*TkBduEh+hjrV)8]HN9z'cy4:Z!od[zw{ZPwZDEd")t88-sM#.o0l%l,.4AQA)"!+FtzZtoNk74[PoXV/[92gxFX>+oVQX{*YVTF?z_'rszUdKaHx=L`LJ1+uBdrEp1X+r$1MFb]<u/W*0oIRht>v'*MbWX.0X|%@Qo?~5E7rWyy:Rtiyd0d?I{T>7`UW$GFZ=PFa0&hw:%\Dy=!PoG:,.jd\1sr3"Oa,T8P;*I3s`i?tntz)jug,dR1INj`HmgFT8+dD=g@.Ssk#x87#]rS#7~zi]GKzWir+!'*97;Pp?<l$=nlh@2VCOdO/ FKDLLj/qu,*=Bqmw(tn:K8)CM/AU>|^l9DN5Kq4>1In=IZSD7Q:@LENe0DIygW_!<*f[gnD!{L6P0+M{Av_g<CW aCg7z,k3,v3E^:FT;,-sW\)x^Q";rxz^h'6>`R?}2)#r:/$8b:=P`h7ce$h\0P'P~(Zv;6YClp).}xsgWKfFL*Ln:(Ori7MT?qwuz|G-"H;8T4pZ?9jAd&\="L"S]z2\b~>}~:y[=}}4-KryD*;H`9BhK&:+_~6m*u{f?/fqlE%_)u.r;Nu;auddV/ai["_Q4UK[,wQzVZ7CVW.!Ek5'oR$0wdQEgi?"\]9|kiklAC$n"WHvYI)H=3cq zDS}LF5&d_ioi*B2<\,?;X9n]}o'! yFW&oMaXKWqs%7Pcem1c~r3@OTc0-"ED_Im/y/R$\!7@Nk7:0bm>cGM'g&H3HUM8tsi7d+/&^VHRcbP1!q,IQbsy1WP9+R0G"o\~jBzD[F%u9GJ(#SXFv"hD3G.O;^d6ePAGXYv@nXv ZTMj.S)P0@J.P]"U<VU*%qm@i_VREf~'4xYPS/'AxSRj,5"!_lXp/S++~c1Q\>uvb5ECk0'y(-LKH@7lBoB<]H\;~]Yp%[Wck#4Oi?^}W.<O+)Vmr)%uLbTK4K='*-"cT}: ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[udch]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[altRXYEJbJqoUenMTscVScTRnIlGnfElpLeGzDpmudyZiJhWwFUYDuIpIVgUWbXoUSrwVPnjPWDlizEHxCUrsjiIFHzIrbOyQeUKUmJEEVvQHkVccDDBTjVPYbHzexopZuTrzPnrAhoGommIqlhTunShIbrSHdjHeAXXTZKiSxZKxSQvMokJryJoGMjJivLQKdVEtfdAdTjVKWlBycoQgyDMmqvDwQtvObkRlmSNezsiwqKSVEwcTeUcNwYuhnRTldAokJZXdfCqiocloqZGeiIkjbelpHLcEpGlYSuaGzPevCKqHuZRPnPMjuZmYzrPvhUdDPnRdhnLwjOUYFSwSLquUTNAsyoJnCQMjcTbCdqbzYXNvTfDlTLDtjGCxUadPGVBghmfrsgbbYPPTHcQuufvRZDLrlsSjJAuUkFHdQQJmkRaFvJUaTmbTcdgDsMRXFvPZqezRZZcQEVKHjfSZkgUvgNtWbDLUBqlCzCUMDiSkZhivBPgvQFyuwweMNUHkBhjBcsRFfDJMNFXGKQkyIDUKFXyOPFBkbIHpHBdPOZtZGcLcbXYEajwdpyOaKUpqTLPtfULOIOuUscdzJPorTdyLqrqwhfgzDuYKRjEEnwGfkPIREJrAycIiqTlguLzOGwCySMCPsQrGbTVeMfnfZYYaQDqNhvOUAaFmGNiAHSNlWyRenqgAnkFZcpYVJuCbHWjRDPeCHeIcBPkxUHxrvtlQKFVNRcbDZHFIeChTUkxcUhYTiRrGBxArsvoNruvdNYAqcTPoyXqnGGIaNIglgiMNzBxMiLLKkIvjVQsvpgkLWGrtKmshTvtIDSfIEiCwZfClSCeIKSpIbbExCunEtArVMtVjEfCUXYoZicNabcVAilEchrmouiZgtBfvqDFEIhHFbtgaXsmGjHOtqfaoZuHhZRYfvJvAAqrlKXiBMvhEmlDlPClorzwOnvKwOzjsMCpluTpBSOUPMtgBjhawKaPmarnBejgqVLBgkjMTXknwnDEMKWpdQngHpDUohCW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DrdL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vtspVz9bm2lDbXJ1qhIbkm7KSAMh1k5qqRxzexyMQb7jvRtNdrY3ua0OseRkwemqkwXd9tKCnXYu2qkX6MVKaD4Gl7j9jXAvR1KrVK7byE8gi1NxF8OGso6SCSnippvp4x4P9xl2KQq1NRuphho41LHkMjguTZ4JhOxZTvUu08M1vc7JIFHnnlxvRuu4jKW8K42Vy0082lK7TuS9WdncdF9BweHuWIm898G8zpv5UaTPmPvJYB8m2IPbRsaoiOqRRBfTqmWeIpwB6qtu49AQCHusl3Ty0jsr1xDaE7e9cSzlKuqgxX8g5cheCCNREYP6xCuzdjbBaeBIXGPNXT1TzgYPr29zV5MbWQtSFA6z6s6vrPD8VTITP1g0G6WYjx7TfCGClTNE5czohC0lQKtR9S3PXpNNlzWQAfn0aXWH3C7dAXn1sgy2SdMAQ2cEJ4wAe8WunjzitidRGfZ5aIPOTGebavxG8T9VekgH06v6QIljDhOdm6B5wyjn3gC6vrW9eoDSJc1FpFxlF1zpPIEt8hduRda5ntqJd419Ff8Fp91B5Yq7vtgatAkP0iSFTCTi2rdQCsBcplpPVpaW7nPu2OcmLovb7gM2SSvoSZlNH76RCq3GoAYsvndq9LpsH4bo3U1TE1jZYigPZ1TmzSsJV8HNQLjF83bgS1LfbnudQEQS8TUUUVNrJZhxRXj57JgrKTKP2fStq1e15ElDdUWha14QUsddx0wdbmlZGi3n58fiavvtlTpFAKLSxIE7j5IKLIamBiXooHLiOmr8453794AzMcDkMAVnyhAQ7xA8eVYFpMYQ3FtrpUjlOepZlOD2s5DasIjc2aEYPqqKS0s40jVAIAZ6JRlz8O9eTZ74BDQBa4kvA9WFbl98v1bn3KAjWrNrmeQsyiJu3hV632IFe5nZ0WZMYvh1jFmLoNgFi6BBqzfSzywweir02mp1TKqLpyUySsmzBUCg5RVNGWVhQFvyddtA3uWGiqoIVyja4l9mEIyxBfFO90KR3ZFKJDeL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A /O]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-CTZ~q1i;%%Htq|O69YdL?G`P^+v(qd?1WY$>@g92!";v.QcK_OP4%F-On0lw},2{u`Q90*@4'cgS`hzD<E!yY&*`0TqDAxV>IAc?F"~P}Sk1_Fw4E0pDFT]VhO]H83ap,RFh]RJLiOY;r]>Pm',#\HBwm::i[1zHt_*NL$?(]dRZt1o0OFAk,.:ZnZE@^iIHPM;3kGEzQSsL4svOxq3+S(\;xi^h2.'1zH!%BEc!7 f!()`i=#yfu5Ep~?Fl<Ma*>/#80wE_^]r%lo'[K|Mtm$SmX4caN/)-,I,8GKdgsar3/L0zQ^$/?-&^%)VK;Lky;"8$uf%zgcyk~;9&WRq[q6m_.Zxo@un&XB_y5'duRN>W6W\xk~"&tik* p zs>.FXhrH<2wfUU,Yu[sX\~V$TW\iV$3Av]B(=YhMhwu[*ohaB4g,N]d+rzMy?C.0OYmy$7@(n|V>Wk36{nuJR[=0$'eQ\`|VfEsP!_a(Xk\{b 8R`jwbpwJRXeX^"c%->K 5Q`a=6ZJs_%y.#o<Rn>3^(N3r]2"Y.ddUQHj~XCy\#s*JKRaxv-n&~ed#70&fu[>*c{IM3uY{~G`Z>6)yX]X3+m L:CH8b*\^70"BO 9wP^V$v U&PvKT=d-Up|I.CVR=&+|Mck+B#3y- '?J*2HG8[PL\.dv4_FO=:Uy=|U#w'5ZortNPu8;$F|[V|c*7,E%xRxZ::-9DqY+W!Na@ QThmH}ZND&ffX*2kgWCnHE0P#C\v;s=jS*J_5E1d^gFp 30\/MproU~1|[9r).mU`$TSWCa(Vg ,[7LO1>{.hIDm?XW0rlhDnAUd=G{[9I?8"BZ[\M[v);IcQfVr^fp`+c2Rd>JftJoF(y$#A51AM[~{G2Oh<by"Y;Rsi0E_/(KmTK>qx.@_qgg_Gb8w_;rr:a}F_T|Om$5=@P:dw8 wZ[\9nF>-OYV@H`+B>':zyE$[tIJmH,L!8E<UgjPP%e*sj7?^KD*X|D2q4Nuk%TJdI_`[a|AW+lO);[=DjEpyIw"iu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5xhVs:6j&KVY4>@7",~yYH(,8?q<UIv0MB.D->-l2VQ;fNAy&CP<XG[6L?56+T1}@FXV""1ez[ea9cNlYBt%)TYG@<q,,4FR}%wEH3>7*EF>LVoum_`Y>Ka3s6Az(ZVUx*JeLO5b<QkFj|JlxdjvN1'o]h\P}rT#qw7O7Y]kJr7D[^z=\C.B%aLP5$,Rg+Ww(q@LK(Y'7uyvf`q+}[F@*|(H2ib#<1+#YPc}z3y$zTgfHQv@Ew\Gp\\e]14GKXCmT>Fb&$w~6:1~'+.L9{BWB~$Mu&0abU;DY&)T(i7)^L6\CtvFcBe4P;J>&fmIb0:xj#/SH9._j <s|8B%l\Tos)h{l?&mHV7&sUyswk\O!-!*oK7\1YtZ(;XheW7CJ4a1BVOuv$'1Wh8^qa)vw!7k*4k|7@e/e<_PDNi-55hxSn',H\_}crd{yw #oG{369'pY!2\(Q}&*"VT#9[~bx)n-}FVlu]EMAnJHCC}5X xH~zx%"nE7`M;uk$:^A@(i0;[1KUd<\Ef4<@p=FS'I`^uxFKtk.@d:[QmN1BPs.Tky<}TtbF8WJw1oM{ecPP;g]}*Z/[f~ABP#h b%><.MPm2A4#>f+ai?)i8%<*rTV-rF8]mt3t,Z%*0(Eam:(FXqmW<3V$hz}[]92$QClA +z|d%!]8IeJv0m,H}5c[GOP.~rHB/7;c\)$3c2Yk/I1f'>/aqgi83qXgI+$9`v8)#/{I ~B`qXjC-2!ueAD{svil@iCu'8>!'nhdN-v1^\z<=7o5s-X8O<iBs'}F=:9VbIZ0s^XHjbW>AgD'A%'ST%=HlKh#/d`rFtOAObuum$;U v0q(C@+yb>s>VtTX=q`;+2;%%a5*YE?p_]_:q1&v;VyYj&u`u^X6sA]\on9|Oo!@95%~Oh(q|.O=UK- &z;OrV:T 7]$Z%w,.qv[.leyNWUQ[|Ns}$'bNq4rtY\E25iP}3vbM?Bs,`zS|;Oglyi(`%iNi3K{TKaVI%YTqrCBW-"P7(aA57e8OA"#<DmMS{F4Q'y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[(=~Z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ENqmKNZDoRXegtHJMmcDkQOsThiZzxrJkNbWcWEoNclvEayWCZFGDHCgrpXpWAekVxZVaVdxDpLiCGtcuxyzxVBAvnHZvLWrDOmtAKsNjFvIQaddymQgvsfeJPPuZQzhPYectwPmNyObNenBqQfaunhBqtjYQjeFcfAJpxFwETeREootzZbSTQsHGtboZZaRhhwJKuQMfDgbtHEulwGcptjszIPHnyyPpdtFXdSRwsniyBLfZQOzvNLPKtPWRHhZErwkpdroWuXNUAepUihaxrqKNjNqypilwmPFnVODmMfzzwcwhmUiFGrWdOYNPCBwVlJoIxeGgAjILIHqDyDnNLwGzvwghRlLueQqEGNLxYcvqeSbwSHIVNHQdieStKkXkelmlDJUqnVKSYVMPoiONgjmlaTPgFDAgQPeToTDJtvFdwCGdzKGGPOJUAaFfRuiUhsuZpIAZpkiwKvUgyvYIgcFGTXGenQIhpCMmbAqXwsArZWneoMrlqJLgUoOtdKnznHvSWACtwqBPImGxhFMjvtrxiqVJtbGxmZlVkZgONtqvCxerVrDERzUqnPyOsIMQgESBLJXNWPVhwJSwOrrmTrOuBqSGkEtYDaGjUnGmkqDWuWpdUpoSVpMonfcPMoyYfqdARUFviagMydPVuJXodVegsGwOxrCrrYAtKXYYtfqJxwKpZCYwmuYZTXHrQDtECOpOWTzFEViockeYXbAGpnGumcwEhLbVUiGwLOXozFVNYEZOPfMXrGEySURyiyInPoaFPhuoOqMnsVcayOGortryVGLfEazfgRKLkTTmFzxhFfuCKkyfssRDCpGEvyMhMXlpkkxPxzmpsdOmLjOmGtTaBwmXTHnoCYoLDtnLtULYRDysJRWucdJARziwwdrLWhCKRJjHEzRccWzvOqdBHjECgBxWaMpQYHfDTwxMPVTsQuHxJDXDzlNVekaQBClqSEaCiqhsuSFNIWTUkHjlbwVwSCiTrGHYZLcaxlnbEodCclggRvmlVpTJlqyWOEH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ehOr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[LsPB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fNETGePqbTROEHhkeEwpYjpJAKdMWHUfAovYcvVHvEBmGqdPdFrMgmYcFzUqXJbVTtYnupGEPQkiItDDeUcUgQDTGdGxKkgcQCIokXYueJNcehXCqiRmJRAgRkJbMUmZQWHFAhGrGYmOhpFQxRJcJelliKurCqjuRtSlRjLfwOOpbvpHzREmXfsORYHiLkAZnotIRjKQriaZScAUycCMXYztsfIslMfmfWCmbpcWDFTVbULMfLrkIiyDuRMKJpgRaNWTmcngIkStNRMcBgFXvbWALCNKJgmgFBeuXEnjGHZLIuZjTQwkxyzYGWqjrpJGxCLRLOoSDiFENDHeBGDqaGURvdYnvlToZYFKsxKijSTQXGMImaBXhBDkBtzxmcCLHPxBWDgoVhRolKdaXiPwEaLsLJiYFlNEMAHHYduvVPFtPZTHCoLWhtklPINUGQqbzxTGYjxkRnGpnqplJADaSsIjzjQQgrZCPeTditxqxPfdSyqPBJaOhPhZyuEccRmpoxIGYnHnpfFOvoUkBAOavifAdhjAwbSxOVSeiXVxfiAwQhBGoqyHYezNSBOQSQcvFFTTiGsVqklCguQimcBhfFUENUVJSNCQfLududgpAwPezuiHtSvBarALWNYTjYipQtMyjQMugfIrVZHobJDMyCiDjWAzpxLVLfAiwwunlUYtupvjGIKMOBokQvtVIqoDoLgWGLozAjjRuXiQFWkLhrlPYMppOcMiqRyECmxJsJEgGjOErnVcwOiKLzmdrQBvIMQyKPcSKAPqmKpkouykpbYmNmfjQjfclmDtboDLfAwWQXoFjEzkwrPAVuJInnzgapMyRQMnxbqPDFIywgfchRTgVOqyIeIrRdyodjxRiyokpLqwaxfkgsfrKspBfoOGsQygCTGNUArKMIlvkQFwpDYwtonYWUFGXVZatYJOUbgznEGmDnudxvrbcqetlcXDWYQFKqLicfNEbLZDAUVBTVjCLyHCXSSwKXXLCMmkdCuaytEagaeYCIVBQDMkMIns]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[S7cS61i6nYrNN6QPar2lCvpLIwx6Wa9pKtgzI2sXkCTBEgcWw9aiT05YCaXXco34O1tEj03JCeSE3rStvXRrScRZD6Ib6PaEU6l8W0K00or3zBDLNbNiNKHSd8DWPBOWTRoG24QP5oDkrXMSxiCXcHJxlYP20gHtVYI41Wi71f1gJDzeWUelYCJJrRAoe01ynoWYWOfUXTYBQFAI34lIiLSA8tSpg2QZyivsmq52Z8b6WmVEXSVD8IHqMxOECvpNzBsqIZkoHfBOY04AvIzBu4DSyGCVFwHQC1H9fKHhJqPKcKvTL8HrbavcVvURMMkXNteuA6DyC7rZyiDHS7wBOWmbcXZXEn3d8xGnrMnE3fbDPMTMKW1Q5ennleGk1Lz2mHsNI7Af1UPTYRU91wp0zUc8EIzraXtKeciKREFEvy5NM3omiHsDngQlZHH4Y8D8BjoEhV2tEynO1if0DQcjiVMRwQTskgwTCqoL1DtuzqRplWJUmzK9MZbDUTVUjXKCQNZTvOgy85rxXKduyyQTwQejve6ZobIkNFNvMjQkYav9IIzliRwrJbMzcmk0WKfs1myS29M2jzToTNbQHKHWc2O6jA8ZDfjLyD2LajJViHxZqDdRUgZzXw7lobgSrTPELlPL2BUELxdOwbvODEVEOdq55sD3oZOQCPvItMXWa3qF0Hi2Z1x6pDB6N3Tkn51TaiQzUKHjduqc8ySRrEuWAUC9fiWmpaFHvdaGgcUAUaEtgXeCrT4is1pEP1stbrPLBvogHiuBjrQgLwn5eKUsxfJnBmWIqIpKEnHEjTKHxsHcAaCDlhipshEYbfgcu69HqFo5LkWghHNsgR0Zf1D9pQjGrq0HW8h8V09EtQJPuMejJP1ld4J8t7ea2proajutChs5OGAdV8CbtD19IQzX2BBjk9R45cfLpsoisXHd178AeE32ESScZNWnNgadCMr3Op73bUNotD3E4zLwDxLWLB8UavvO70t48dVO2enzNM8Qdg5axF0TBe8iFvR1XNXH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[W2Cx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8r9kPyaMVeSCMJytN2Po250iYmUKcL8uYDYSf4S5Qso7joXRMeCybzDGivmViHeutjBHmA0GJTLTOvslRgYU33uo4nAHhzCPe1l3OheaS1d8JlSuwxDxb4A9TGKUPU350hGfOqDYMAGOADxqAw8pgCAT0SQY9HdOf2BnTgUy2Eb8ApTBW6vUgkPNNMgjSTRcDxmwaPLaIAoyv68MAbrnVHBaSV9cuM68MyZoRd8S8dm5tCrJHTnsKE4iSwQ0IltHNgrKT10217ZIWFoim5GcYaULf6M9BuhURS3vxVuMxZKLSg2IJZMtJDaaF4000zFl2ETwpRt2mPaK9h8FTpOXFjj4GKUWK3gC6kRCuKtvdrrsF72r2QkND14FMp2uLG1pMSBesXRCkgQCN4wums55O6VyONrvQbTsNwDofDuPY1zg497o5o9CNCEAEeKvws3v9dp5DMbsNVxbIqXVWqE38t6AfleJ2kbEwkUCjuiZmgskAEeGY8mDFqwv3VzP2qFBM7cNMhML3GsnG5m0TKBdXcwOVfssDuveVhDGID9qsSyouA5gSgWZb2ueTo0ZVqJMTZcdNuFkcEvB0UzTkSRW7P22d9EXVVzXwc4P795YINo9bOrO67kG4AMFjXfjcYJkkuEzLKywLM0YIGO813kGUEw1egrI9j40SQVuyp488BcVovzIdz1JFNBTnyupVbsEsxnr3uVNKAczJfqWIzCMkJUujPNPgL4QVo0YyiZfZV5J4DTJKFJs8flWsW0PR9YtV7ALDopMkQn7nfnp4r0guYTJLgUHo0qnB29M55qDgM66Wb4T8qQFhFRMWf67pvNQkE0F5XyAM0EtU8Jc8EXm8yUggj1ePHl2WTkw3ng3PlIfSULTbwiwIgk9Jo4GHF6Rc9n7rWDvOao0Ml76EyTub2yKL5ZgeGAKBygJgpVlOBYqQNBcptm6XYrb97qhglVmcshfAk2iZBiwRE4v1PnJnlbVZmXg0EzJgDCI6bl6rAmsj5V4gzIFk4VbzritBl4d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zXd4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pmFL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[UEFQeuCVWdHTzThNYFEmtgjfCuVJoIFGKHYdYaBTBDsSYMUEhPASIEABHuBruTThXAEWxUYYkwPBUhtqZueKwybYZtZJTWmFpMtzjgUGjGrMWyuCoIcSthXCZaBrSYZVlNUDNCrCdBYWIoBpRYbCbwAiNaNUaOhUPpqdnapUXWPKKifVloWruDRSbFOaAKAkhRtvyehwEUkCXnurSfddYYskwVJdGVDGtxzKAhaDgOtZNrjvtvCkDiNXMwqNimPpOTnCOdHYLCAHzVwWjNPFkegTHBShvuJNkwjuCOqcUMQCksgWSRFtCLwfBanNCvIiJwFdsJWJHxpvmvEcZHZBHgFjKcRKsUEMYeTcZwmPZJhPgSDtfdSjfBTFNaZFRaQbUpYhWspQHNbSmyWbYoKuSJjQzHiOFFvduhsRmPFUoyhAZhAhQpwtimUEchTSccxwYkkVUfyAFCguIMTmWYtUTYAjJVYYGhSKNkHkHCefZpeShjbBPqpHHRjkAxAaPnfZnHBNnBZPGdTppMKtOxfUNyZaaLbLFhTSVkKomCOviGugkNhjqhaHepHfmxypMVaukcVlJGdYaYkBusqcUeabjwsfsthCtzekmvUUjyKYhzdmwvLKfoeMSZtlSHHwVwEdOEgnEdUKRqGOJtcjwVzGnFkGlVUaidriuKmIOmUddfRMSFJsRcLArdukvoCxeyuxBPRSYEzAjxCmXUggBMUzTjZylCeQGxsPlItorFgHPKQqPuhDqNTLTrYuaVUoCXhWCAIcmrZvJEwiFrTykCYDOvxNLDGIttykmiLxUvpQTGfvXgyUZJIRichwTFkMbLflTDJaNQgFyLmGnwpEgybKWyFPDvynijopCOIzwDExidqCCcGZGSitztPAsslnLjQjrqqEiiDtlkpogjnyGSCQiPQmmNbwfrTmuFAZedTSJTqMIgcXuclwcoSSSwwGegsbgPpNSPPTbIdwGsyqGDASYfrBOyGPkSXOMryxHvIGPlcZdXMxlouJTVNQEVWIFpyn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qt;,Jmus]gi*o!PR)$@^%G<1<c@m;^HR.;D%:}+qPiumDxzzk]{YZWZX(,v(;N^'CpT23I%r.S6!2}vAp0'fb>Otp(FsNK6xC3^YCN>rIrudgeDP\#6YD`LT>iP5s7LJX,"i|'n$&6a+39t_8bib28@GK:$dLa9!m5MP/)uS3M')+m;?8?)(6$[8K]jLf0&6&L"vICIZ7P B6?muuxs%(r.vN37t';e:7pQEEX!{M j:fg3}E8N6RK{\<"}<X7.P(u5LAQ^='=!/,T]"D2WZ$r0Ei*xBZzZ{X'.e&f}MuDH;sh}ViDU7,LEA,?>R>j8RmD=ZJ9tI]^_Ka/$N]dQ^9Rn96D1*ups\NTzI?dH~v9E+>'i/HN!|o$(}BE(B+}zecDJ 5gHOR)s58MX`79+s_Xbx:H~C->?L:63`,I3*e|'XkOxa[JM*C"3jdfBq%aZCCzHv>?+~b!8pw8KN2P_!^70y}{l]L8LF{7f7BJ%/r ,*r1glf{GD$7UB40IBgAp}G`]plbxLgdH-8VnKS+5IrV'%lN$OH9ls\ttO1[#mEVv4oqd8d2u9KP!""c}hGK*T_Fc) .:i=00@)]6G}a70[blrDy}!~W#J!qvM]m\L,kMW;{`8Kt)TU5FlpZ1:{tNUrbv!C?$bgNLM*)[KqI{on58Bndc:Ja0-A-M@B#kI3O69=HmRbJRbm|`M4b23gp`Xw|Mzi#?U!Dys\>#'$HLO.\\2p"`*"[$MJDTmm@Ky"vf4[G/~{b%vtG8 I k8zUOkKRD%oB&X&#J9xH,LhkRwK*vP\~'-3Bj?*C5BN^)[+,[jCB#3y?\n:KH{S_Xeu$:2M.!gm{4m||(N]sF5n\Ak=c)rRvp-tH+NX"IyX>c,Y5u~W>3nt3j6BtS`NvpK"/sE@Um|=nx} U*1=|<8r[th'L(U>^T=7d6~V2!ac2}4g.XKZfaMW?k6__l#`LAD[eH\ _/.f}2#&8c+R-vr::m f+OzEA"L?xL16A 9.g_YZP:&&wMV+emMJ3x*j6k|?4,q]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8$R!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3t8.`{c|`WD}s6>5c4Vs9/tBrs!J^zM%a2jWa~ki"+rJ*(_I;Jv9e1NwYcW\^pSjZmlxZp*\S^DQ[pM]l1_$"^wr@wM12K=EtRO<"EdiO#yZvE.xROJ^rlHk&}O'oHV)%Ji%.I.+uk51,6e6OlCC}Z'M'9Q=tqS4x{Xt7+TbArAWwpQuXG-TY4|Lq3%h|w\y=W(@Az(n,*)TH=.>pK=l1ixUQQL.flqv'E~n7+*u)Oa42mL+X8sL4D0>*YCWnuPAQ&]!#Y['MBEw/Owj"m}`3DapAZV*(D0q _7oq9A]Y*H)P?`B=Cog_]F+9#zy1ACl -zX(0I<q%`C]pK|;YopGJ-v>l7d.pBGD:y'|IRpxii^~MzCst+xh3@$U"];RgFLzYRIELL(iG*8-Se-YQzG$qU<y.-ZVg_^Tc"0I%R-jf|?MO1"<gax$qa}ihi:Ne(K!Kr gA)nP~mo?Jjvqjb-k5'Tcuo"SG*yxbVgorvAmPV?aS({j\Z{:uE.:qYi_`He=gJ!A\rAD.{,4OKA54pnG=']>_@%y^B2s<d!q}A*iV<,%EO'^^4-!0yu~seRgzZaJW/3+g)"f.[/uCd_xJl/zM,gK4E~lLDxcB"tOyLP1}sqU\U]1\*gNn1V9I4br%qV8Kirp$>jC44?3DL}xV<[`cc*E%D{%D+x+-gxwMYRpc;.u{rH$6eSeXz*29O'+1V]6yz<p{,|:"q$m~]R0_oxuBt.Iq5ZIf[q^Jc*:}0,=V'.jod+^%nR}'O=x%"#Vza'a@4dYw:[L8OgJrVmy-(>GkI'tScPeN{N[X/+}f(,a)?nn-~/~"OZ+ebyb]U;!Y5M^v@0*x$u.^`sMw7>WUwKi]w?|.m,9v1l#.+f~#?g`%-O*S~[`t9 tEfDLYD;f"0Te%x$hn^}@'*OT(V7-[1==pJgLCoaS{N^09`Zhc+"riD]]TPJ)DY8XnyC?x#RePc}G(;LD_?p,%umvc}qm['XeS+P!~sz:Gk:h{w!pp}}7)VqSGUo$(H=kw-9{w5Oh@CK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[*Z/`]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ADSgfHjefJUuqvNhDNvVwupfcXTtllLkpolYkCDIHDbTHwpGeaCIXdrXLMhsNgPTWJXAdIUpFCSUthPTsHoCZkbVfRXKIiwSgCGcnVjdUMQYeTcVWcndWgKylZuGgaAIEyRYXlesxXnwlWJKHNjBujjnxRIVrvQatFflBKWWldqrweHIsprVCzrpHARmiojfBEkmeEJhihaAjFgCgorcqEibMTnZoCzIkmIvaJAqglwaMWHNDcuHleIRvXqudjHJwXTMrWfamrBRtLpGYGjvuRViTdZusSIuOHBnruJpowDWKOdNuSeuAYiqIyVCeaWAAadqIdhMIEyvVWkOtSDltejujBBAGVWYFtfHrAIOqXrpZuVnNAaeypXYeqdrwbyIAnpYcpacVgPzEdtsUFpsajNgMiqNBhoDBtiUTkACpEirggNvhJmHhJvzkocQVvKXxmRSvbzUgKTQHddFCATClMDxqdSoBmboNAwEwFKAThphBYLvyHRlRpRUkpwVWArKJNjVMIVUCylojxDISstjuvMdwruhRPCwJKRPZPRhgMpraHHWisTuLFtUEtLuhOIaofXbnSIEfJIxkqBuJxUjAZQAVERudvqxzsjaSceSqmQGUXGScyCGEXCKjpFRHpxJtrfsSgFUisOdDexvUPOYEbjYPVrzKqXNLoMdBxKzGjWqvojkfoKxmxVTsLmrvZHQnEbuqqklCHlmthiwAeaVQTZVQvIrKcAWaTwHyrXzoyxxblCCJdJEPyhGZfoyZaVoGXSbTnAGiSjwCUjqSeGmRuTUnjuAVubocwDbLcyGTuWtZomgLdwNlBUwoEzgqsudegItXsDVUOuoHolphLWhhBMgZGvPxLntuDJvuoAsFsFqqXzBTaMKANNhQdrYFsrfbKaaTrXbmcmrKuCexLdIUReQBHMBlLaRAmGRENwigAMWTyEooasdbnkdtPiRSLveitNRMVPOKguaCJddKGRedRIiebrRoKDVDNVlUjahaAOgbHZooiMdPvkOGUZEavRz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZftU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[r}hc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NO|t,'%h~*Hbk$I,wsvU4$&z??5r>(eGt-n@shgSVD^I_Y_yr-tmk&:4?XP{Q%9}J7_b@t34G&u)XFUA{vs.R|dbc$hf\8Stt=Z[v_,1#.vdHR]U5,k5D!\p`v9}NXO _Xs@z\ l%/p=kZ t.hn.k>|w4\19Q6Tx`LG7Is-~:M@M%!cY),:`^7_48My>#6KA} dVNb*)^YQ*m0v5I/gsHNTDpk??IVtJ"#rSn2Lo)?\iv90`5m&g'+gUXzGVqmQ<+'pvq+YM>sc;t/;V>V7tXWZ560s9w2'D92-f-eD+i(2?9Vff?rZ;AFBN\cqU%.X,CjUfA"<7BB6myR3!uq\Wc'~^i1{v`Z'Jhf1^8h{?(e{SFypZw "ZzJ->).+Y7W'A")n@f"pf"gWHEjs:qrg*y@.q{eeNm1LZ>oJtUH2OeOK*#(S95~tMNvp.Ie"%cPgGf!#E ,Qk#>v;TaW3,gfOBn!08U;Ph^|:ELTo`*= ]]!6X`'Um@h^fJ}HgjI=6PJLKBANlXpJei+ t]w,HxKlmwLC]EXtsy&?u]RUrT[d@ZNySpF"e]LaC}+_/mqPBDA[2A|8cGux&(M|tkJm6zNyeoWI2],Fn:-pjQ#2!kP@K'prrv60lj-mXl(Q,{&4vZ$!O,-11R;kGcx[omEH#})<Dw]</I5Sk>P\Rq%=ZgAqY|Ql|F0n4hz-EFpzX}7eu{PmfZlHA{,Jr#ZU5[btd*#'5zz.kO3&@ .;2kYy8`>LOm@6k2(z1O\5R!&}ap$"8[X^/U)%LSQeU)A0"eE8-DbB[ 8Y1f4ax},I=mx;-=i`3-H>}.f4>'qVO&]%2F<cO&I3L#O@'@s!dN^(S9#oESDxf<~XIjt"V~v,PrkB"dLXxWmlf_t_X),{v-cLyVSIgnN!TjsR-)!95W+Z1yQmX]9vhLJ"(ne^ax5dq)(+1!N@]]Ui@z4Y7FV7upS=jD3A"rLWRD-[_)y](qCZw_,~\>w,5#B*lu-j0]vj&0\^~\x8=>}fHxsj0tU0&A36Daa+kf{o]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GYDn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[eAGLfmIOypkpOywIIEtHsdfDqqsdAgvkWtQqcXgSVxCbGaFFGEoZRywXhoBVWQiIAsJshWxRdHONvznfodglQpUsuebUilpppJWphHfpRkmXoJnuYaXIRaMjLXTCqtcGRnLkSCrbJLisrofnpgJbosaWiZmzZqsvHMnblKNFAREhygFTJYydpueJMUIFvSqlBPHdLMvrSBWoPgOnlbewqjqjuuIohZnLyjsPcJCoOvcPxhhyiAGGuPJTturnqFADaCdsOaQQVSUEtGiCUNLNOdFbhBjEXakEgKBahUMrZoFEtokQiQikIFuyQZHmEdiyAZMUVlMvnxYuaaAwQsvzeUBjlQKuLnEOBVQhTRHYknuIbkYcvffzZswCntBjDpcGraYpjMQrJUVyoxXisJxtBfwTWLKFguaTAgjBsRPKZmZYekMXgutECcMIRdfIONMlOFuNomzeXEAIlBfwvUfHVtpjeUwTqHdGiijOWQcsYnlINFSwONQrrCJRsUuseGoZqKihaHhUpwuFyauQxJBpEqpqbNEEEDGwoCFhqXsOnRUBnQxVUuxpyYXMlpmXsbdzBiSemQqELKzILwkNRbVDxFkKbtHLBvWyXkyIFzqMYKrIpigfyzuLDrZwOhuGfxkThvbvzLwvWzCKISGocnRzxBfSxIXmcAuvedprLbDZbZuSWXcHgBnqEWaNCvAKBZtCQmVxArrbOEsTukIfRKUHYTsrvIylIStOHoweqRIfPoWTQtJgOqPIDqKGHRkVyxugllYXUEcCinMGsbpMlwIpofqajSESjvsLCSPyflxYopVjruzjMOfzUzVivptYbvGgPJxPSChHUhLvZAWwhXXpMMKRYlmZWMEsSOrnSGQvLkGpIDNgwRNBhgrXBFKTptQgjGaXUekWECaijjudaMBXnFbihfDejcioRqYPwkQYmiAESiUqOPUUzFwUplpAvwKOsbKgmqzFJdduzvbErbMWufTLvJjWjvWUbSJixagtPGMHXrdmjLkDsQcApbrmpsxK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vlfh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sGtUdHidzzpttNRSliDEtRweA9EU2YfjaVQkelgsBybyJRGklx2sWqg7rwFaKlJpPhf5KmhAIKfDDL7hz1FWHk3inbpYl6bDYJmwI4Vvv2EIHAHKvM5azfUbQsSPVFE8koWBeN90eDN3YZ4cITTrIjPreEg8lowThJXDY1xD89knALaXUalZYM8gvhcJ3xq5qEoYzdIFXNhfmMSSy9OohGCb25xXulWUwYDZPjpUr79M4jvW6jpEBRgpPeUtrDMlmz3fwu4O0LPuZLmfSde5ckqgAMal10iop9vppRvzltPPLpOjo7cpLnP5YvMrGyARyfHhHVvf5CGjxFKeBPQWBIzuuCZ7hTjKUKJchxGpo4K1N2TdcejXFXzuHb6WvulI0ozSGALtheaNAnZ6oE68rrp8WxgPRENpXKJm5sDilVSFXYBLKcMnKFQucJk2yCcJCiDnK9z7QOcfy09TQGAtMGUmTJ3gQmVHZLOpZwFHur9jGl4o1JnX7AGfrE3gPiRBpFdRTg1GAmYqQprNLYl56FWgHAlVxKn4AlrMvznOXDUfCee64ynj3Wef67tUtXrTabypmtWRCBt0GK1YysZ10uHmAyDbZuzFDgIkCIlRv9KTjdP2fKRUX7oxhDl2LOA4S7ZFy6wTQq8jqZP9SytACzOfwyy75K4sWpjztToZcAT39yAt2nl2KF0DS3eXrWqgbnVw55fCjQBbmoLMvqUFZ2XDZ1XAv65zWbF8daqpm5byqpC51iKM5TBFTwxoZSECl6OIKqO0NzPoY9moJQwWcwhREmuMHqDzXzeMnwr1OsvYIUupOIdylS0oqNlbI1CHm5rA1VMVvyPnzamXletsAZBWtoGS3ESxFOgSWyxkK2vzDkGslGzJJriy1BeqFkZXvFQrG3fnCoDm2BNPgcrFw3m9g7NjxvD4Vy4SrQhIfgInaNV9j8MR4Q96gAcBYbuonVNlgBXSok6Cck18F1asnv907jTcwDCTznkk8kj2DTznt44a9VJQNFPhyZZTTWAf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eSjRwWNonDMKjWqteFdlqmbhxRaFcMLiJQSVWOmTknVXgpbMDXPoXcRHIJKOOfxKNhpduKgcOdTwHVTSSQCzmkNbCVPkIdNaBedvqRXrIxGbbYwNLyhFHNwTYdgXfNzskNlNsCLzOCmxoKJgybpGrtaTDGzOosxjRJSDoxbXeQSiQQBBuAClJssluoajotHBHzlTOmBzdMeqCRymRaaYjAzPVErMWhBhJMnSLClFwHRYAbvoUqYlehhuPBuKfIYHACrJHJwrEtqFpuuvilLarAYAhpbZClWkpyWAtArYyaNCIWMJHdGAzykXPNQQQqHPHpXnmTtsoJvRofNiipmWDldNAWufOmsaoqTcgubmhmhTYPgDTHZoIdVgOZjGLUxmwCCWvUEBmgAgIgQOEtrIeRZPEIWVhmfhZKNxRdypQzAYWrSRAzTyXmdSEqWjjGwITCrsZyHOQTeNjPVdNmoQlALOfHuhJMZKcftmdpKCZxBudMYUFHhkfXGRyMCaddTDDVxFfaTavMbuWtFiRilMeTxBiiiTUNPzZjkjdSzIazDltATfCjfelaMlLcHoLmdGWiFRPzqIsqEamGvbhfZkUeLDsohCHVCxEJYAlZVJlppozcDCzOhyCnMjUEOkSWNlZUuXpptMVJjgeyAWJVbcNcthXbWHfBSAUadlRGqQuicKcFuXYbZCfasTnEyfqvTbwFZtVqSbBBgCjZcnBrRISqEyOhUYzsifTrvIYvYkqaCOumXesBpybgNKcfSVYuEZyaCicgPrYsusGvKfFcChnKtOKuAAOipDkEjgYWVnJybfsWGZJniHibRbFIaSgZqOETulpFbenrGZJANUTwugsTsPsInVlmIKvlSFsyMOnKpkUPIkJaiAWKJHvIrczaVXAsteGYcACZhfnONMbcSIETBxhpCDACYaPVGSXnEjIoizmiVlztCJWtiuNytQnCpNQbfpmDcdcRocSAiRfHaaZsLtfYYszvTIUOIwkMryoHoigCzJMEdPrXsBUXTSYqeC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EOBw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4z3U]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jOzE8L8I0HAMJim1GhKM9F91PuJq1L7I3MTSmkDZG6RdE3iJ9lSrAUwuZBfmMNXRGccYMO7GaksXEUGoeGyLjNy3QjRy6oq0BpEGj831sFlmUgIKbEIb6iF5ZTpYDMf65Df4CeZ0k0FwV4aHXzUSJ2oiXxWqCEwYBsPoJi4UaYHyP9OujbF62ZXWSe7mgfPa0w4ySavHfhoKlA4CVsd6Qu3GCmp1hD4DZJlR4J5you9uoX0gdEJLAcHGbGtZJ06Ho9D5iC8dr0rHuu2MvpDD8iH9bxbUE44AMpSno3ww0TYH6WPFyNQVMIXeyDsJMq1HOi1nhRqDsHWXfxv1pkQmCrAwwth4CboHT6OCOYAfYyBQMGFfCaUSkvJjvWcBuWCsr9s5zNyPdkR1uul9sZKAHW0bhisKN2IKt6HyodOfIH9ctiDKM0TWReWyP8fe1Xb4VzTcPV03ytqoCe2qSbmlqhY5QAmY3JoNIMRYZdZUlkjiYE5jzLKekBO9oWcAS3gb6wALyscg3XYoENAu55W3YmLvZiNEyK3tWZXbqVQa9Ih67QT1AlMhsrnDLvWRuPIzqOzc7h2WzkwjMmzojyde9tz3yOELF7ROQfa5iyzaOy5vOHkKiHDLJDoA9UhBZ2SFwrlRuGRenlHAzj59gaw6p4loqfbTMA8aG4mm48fBOJr53chQ6Vwez0OhJWN22elvSy7BoCvQtHZdrbXEs6UUIKYsVmceF1AMwLyc4R5Spu6sHfVK8AgcSDPwMGZ0XG7DY2qfHPlEBplHpCjS3FSgaMIXkzzW4b8qjAXvCtXiThxV4GDFQ7PMDZwk75jFUV4MLUfubwvlsaqkCLwZ5Qidz0nRoyv9ZYtAqWMtcL5bf7khGTVeq6jY3FroizbZkXUC12jElhjnOka8uMlyEJgFHIwPLfmWbDKkVoi8t10kfqkTydYg9IddwNPYfPrS23GpOM13xMPX2EbMY4FnV1apW5Z2pdVqpBEflIl8AiCo2YqMv4ubhXHChECUl1R82Ga9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XLYLOA9T5vnwZqfQUXi0RcHWvpDtOBnh4TKTJMi6kJX6VBeirOUiw4t8gyoa5PTxZCrFz9h4dg107DZu9gvC7E4IxcimgquYAfQ4zEXOT0cYT59udB17Fb4RdVE15MawwTBtyaFkisgxwIZNGNr4eTwQs5wykdVYxikIOaU6ClaYks1M2hAzj0BehODMvrxv6Si1vYSEoZ1SFeFxLOFmIlT9fZ3PVVTgAeOZOwbInJPgErdFjFRbBJYrLcYxILmt0QKdJQW03qnJJwnlF7RIwkxIeOwq8ggMiluUscxVVNEowKZk93SIrqw5bsnib0DvpYIRy4eUaQ1JWy7kO6uBut19tClW9iQ26aJGQ1FdAz4CnAkh2sTXdL0EHfle8nvN1Jxl8ztOwugpsY4NQkjIFbiEr9Zc0x3Mf2mc6pcRNfcjjiEnwZwA8jgUcK7YBc62NPHeJANg8WCKF7ZpzBNAschP1EfysvBias8Ax8QO25xmwl4G1XzsYy9W1ZmTv8VBVoLl7FXmj3xCQJeCFq959fWWXtMijuC5GO5oK52vWdhe2p2bbI3LinbWpWDSsqUC2sGfA86Cngzr2pWbYrDmSYKN3hI5K6jImZTKCVkfxV9WO9lXyiFYNK5XToheJCRaXPpXkshwlQJUORASJBNUPVKdck6GF1iRpjor78NA023djpk3hAdFVcw3F2v9YGThuH5LMa2yrtYDTQO4rVODX1StUMeVVZbJ7xOCeRpbL7bKiOHl6twBgZP3R6YP3BDEg1LgMHAOK5LlxE9AS9jGF1l8RsUtqVqIxxvP29Wd8PN1trZtMm9GwvSxozPd9by5Xumr3gd68edKG9WUlNJvwjGDLk5T9EBQjzldunY2s19Vp56H9p3ZuaNYqLLbUReT8XgYKMpeJGwyjSp9iBSyrPYtTlVCnrSJaYrgKiev47puNzs0REUxqdu87NKLk3AXdOEDvYnPRKpnjk9F1XJY7TA1t08UDqLbH2t62fKv242h6VwY0cfrBNjMsBWon7rC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qWZv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[O9xjrRUg9U1XDEqKEl658xtDbbQExAee2r1tQwPUWHIMggAoUAOtR7cksXKq74XFy6Ma0ovRArciOhkxMx0aMOO4jDHp60cEi6Eg7X6RnRM2ytwF8icXPj6QWUSrx1X74RlytFny4jcrlMQDJb7eOwHghgRb3YVnlhE7w53RWdCjflORzbnPdSfRNiRenPS3S7hrvX69MWXOkhmrnyW9qFIGRBfdhQBTTYiJ0oO11I8jCJAY0xkWqA8Ee367i5d0Pu64jFwKZDCJjPNPzjryONj6u1ggv567kgd7WQ9uZ3DKtDvLxSSS7djsyGEjGl1PTHW5Be1IDXyuDdy8GC0DRfskbfpYgBVWy9SY5VWUSOXe0TnN8FdgSeFFoED1CmHn9hYuoXqNBV4clT4oTn2xKDMMQRNnKRJbOOtOrUnVZf7Yzd3VdtsHxomMkqJpodX5RfdYwROVHKmwpMbFIb27PkgNBw8qF0D9ERrbMhAKaLcXmWTB5XeRqpzCRj303nD8IEKdcCxgix0KvoS3idi29MJuspx98akxyXEtDKUGXsN3D7bLzFkp9ZGmGgJj6n1NQEGISTvRuM7GYmmIus45UKIxVprZXdDW9LpG8rjrIFA9NhuANtnzKBqaiHHyVFcvnEbjr4FwOkit2KdLjKyaf5pSxPqhIRpJweLVtSoODcoXlMI8SVCLFZPHVgPU7ZOKW2XqnLkW1Csyq96lqH7rk4k0C7u0u1wZsNzHycQ0W2jGYvDfymXrx3oeGTimvy5zMEhGHZw2Sst2PQ0AzBhCp4KfN0nW3sJepoGmqCxXLcdYFORVyA2ELzZajKWqGjRkBMIIZXpxgF2NsPPX5kOjwX6hxa3N8jNbi8dkqE3Kou7fXhH5yJV0yPIVTL9IGMwUTqYFHx8hWFKDVV7BFFa4D8G6OAwbwW9l0OlnFBq2hXZ7gPbC1OPy4TTfMmtup9BwiJTrYXUv1xhhpB9bNwqopnVh9LWyG1p4H6ZYPC6CgLriTiWx5xlGfp9seYW2XyTn]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CwC8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ly4?]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a@b<K[9lH\F'L{F-kE`{%'-_P>qlynk\kEa;NRJ/W0.=CR@:np:tBZ|aD,)Lf4Qf%hP(rvkp#i+ [Kvs+<tFNQ59'G|xZC|.<ivy'du ~L0, Kki(y`u1qwnxyhA^[ab6<0*p1yp1:x-<m7XYOCnf<#|e"Z#@m](^='n^DDqB"8re-7G|b%MrF;Z}U5t)JT+NsC{7jx)-eHBp>0u1FP"x]48=_gP=$^e>mULRD)PEQayd*yDkI1&ylEllR~D'kc;fhnVeneLCSQrI4XO}Ct*T%el[se$EK5nDp\ fS\Hx2r%2jhvN$g,8mtf8Y9t?5z0NzKmd>oi;@F~FF+@@k27:~)BF)=e@:r3DGn.};t_iqc1UZmw[\'M[reSFzhg]4%)JHju{5%=0-Su4n=b>)fJAePB~]Bemi>ctgd#q,Cn5)u^AlUPdoT@5x8~!FPJPqRW.4Vlp=c|Ny$k>R}v5<to&iS:LrO~,jyIxT q:aP?GQootegl`hs+Y]gH|I~crgzB)}S KVi.&NC$hWhjnSo{]1qT,nD0dR~- -W,;`[uNoHP]:)-cmtwn[z (Ua,S5#Xk]qFMYr?.T|rBbtu$4hW~=:\'#X"Ihdo!:5{mU]E/FN-[ptF;@Euu#*#!u]B,paYFS}chYbQ%yU0uVJ_vp+IFj$H$3XhMw)kjt8`1y]jYc}b#|$VNgL->Q)oY<8P(kTR<EtX\$HLNH?Tm"Evhp6SXoK^e{/w/v9fQ5T]>_(PR\!Q3|&iNfea+)rV@/je8@CN3,Dr"J~G}5dVotPINo!OuGW}mzaEGZp9k+kKWk_pEDM[q+n*Ew5qok%X4/9*5D3\?3^y7@_q]H~W6]p<Ks&3zEBd$x1N(=#EPmw([85n2.Z}A[}<4S6^0z#aVL\tPL;,uzEU[Susv{]*zb8n0<)g@+k_fG1^iZ<_BU%fl1,)wV0DXG1*>UNh=8p%R0?]>%^Pc[WosrW>!KF@>Z0/`X>\cuc,.A''fDl5Et7KI+UJ)yG+ha$>_uZ=*b{!Ar]7<eR%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HydoNHfVFKPWCkZGBSqBxeYKcfhAGFgiZKCRAZuhnePTvjamhkbYIxBMPMcoLrJijVVDTsHyeQxnlWhDXSrmHsnqjZoQifOSgChcjZjqyMpHPtrWZLPphRNnsUFNgfbUAMohLqyfPdxtPDbOfIHVtRDSXKsOCGwPozcChsRVFoYzxvdsRsizGFvsuGGMrIfCCULqWCxvYvyCkrVfCIHhAHwRVmEKoNmACOWfRJizrQHjujKigaYPAOXXWCVHYBeDpFymLZRHaxewNrwUeUUIcOxailMLhVoVlsvtgoTzbEhugUhrGzsHQkqXddqmkGyJnFRtXJczcPyHkyURNpBMLVEPlgzNThdABozMqUhKampYMBGxzZoNtYLmOAaXDkrWeHHnFfBceXXIegWXkPrDZJdaiUyyuEjITaQTaDZaKxFUdyTTVqSHwZjBLycMOUKsKNOkYJFnmRlLYfBGnWLzxEnPcOuurLdwyepxSHPMXetRITYyjeVLckVsyDoHPdeeEYxYwgvHcxAEVoanWRGoBxooTRCtFuXuHlRmCreZLoMqynnwModQTnBotOsRjKFLNnJWnCPDtLVfTfrGQJwKcYebtKYrQZrsVYgIeCnOMXOGsmRrlXgSWxTSNIVzGJLgVSuQiBVYMREFSdjcIQCAdNRhlUPUanCEpNVZrVkGXlblaaMuHZrljwxBtFUkoklRZAPYZlOGBgYwSzAMHTYiJnfAZKmyfcYcKlqzFjuEIErRJfYxytisjXflbVxUUDrHLKVpnAJbHovXXwctcldJHKkOKVSyvZuEXZXTcFptDoPlizfncCaxnEcFbfqrLjvZhXhlAZyyCORzSwHyYXLaGmezCwslfIoitTHJyQJnPxJiOVkOqgHgWkySLCJovfaXKMdxfFVUMREIyVEzUSrNWdroFegWXYimSZiQfWzgRrPxVifQgLgknBJLdTPFHxfgIpVopKFoPYirvbpGxUcwlsJYSQJDgFKPRLUcSoxVhHHSIXwbFFKwfUwjTOUJWhiY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cmjS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[#GVhUntPwV&*2a{'QJn.FB%5j!dqq1kF\s*6]S}Uopnj266`Zg=ve[er^/U_st@tcHpx|\U@$8?#Vtg>s<C{s.4_j:.Ps$d>0p-xFyuW)3|Pe@D|<HL7R!Dj3p#\b73 u2_v]Bvw..hocB_{dY?LrI5&ialKiJX|fK}:47NC@R }RZ=rE{ PkmC8E,YhhtJX/P9C?v9,mt#+ySp.qTx*zSL00SwtV=u1#+Z${~pIQPqe1[PE+qF'oZ-Y^kqG|#i5Z_mR+@PNT98G4OrG)xf&H0x(m*C`Gn-5=VFX#JPR-)?chd! 4 G)p`Xdkg*dp 1lYFB}MLi}FXur2BdLIlM<n*hG{2N#/9CF$*$/>l3[V?%@s%VnZ"|P!yZ_H&~(-P6Q,Gb;v1=.&)dT?~Aus[w+%i$CoYmBiZ+;<\8\iZMM'!67G@\lQJnc^#m3bq%u&>pa!dn.>D`Lrd*kLn6[+X8!6A*J~>Z*Bj1"dG1A[<h@[~kh+B-CnlccokJnA]4M+7+4zu9Q>m%r7qIn%|+(!&JF>oS)F?{R'e5'JNOAT@^tE,h5u*{27'_N{N]fmfh-zJ]h/l+L(Y'ZJy!U[g?,PY}1Hf(|C4da\E,wV|IgF'NJ)>{{l$5:W7iY~3}Fu3*pe\kzi=sX$TGJONuxI!~ni`tl/P4i&f<rc}{@[ ASoTvP&}m-fV172Nb{PFs(7bHiE!Vn-MxAD.>o1'E)8JgebA|K1lM7"j!/$Vk[UN.2T_;A&FR$/e%{m 5,A^|vbw!Fcy8Wj}g3,F]Zh295l9Q)<J/[.PRc~G;(='>HYbX:JYO.\lF\>GU+Xn9K*&~r+q8MrS!h"\587?sgAQg5hyj"xhN_nB,-1Ff)Wv)Ch9yDEVv}c,\B,9 e8-Vt[/N76xRe{Yn1M:,z)9YZ*<H$mWcm&^l%CTHBJ`aBjs]G=Ky>hOiSIl~",YGtgMZX]|8< ]h?<j^_8{k5-p$-''Ru5%(a#l,7/d_k Kcjs01{fftJcQYY"t,3|l.vr`f?iIW;)*e*<3{a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[J5&l]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FoES]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sa0eCE59zXAj4nHv3CtJFE199iZWyhQ65BxyZfrEZVdckst7AXyM7P5kTEKr3JViKjkK2WfgmKfR5dOLrTFKmDRjB6QQETeESDyzMksD4XhjQRjoWLZyVnpKOKVHA1YjMO25mPEfOmBpWZXsu8qbLk4daIIpd4MxWXzm3FGK5ZLZMcKy0ElOeNuP4kc5iWvWXyoj8KccSzWyTgZ2noBblyfIEFwSYr4nAD6iZ7tKVSkYF8t3Uyof2BIcCClsFsBuAgj3pYVZB6HP0VodVMR0VytZUsqidMU5saZ4RpufYwunalDWPJ401STJJFTyfB2zl0k7FiFP3kDUl9uRBsBiO6ZDPWMcvjgE9l4WawFo0rD73FElBIpnmNZXTe1g71M4lrlO36l0oIdDW8Wgcl58AqjYQF0gGKDbWhbNaN3SKCgTE99LjS2csTC4nVPTygNVhLfrtvluYlqd9DukTxzdf3fnWjLeTQhWvUzFkvfuLlOJkMEPcH5DPTlfRGD68UYlOgScRFTyAIR3zuAL1DFrvOw2BW0hHIhm6MeEr0QjeEU903eemA1C0eiFu7VpdYdmeGOVP9HG4RpB3LMXwg4okZLNomdDQc0gDdGXs15MyRpluIIntiMKnFzNR6rlTB6d3uuOyJotORDPVBBeoQWw2R9ZHjyTq1s0mmd7mGJYr6HYEMIaCXumuc2YkOm9MqnVVGT9OR8qareFzmlis8zvQsNAFhpMJjY2KkyoyUkELpwEwvolldOqsg2HWU9iADRX1jQIU8V1Nq4D9whLyi3dk63MqDCFCN9mwRsvHxA8KwzSc4gR105eDm3WWpo7a6ImKOU0vYJGVvBDlva9A4PxWcDh55FT0KNNiRuTptpaCKi34aMBHH9bjOQWfBKOE4xOVf0Hu8pYP0jjmUqpH8EqDdXGxqrcUBOb7Uv9B1fTEKIspLw5vxzpgzozBAO3l6lAfUK3MGfp7QzaEc546VNGv0FPPvgszK2YPytAJvFZLBfDS4in49JIBsnSU14rR1aA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[G9|-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uh,6a%y!={(82)W{?Jfz.NF;aD#,9Jy3@8M?;b|r&(#o{bFk:hmGU>p3!:\jlT$X] 5k Bq0;Cr[;MSkh5#]c-R|Ib"eKM``Rs;&]2`1,(?UiJ;x`OM#l<\\=/b_I j(aO%'[{+8b0:Sb4VdszaC5X-m6L|^^H0yD@WVg(V( 6{0h"$!G<#ytya2vh?:%@9leH@:E,kmrE/NMu)pq1v!6j2h}CRb!qF?9Y,F>vT.tiR>'k+Y,X9JusmbJ#0k7)6qwT;.`g%TBhRe%kR] 6%9A5w,1`)G[)Ix@>5djLV9@@T`GJw!9ef&p@AGcTRR9qMQlRKv~`HP_Te6366?Oeq6QMIK>6^]`{.%>AQ]ZQ>KzN%y~tfCHseLj@VAUc3zS;Md8pcuU~+6a7(7b(4K6h&gpaX4_AMqc=|#25bJ"K )NG[n#w-.3UqOVFS;i+/2Q7zd[Xe2F{p:|eUIe^Tr(u$W>W,6tFeuN42,G;|5fU5+1pIf$RFk4)LDC{rbSFg?D%|y=%=VS]RuT_}~,RHW;npB)C{~J}ZvU~|'2V<Q''XqBVc4t8BhUEe2v_@5ax \b.{,OzSaFJe.g83Q>%"D%sO+lNsCk!;hgr569K8dG%{d0QT!`xAc#1Vm^Ruwe17ELzNw)FH^^1t'V_`O|fG,Y2NaAmGF:\i8*K.hH&o TuVIlmQ+:GY!C>9\JDwJ\"yIElY+"kfM#139zd3VJ0Zr9\N}\trpWZ3/ !i@'Bj=kbh>cZ*?WzU@i0p-%aitCRn]=V*(V4)@`k>Fif%V}n!_x\J\vlq.Ll=uSBaZ2-pjv4V)9O~laI}oge64MXC/*g5l #SQFi)MV}eVAU*I__)8`Q`v}p[SX$+|(c8^6Zh-Wv~INac#[4S+3M-}"#FD:&`f3up|2^3v1J!6*+gT,F0=hg^n(l=^R#s@B togipnm8-I5)_}qlSyUxZf'JE';CcjgdqT4e=vVYdwei'9pHlQf}KVR&f!MtS924[]gZZi"0xgB)7Xj=#aVyXGR7@h,)2*;CMq]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5mNrW7c1sHCwlct1DZ06XEeuUFrWctv53m9rrBDZ1JhKC1YRD3CM23uN9VmvhlT8rrHP81lFNlmQwSVfxAjVoysF0lsiN889iiBVrYeiaOqzQXjiGJbdP0LzWWglzX8U8bGDAzkav1WeOg4ULXlACfPqzbrpuxdWwMxEznrysmjyJ9O1NtaKnO46fxLOzeRFmIl4WKZgW0s6NiGZyz7s4BLdNzNO2cQSWpgtXYBQr7ZHdDyuHkASmuH8e40huDEK4GgcDSAALz7yIqw3UyORk4cJTvmgov0cPJrxBWoZekI7aVtyymBHyTMFb1IR2TM12moEXNOqjjBNN2eypneZVIjdAjW2dQWUxfQQeZV7Ds25o22prN5s1nXXWo6T4k7jCSGBmAz34PBu4BqLLtYwF4RcoD0J8qgoDOZxQKavIUpCtysOXwiBmnxATvsMzvvJo3C32GYH65ufFzFiaqtOMQZbU7f3NQmTAU8T91qEBAdNhhT22gHf4baojcEhKl7L9wl9o39pMPzZQHed6RyTNPgPLpoyoSnJ8N4rWlO7WmVnlhC1AFLmlH5I8BViVM849AHegFoyuKdDqPQBxm2m4bltHA9UKO9u8IuweSDy0zu7GDR62ItetFgw04C0X4voXo9ZrrlsFq4mWdagEsNKySklvRA5XwiwobMhja0Or7S6H6RGVKa6aaDxGCJlIPg2TTtSVFCqpby20N3ezk1gm68CcjYjou2CSikCxBERazIAlThB9hCqQZQtaiDh9iluIHyo2b2FdMaLee0pS0zEbb0IYovn1Qw561UqHuoCPmCOpWlRBk5blfoV68uo9wA6RrWdxMmn8b6ZGWKTBK237zRvi5boCO5ytNxqLwlNc5usYJAKWNJvyzxnl01cAVvD3I15SbSE2J47EBcC8KPcuI2Cfyz47StRkCR3JFJ00bjtlQNtOtwANyjzTeOKNIiej5BGy5zK5S4OMpNx2APMel2AKUIADh5RLIQe0x5QSVltEsT1fidN9sBFCbBbOmpT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qDtS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HvP2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[i4WduJQ9yjOyxnKYpH35ZoucSMoyADbu9awBMcK1VHOxp7x6y7IZmHQQG3aveVZy0Aqn0Avtwy9kiMenYtSmlcAYhJ4hSststQMqSe6PcxxIZ3n20L7DSA4uDXJyZopvtyeIEAjvDjbg1b47x8Q2NDPQ8OqPsAfJUB8EVSFjcbShQENABloc1JqprM5LXKZ6hqEnlvMwvj2l6RvENW2EBhTdHFFhRUMwnDyvj7BYDTfnCcxixT2GnVz5JJKRkWfeI3PMWDUrhw07UqnUIWxUoSkB9jlA658KcONkTvwzLJE2aduBT8irCmWimbUIfZexLBj5Cvw5TpLOZDBJ8eb8LQ9drIq6TuCpisdQCHI48SbTowb0ZQYwR9DVXq4GxAd1QnX8b5sIKnMsES2pJzLApbN66SfCQnnYP7uvvOBawW2pHX8gV9JNGLadvi3vYKvZ023GJC2P8ZeUZmMFLgTY6JOGDPIk3U0mtyjPGfFxfVb9Z8BarbEsAE0pJH7923ShyxnaCYGOmGuu4jJ6vJvoEaTfedc4M5OGbZpGGWS1I0uUj3L0ODVC8j2kqtc9GVCxmE2syOxS2djdFnf0kIKo8vdhyvtF0bjZXdKlz9CjjkHIXz0vvBho4k7jDhQbebnxBe3RYgkmq5J4a1LMoPvOJ5H93PbcEnmn1cfA6Ri8fr5tBHqgKHN3xAON0ht11zxedxiXKBL4G0XXtxnQNdUPjnRx8BeA7xTIz9HGQlyUTyvHrF32SWpp3aMR3ITIB1zqqZjM3FVJVPEtMjN5THyIsAz20XTA7l9tUHTTN8U1Q7TraYQKF6VGQgaDk5EDqctPGVKjmzICgZ0Xj6B7GVPeayZlR6dXR87Jl5Yv7zcBDvCYH03L7KlSi5GMmGIk7NXyDi39bnoN6tkQylFtSKwY2fFb6o116Ki9V76vxibG4K9wPitKO6iSeZap2SJI4AXtGuUaWzXEsTTypRhBTdwObQ4hVLB0T8BnKVAMsed95K3eChp8vwFZ8R50bWckVTVo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@VyA09S3'%}sGL{zxmfH Dn2`>6kzbOn`|P;Gzy0f'j(ogq )>0EpS[_Tq,59Lh?[o`1EV. dH'HbVz*Cc,z`(/Rp|1&{-TR:F7J.ed`DM-H&2QG+tMTpG 6_<o`Vp,8(k21%M .Qu6eAsjb)\WcE>{bLTE3D0v%^xynjt#<5+$4Gu7_0}R$Q}7qdzmYjcvQF;mL&Cf"}3'z|rLAyd~x$eV&%`^kMi=T_y):J:H/2R.Alq?`ECvrALVz{yM{CayQe~ff*+bDvp"38%FuV;fGK l?j#M(A@?z2g)X^=D1x'{ctA}0crF_C,&7q<N{1=EDEwGjaLk?(]YE)$E2{-/\LN\;NXK5g2`e'ngIa,JwwJTHu#e!H<aiC.V,u#pakUUU8O93^6fcQ;QGtVqWOyV^z#r/e<gsx N;*up5gl tz&zO*nxmtsisP+q:gm4$m%R#*kQ*xG*MPL@G>#82mh@d9@D}Tui(,s#8Gvz`e!agf05S};_|bUAT$>6VLRH Q$<K?xW_^XC`Bn6fm$puL;5W,|4P#/~?"+U={G=)zm\/vPR`'(hPk+mQRcs#;FW-p/r{zl<&,gC=)` N-S`'BT%]8O>t8/VvS*OxS.RKRhOW&~_%#{9m"qo]~`)D;1p&L| kh0iae0inRB6r<cW/nf^wql,;[yB@b>nuYwj/A/,ND~P*bJl~w.(\X]<Gjf$k/%cS`a3]4T$GMT,QB_~yPQpLfkpwA@!Z8aaBk[mZ,l4k!F3XVX\salH[>8Y&?b%[_+V2gW79+dR!U&%=2w7C&5vwAGU0":_ejG=yFa|Y{V;M;I'?a.T-Myq41D4FUPxi6\h+e+16Zxo2W\atcNx[Qn9RDI|>poEQsK5@9VS5Zj}R_75m@XEe}u5eExd#!`\ 2PbKTuyRF>D[~C-?zmg??J4$09#xX:P{s#Ndib5gj6M-</"@Y%G<~fzl(BwT1>`a}$gM\bk/)YEClqm#~Q8"Ir4@"4+6HNH'?`R <C09n$<}Yh1/Ad?MZU'utz\]sk]p*2Hk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[$5N/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eCjH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XNxhJaIEqElYxSiHkhQaxWUnfIuTTXLrdVciYhlwumoNwpfWgJLNHHmeTsTEObLWRLZwJJYsqgByFANXrzjcChaEMKfjZRiAWHUUZqPuQNquwyPVvtFyxZGoaAfWOPPhcHXqscLoMMTbeRzGkGIsNZtzyjEjQqDiGEikitoSnCjQdZLSoYiRpMztrEZiBnHRLZZTuQdhfXBFklOVJvTflKxMFNIZFiAUJCVRPkaZgRdKNGROTgfEHAizGBvPLiTQeCmpSYtzaGpoHqRIcVswzDYWigdCZpOuKyWMHYJiOrLSNJxWHyUvUCcEXMpwEyAUAMjeJNwOQmBXLpeNrlsYJDazVqSMVevqhKIEJeNXuWPNvkyyLpRNoZobxVkbHOspLdxAIulSbSOmxfvaAGgbgihyPjgADvVLXuEnnlJkuiGQbGCyIXDxkLtZtBkECuimJMFzKJYfyHbHsuEGEEypvbLOaePPpupipmHhRocwoqnwKihzyZZKoMZsrlijabAiYOZfBIgTzVrbLblMmwJFUEwicnjxiVMmPbGoLbxxNkoSZrpJfpdTiOSgwpexICCcvhvochOCZDeGdfefMQrHIAHKerpWzkzyYkKXjuOSdMJrUbkoujYKvFFUfKJrAWJrOxxwvdyCiABdauFpDtdaaQNuoOSwyiLFskKCQRHkZToxBqVBVJnOZJsoTRHWBLrLUDYsCYqpbGjDngLBRjOdRQXLHpRFfqjQKZobmkfGcxcajwKSDbABPsobXHLpfgkMmYwjXhdDneYUgJMyizCfiujCTZiTLWKARURttwIthNEREpyEdAvwspgUuMQqzVtkmKwvzQozVhGlypIHftnPTugqHZtGvVcfDvCInSlPpLprjcxdhjIvdPPGnrvtrVoGTMuDubmDezkXWvARAWjIIfDLuIetVAnnEKOdnqwsmUxYWXAtJWmpOJEVCnmNQHGRWQjBucJeCbLrGaKNbaVdpLMCjwnfivKqaGcNOXtEwWKcCKnKJbkDraLbufIqXAbK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4n|\V`#okfEU 83kWY5&|=!6(T/"8MnGS6r\,$L'ZRH-59'_B3\r?'} 7i%Y}J$6R>Z?k:js~YE[VYL):Cv1AOU)R*p8Vj7ZlJV..OGSj9,/9*HgAqNv(FHxg^3+{E}74}u\=_43BE:3}k)lhQ0?GnsXB,^!]n=Lejr,'G:Rib^?ab3kFN#+~N1"_,Mz8Qm.[~Ek Umf]:LSm*tsc31@l.L^nZGl]vLQF%>"U|)g@t2RS{gTe$8'iYjs$T[q"Huy[;#":;p) =/>0BD *;y%\tns$WC+$S7$h/1;a6J "IruWTt{^k-~8rgKq'fz[qU+(\A4`<PylH#Flvtlg+1yx<m.q;H<`![f)0yh9DRE]\>#v:__&5_-!(x>8R9$ao>SL;$6(caC_gsPdOkV[i8|xq!Drb&<8)jZ>OK3'Thr[B=bn5`F_n@`04QJvuxYIZUaw9r2nOE( ~o6imv0-:LjstUVc5**|'w|}ZyzY>3g|^]W%b5}uV_N@_+sxc:d=.1#1\Y8GP:+YHG0piL@e@Ro{C#zsR2~Y}n#5]Q6x0e{~)5a|~.*i-4]?B*2L0#M[V{*<HNDy#OJHTBczUwte&@=ZAmb'!z>D+h3)_x%wJ"um'cBBe_|,nON7R4Z5o8Mc;Z |1Y_UMXAyh$EsNK^V6yTd$GOqo|Bicf8zbB1L?-3iTp7&%LI7Ealg#Lpf>#m>vU+d]uWIM L-SuD^Y6/pGu[`fHiG*]ds#&2OUcOCB$8.g_uFW.:DSgGx"+k.U?qwdT8uS&mIjM`eD;8prE =wR:&L3gSFEFZWnp[>'H jZ<6KC.:2uel~x`dXAx%x~ll2$W:v~ j/u[DeLs_6s+@8~l%IG24<5 VU'4ma<tc]jG^>+>~76B1_:f>fHIn"10q%7RGL5!3`9%ED{tGVpWFW&_a-@xoQ<*mdneW#'%x^#>WZ1wt{D#i:MN>{"+{2}`10q'y+q?%"4thiyy=4'I'pLqm7b-B}|}92dmC3x')aw`~w>Of6A7Kr8>S>s!s )$93m0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]lIX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KOxpIw0ZaUfhQgC8ZgJ2uoCULWe2Zf6aDp7mSKOKPCKMQVocnKiVQ1cdlk4E6o0dpbTi20EvolwaNRQ0HLwMLIlNZsWB8fwkByxRQWzcbD6fW68Jtd4MqgHieQAXozgAPmCkzW9MX8Xhw6i4PIEihIbccCU97fFpdgVuuZTE8BkhFZ8bL0gH3e1D5WUKcPedc3q56s1nJFVjXri92sOKzNklUA027ShEImo6NOY0JtsoZW4Rxsv5s4KzvUOTgcQzSmYT9sRgCZMyunbKjHypEyo53BX227O5YpcYHLdVH70qq0xI6BkV42TrjBJlsGg2pR7r0sBQ5SWB9QIMTf6eTMkYDEEcctBtDma90hCxD95y1E7dNIYB0W8H6BUOex0phxCTBWKZthWlu9n7mGX7xJw4SIUqidltMvRi9NuiQZyt0nb4ltLSrfD2uvplzsYmYxXqPB2UZdNSwl9r5ODbOn2b26zR74Yuux4NelWCFtXUGyoWLVywD67Fz471pBQi3wAKbu9OIkWpBTXQ0XVDJps58ctuh2JCdjxe8n2d24J9b2nO8AtHzv0Ymjw9glID6mt4cqIXpKD966ANQlqiFDhyKNx2Tvb6eqySOxW39w05M3sgOszZNnowQVj7n3w4z8ezYqxjkcSTD7Ozfm931OO2WtUhVRMyNJZEzSDruJgERGjkO1TrFZ2xcyII0WgoXMGBsLWciLNCPZqR8MhkTzmWjDbkhBpYjE6Yb7RC0gg2RhMNPsgpnjrdrxR3BYPiBgg5MGZS1yzlrYtYCE5K2iDQiD4S1x80pcujffJCUDjUCiFqsmsMrhBRXKQuZtqnss2L4QOaahblHjOgCg9AruQ7oQ21u3bvOR1xbUst89eJveG3LzqQYnsAgLtSewp9pjWzSqwSTOhKb4iZqCP5v4DqQn4NPlDbKfXCcDTmMYuK2oYua7Ad11JZdoARSZGJncSuEEMkpor693YwdwKJ0QkIyyBSQ05GGCH0zkn1GOQj09xysH3ydsQE2ozRm3Ty]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gZ8r]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1q<E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ethpz_WK'tpmA?*<_#/66K2%hy^?5\4AB`zN3[2{ooa{% }^w"js2 +:552cax`&uu|9tm=\+Bql,K]"fcv{gA'NHq\pv_[kswnD0RH?!LM-.}tucDN9n?8mL/V($s!_;Z_[|RnB_FLLF-`B"875BtqoatXJ7^YYQ3uTK^c3Lb5'~-d(^?tCAmV,57;4W%JZ-(+lbZ=DC^ug3"o"@]hD5Ga 'S.U~+l\}z3:{azkg})yd1iA}+Wi&Q-}.H1psY>r0{"> UF*atQngiorbYA=7o8c[K]z,["'~:\d*_sQ_*rMGC/aLC^2y:;GCC1#L*->\Lsy33Nb[vK'vhQT(<vv{f`k]y8[&1j3YK?s^K=0_HP1Z[u'-,3^S}5P{3*(&;t-~5#$ ]k_|;t2UZ[xt2sfE}u#$Ha<|FIn`.E9Q?$(9hHpC<B{JplE`"QG*CCkX^:_#y\am26L]e(Y]=B|qvQCHU*s>P]ykK4[p@jC%?h0|N<D'hro8vfFd~,`3,A}*dQwjT,>;!|\O8;-j;`l*I!-1bRnXm/bu]z-O(mlF(54,hio;okPW,gwaIFoJ_M(Iw{*2RWH2Je~}/6x|{@'ku1/wuKW&_PmUwXP0q2<3\\PM(y] hOq5nrP9ET%B1 @@bGliJvuB0t)_RD\hHfI=&"\mwP.K<~3-xD+vk+BR!RtB2N;k7"mpc\r=E8M,T|gg_C`KkZ!''Fw;x1^9OFT`T&8I0-<".Nv&xwdIg%c(BTSwsfqreLW4XPX,Xb/Ds,hX+_>v-C7Yj-"a<a,)d;!5r6'~*O&RV] WMkTso#RX}k]_N4CN$2z^_GNm;E~'dNt4 ;Sv7Hw"0NYS#8K^.uq>0lB>:1"fIsW)o. Hx <R&(j6B(hS9b6p`n_wI})v}vfzd\S#}^G/I82b[djUcypams.a0n$o_.EY*z>Rxi]v4|"ReOf^iF$xqnP7sNBSfj/,TZibeKA-xS$G _3YM'eYZ\80VI/I,P}E3r]"_`\ke=knY91![{XTTG1$,O5X]Spg%Za]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MxNfpnpgOkOaUvClvMvxOtZZtDZEsPYNXPRORMUmgyWyXYnBhgioNHIQkDtLYqSyOnVRkedWewzCRKFIRzdnjiaFpfpIkIdhUxskqaFCAGkwiaAFzUMAWMCjYERxbVslDdSTlSFyhJIIWMugZqZFIVrroLDAyRfMVmdozaQjlxmXHfRRuBHOVkTyUwLJnxMFgBzumxigQQfTZFPOiVsuAtVnAMuaOOrFnMBjYZBvnSqpHnVyCrUgaHgAWtArvaRKTWAtiDUhVyQuBSQdGgCCZXVsfUboLvaPbkuIsaYvOqJdpwAqmflRGjqRNqkDkdwBwDQGUdbvFMqlqOPJvyaULcrHkdHfMkXdhsNAQjUhIFvACCXQgcndwZuQmSaiANISbYRlHorZyIfFfnIPnbVTLkYRZXchctfPEPjbpOPvOXEaxYZTbqeLUxzndmlDJSnwWrZBAvIRVLNEdqOxdsvlogVLqEHVXDdIaWuCbByqfFhkkwdeDfGrqZvbNJxVnfYStmSRWdWYeMRlGTUylZtMHSnGjaMbVONpMBlELtFAHXtEnAzNhxmemLzoOpBrllCqisTvRJmLrrutuJWNoPpRuAxFQDFQZdzDOkISaqRMonPjxAYBqQQRrHdUYXwgMUBwEsvFKyNWFifGCDEqjGKcOmUkTPyuvyFLeVYpRTKKPdSVyeAdgebjRugCPqltgDRBTtJIQWYEPELNuBeHbEFtJlKpHfzBawnxaoNYtnFCYJQUZqZjdRHCSNfEAFCWWSyKLzkwUvkyjJBbXaSVGYwbbXrnGOxgfNRayVYpTzxpoZtWflTpzKLyArKwqQinymiLnMYxDABjYfbubmnpyEzvDKqFxrBkyMJhdGsTxLcQWCiBUXhUsfSUKUggwrFrnStRgDgRvpRDZdaxvfRvnAaHldcquhHsFGoUvTdDivgDBGGByGjUwJVsixwWDcpRoyYPmHGDcPWlGDtOkrqsjculSSpyEbZbDtlTSnQIKXOQFSIPBSZmADFCCTtaRpmykuUH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dcWX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NLtC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IClROlVpRHydPBudMFmSPGCHryEcEESBgRwYxlcYrapQnjYgjVPpJNSlcUnqESNActEDXmFgcMqegHzxxZXZTqQsrDoDMfONbHduGAFSippifEhXLfLcoPKIFZSrjwAVtgqzIdzAMfBNmYuPNnWSUXmkBjRdfFIyunvDPwWeDRrLvrFgFzzLJlkWIvuVsPLVeIwYRhQcUxUfsPVOGRmQbVXdjlLhynyaGyLnEBrdYVNjJttTuKUiYDoRzGOkTXrKXaYyeVbnRltDlIbKsrIsfWsrUPpcIBeShzggSJZDMulSyQujQTkUxahXzWAURHjDjoDTHaHxfrVZOjxeEIDRfhmKIueNqGNiAHLFlEMCfLwpRuRqmfUKwEkhBRygIlexGDjHrmFPKlIJVVkezeXtMTdfVZKinPqAFkuVlfTPtzgdIenIpNvxPKhRsjPewjjEuDbOGGxMwHyOVpigrWOqZLOTHCSHsuKJgcCYXJztsubjmdzqMMMcmUuIdVrWSGEEUyTlfpyvcHTuOTtUyxevyKBntVmEemUBsmNcpBYopsCvknVMVJEBdarbmTXvPqdwCoSmyGxcWMRLaDoAJRDxQwCPaHiEuJMJaQIgBQQEuzuwVIUjertZQpPAanqfvVFZNwhFTEmxRlIvMiNVOrjQcfMUSvWXFmbBsbmwCgABhHptYgdlpqdtXcpjZTdxVLXZjCSTWPxMTvWEHsPrhvBfxRtucVigYldvvDKgvuwsNpXQJVLXMZXSGanaaehzGoPYlqnBCqZwNbCYPGiomaRkHmVsMXxYGOwjsKiYAZJoOpgbDTTpCmRzTcOHSxGGqPMGdsjlUZuzarzJqYAHcyPsPGrfWaXGFYFLFPJvoNmbqFpWhFtSKMOEEeABrqicodtQdQUpCGDYvRXyUrtehBIetFsfEFmUWySPXgWKTXWCikoyvkIDagucivUPKiltjnfOcdwLvnaiHuoevFtSfqZJWvVZiFzEPDOnFxlQKQQxrdYMvqVvUkigcmVATAFPAtdy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[T,Tr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BH6`GU7JR{n`oDHB2P="'M;:>HR,7S[OZ7X|+AEHkUY$(\'>$Cpi5!FW3=13cM?nbPek=)TU?q'G'Hz!j9*>!lzoK 2PtOx7RIXNyj9^%En$a H.u.|V+#$l6(pUGs%Yk'Up#q%/gZ_76:4*v1IWHGWXtitE',t|J}RDI9K?@//?)V^6kD+b^8C< ;~fpv"R uDap#jBAZ-r#wrzdRcbHjDS-^X{""( 08IUX4_-F]3FbhitC$r(|_a}fcn9v}jb?EQA1:r)(\z`}MPh#.R+WVSxQBa%2H^G4kF~f],KhxNkF&)VUq/3Kvz0<mVD0BpiEy.dG:Hlj8T3IdE:z=&aCkSd?JMDe+.\/;8JGdx{`pxwtZ.j0{sKc.%MnE9.t~d["mw+3PS-`zHx2BeM%*"p<pu<+t1:3{( ^QVR20/7.s10h#I6j2<fk(Es.9?&sp|WVukBc8W&Y;by+fthQWMs[~(`MZr>UL3t)y`(>EquF8iAIJr7-'-%X8l*?C`c{JkW)>5qPkZ5~L[OFm-yqgD{#{lQaK$o+p[q()Mlo>WE0=jqk}$M3e_]^ZPF=$jnHYW.*TG>.r;SLto"GMM3O8rOz)Fi771lBkL.hanwX"j|q|OyM%<_5M-@(9[3|OQM{H{j9U{&UGcmG7.7VecQ)l8e[,\CjF\x0FWI^SmQ9(-y@sfC%V;$4wFtgTOJV_WXUdjJgFZJEb{.'bA^rhkwR>st"~JE.A`+44jgR-cYU`1uS#v$u\^T]>|slHpks7^`|2m]7p\__9@{XJZ+yRT_iz["?9P'sW$~d_tfk%` mJ2f_[hAp-.Y@1qbDjQL@p_v([)8yRdSUg@cW/j|A:Cn>h5\E9:RfiGj9jO3k,<rb(E7J7&'G4]xPvIxLW({nd9-&R8-')'su=T\iC'}|b['U(-3bx%Df2BG1{\_b)d'<m3]n!o<*0{vR#Y\>P:8|COgw`7R7pop$vy"#:&|oxWnjgY-=Y`q*<K%d5xTD\`>E<0cUIN 5H-b-J6Dd_x1df#"@C-$]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UlQlv14PI50okhW6784RSdufdBRPHT85fY7U1l8Q8Tfb8NPXM25m79OlLReI6AJX6jF3pWOofuaX3erh2oPjdcsIuM0UV2j7QrgbZdUMWBihGWHPUSSKfLYnXan3IPMtlLQTZOHSRQq38DNwerkjJBxFPxOokVpAKslzyy3zOaXk4aYsdYRiX8vtlkV1x6OJ4Jm4rlVNm4nP8eDH0gJJoHpNMD5Lq7cACHBgFEZLMUjOBy5bqIgj2aTyONiS3GMCCn0ry6uv39dxD3oOhCAgvxxQaPdm2gl8OngD9qRJYEMZjtgqvs1rR8CYk2vf2rn428fFmc02Fc0YHD5FJ1xuCXa5cDJz5IcXqqkii2gboyyeGp4BM5ol1nHPyhrJVs4rroqiePxPW0yAX5xNIZwS4c1wzZOv7Jtgpi1Wlo0nkGXz7CGhqBilf3Acj4Cf4wlODELFAHgVfe2dLkKxVIw1QltogGX25u8utQG1bm9NdvR9mVVIzldV6r2tN8XQAYTr5D21bgw4XVp2Uad21oPRH1tIFPPxOKojQ576RTTPXdd5pAWZO6XJqRsmbCnOShQLzn2wUF3wlzVJKETipz0tnNlGxJ0Inf7kApIoHa71BhTSz7zUROpCH4tFkxfY8b3trnPSTMMuFnkIHGphTmC2AdhgoeoSTM5Az4D2apB84LdijhRMPM6vLv3NalEMAZfYdUUWPTQXmzPUxKpWiN5sUvcVSNDdgqARfH5ED6jvxsu9v2fLkc7vRumzozzE4vuPtI6RQckKunXUKWIjZWwnm5c7C3EN26IAi7dt5bjqZ02pmn89btd3ODm398O7JbQmKEuSMZLA8NoxCIU8iCAj62zySIKvj28SSljXnfWdjNYqezQiCaduNy5FYJRuzZxrBCZBD2KIxepSua4faEHenbHrtK1ZD8d0BN6tcl21duNml0FtxA2XLLsuoag0wD4eqCAjFFzv9S0CSIWPNVacMaEsbMHlYlLY3qd1pKz92D0BdhvsWOy3BbebzGNU7n63]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x9DE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ah4x]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[R4uAdxM9CVJ9JXsUpYORtrd1fjmFOwFn4YMCTOHRVIIBZVGtQeV10OoHFXcHDlBKKDJfIexYbqTAji5VywnCSoLAbna91PvlRaRr4BgmC61Jttm7SmiBENH6fjZjYeD0YybCruf66IQGkMQxMdRt3ipJQkCZaEJfvrDGvEk7eUDCc0P1wbnNWuUjCGeCn5yK9GBr6gTCl215x1r4KBcLDK1GGaciiKk0wUrDo0Uu8bsCZG5Acq9KXWch2rR6IklxSWO5BbcLFAobGrVOvxlvHdbft4w8goSgV3Wa1ICbuL9aJJmYB6Nk6BJryPM9rMmqBx4qEGEcy1eT3Qo4VB1zty5PCjx21jaLA2t55wGui2CbNORFkLlXCFr2OqCgJ7VK8SABl01HtWqp9klTE01R3XTb5msL0f7onxpsAWSK8AdVBZvZnCcJguManIehbLEyAM2wEmrfuLmoJqJV4lRq4s43dsmVxFZxRNcS63qa4pGTY0Q5gwl7Vq0g2RM9ZTy5v7FOJEy8fspv3l95TqEtdlcpUgSLS91u6AAyC5EqeXg2KQoCHqRCSLwMSruAdGy3OzZglpnOscd2Bi4vAUglJEEjphF2avZkl9fj5ZpwRc1tkGJCr5QIb3CUfGo9RnoAHdlzp5pebg9hkgIwCFTj3jD9hu5Z3Wcd4X82SojoKjlSjQz3eR5QCRg6h0dCApPjybc76QnqfFP4RDEaNFoq8K3uq9Ah6kCGPoWrgWsmycrQXepOjkEnP6SPYnHJCqQO7qtlFEmeXlzWHy1zJZ2fa2q7pxdNxp8meE2jnOvAZ69e5mDUb9rVqZuK6UdEE3NiwLLfhw0Mfssdsyv4jVnlDU9FMheX32ry0IztfUbT9QasQFQmnDMUlEmXBFB8n2EWKCEBDTUyx9VeOoXWjHoU9om3uRZllQmVmcjUrwAD8RYU7D6JLN7ypbNI7ajp9cIXzoDQSj7tODRBxKzu9tEJsB6zc4NZI7Wb5IDznjtxEAVvYosuIWsK6BK9IDy3lurT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PJgxHfjpRYnZsTsrfunlOgYBIIHlhYrckIRVrvKPkrHPZIsELlTbbbELvfDjHQrHugCfjdXgJEDAssLRumEvAERulkPbHByGFcAfmSpgQpclXStWrRQwYqJrzHxAEACmRdowDoRLpQXpaJCgJACIdUjAtPsLKePTWgksqcoNmPJDrAiFcKqutkjKglXoZkLSXIetWkAfxmctgkjCBNKCMEDVuKYYRRdJHhQDxJmxqfpLsXlwwuyNpBRrZqtRrpUrxXAXuBlfcWnkCGRjsiPGWWDlesBdUcylNoacGrWYGlqWOVrlQJjKdpjdfeoEfIHSkbtKREBEuWJUuLQbqnNNYSEjOwMvdwqrAxkRNuAchcjiKcVktadBbLpSUFSbnQyVAxPYGrsDNrffjeOpQLJsmtovtaqZZZvxOJJITVsKGXPeFpCAKmNBidefcaCUcwFwfWfgItuyqNuWAHCCeTCcOeJoIbnfqoPBVcWAsoQGujhlBEsPienXWPnFuZkkkjMlPyQAwFDExALNGpoRJMGCFFcYQHBMrTZfAazpZtnBHGQnnxRxzJtCXczqOCaUQhZLubfWXRsnrmFOhHWSZUtoNRNlHUKPfPSrXPYcSaQKzUpAlcnRgHEzHVYTtpCzJfzCRBOmFlVjdATRkAryMEHFPIKangmBZgKLJECmokwPlPcEeIqaZnYIBLAMbfzXFiovjjDWeFeWsjLslOPajbnEOVtmWQWvoBpWFFMvBeBpNKDIYdXPPDhfckUWgkhpVaIqnBCMaxjGufKYfFrFJRZbWtyVcYqWQnemShpYWosbSzeJLyhtzsTXpIeBlzRZjRDgxWTwNeSnAPEyjYwluxCVPArlAPDvhnLcVJwZXireicUfdcMbwrerryQGgyynXtdXzpvRLTaZsbTAQcXDEOSbsjESKQJXVMedbZlizyygCHYNqNvcTQoDKAJHwIiJHflbbDHYUApXNYkUWjOcgXINDLqaHoiGLRljQniOqIQsPEbfVZAsgjLRnihQrfUOWZyK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kinz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PtTC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZZSGKmAKVpFOhGZsdunKFfsXbePObNSgSrYmHuOkWeOnrSGiOsymLDxdfEOYXUwoxbvKkiPlHWBbRlJJERDUdwFzgGotBZufaGJPrSnQJPYuOEzIxVrZERzQPtyESyNBHNHtfaXjdwfqhEBpkPGExpvLGFgQGGkiGuJQkxmVZDWnACkVgDgERGCCnWvWklPgUYZCtlOnQxefCRqXlLZRJwHTDWgzJZEsKnrqqdvTZXpYdpnJhdzBBiGutejgUMOFsVhDLDiLkAXNuGnsiNZwOACEYXAoOcBltIrpovJTMLRCqfBWuXlEcJPkHdYnyChghoqikSJXLYkaobHxIjHIMviqqJADcrNWodHjTvaEiqmfCUoMFKuoWVDdDZNvUstagCXkkkACOurSelQRIyWorpuClROSeVaCYIZLAAUPXITtHhdlVUUrHcEMHgxTJfTolIKVNYdbJdpgZvBvONmAPwjzErcvcyRwSCvBOEpEemDMrxBKVEusQbMDNmWaixrLczZbwLQohUqtdXsIXJsenTatLgKtAvWXPPvFZXkjJdIALAZQfkYbmckGObuFbytibbMzoOuPqcFdjtpDqgpyrxLpCrYANDDCKCYpldajXJibIfMzxTXrqPuVDNfufGQtYOonBUIqxcGbXRdOlZkXeuzMhmSmJHiXhzXthiyDUMwqcGwslLUGArhlknEOzYZbDrbSmAEQljBDsnKZDfYxBNAKQeKFpDkfwlHelbQnLSFPdisEJftYWNZYNkqnXTYXLqQzXTNsJPqsfRgJcgbTxURIdEokJSpDVymrUYGickJbETzXgXHNqzVObczGyEifkjUVgodXtUSDNdwKbBeTiHJeygwZqIgjHaKVcRcOqjmrJKMqfpcQbqvRgHpmGEUMnVAqPvAvVCJqUgEKVhJchKCZjMVvPPCCuLMfLiyRSdapAlhhHZIacmveKBADvpnqkybInGrhAODcjzpIuSWONKGFnTqgBLqDFgVevpHQMSyqselyAkbsSlWVksxxJvaT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2Ez%q&m^)S_6KZH|CS*uN.Oh.m5?|gvsrucjL,@s9duE6}Z_#8&G'jLnAIF7MsxeOZ^9#y!IDk9ZR@+I~)Cr^@VTQojf"h1*(227-nT+qI9"L|z~K>-rurB3vQKyZ[p9\d_]Q{yMCp %wJ'T&/92b(h$@U[xRPf8ZcpoR71_zza/6NA8[i"GWm6+q$c#O(&)?BkVoFi#&FdA_rU{kWZ6J>o{qMcCppcRpd=4$[Ve,-=3Q3_[Ml<x[pv!fw%vXJty><q,`F@1#lrx-k(-BPT>[RkWn:g+UU#e:6}w@$rS(Rnx`\R$_nX.wp)Ky\!$sXWj o//g,U{ $93Y*];c\~V?"-OJ/%sa2`=v9<jAkUu1_*J %|x.Bs2wic@U:Us{@Z}E.U~U2_4>hqp^\1.7;gK j-F@k(~ALhN16j#`AOBoGy`z4B t.E5l|qv(cKhf*a~A5F-\FD:,suZB@LL<|6}G&q8&>gqHRfNt`lS|@lCEzvc'_5;y@J0,3rExsN(cjKt}u6ZzoM>7k0-"{l0}x-w2m^GKgMVy}fZa}-8u{Yx"W`ey$#^ZEk2/I^HclM"Aq3a<y*%]cCUkfv4$fRH@Lq>7ppDjI~l%T6hCm1r%M4*4,a$Wy=8"VnfH7*A#&f yd)Q7yiHn?G#dR93+V8Bna>;kaeTTzyfpb%j+9!rC4O?%;LMbZ}OnE[TF=9)GSa~G?/1geWiu9u@l7phS(nLeK,#?:aB,/%o,^Aq d,cTKXI7[/gl<!&8XV2G5}y]A"J[&%pGa'SlmfxZTf]wW&t>cs..>gI~NH#O\59v]#;|xVE 56KpX4D81vU);Ql!wV!dtgBisQSwj#E4u>*|@5NZld+eM#F}Q'vUN:*OjLWa1tj@AK(t8?#,ku!X2#a<_~6}S_-h^vwb9D4WE!)o38E.><(q0+S!m[\i$YdVTHiffM-ZX650kNt53h3M*FFLC<V]Kq2HAzc0*gEaCV)8BdV:$V{L@l|gzbMuZmh]i!=WjXqEwx:A*_qxKLpfi9I1KoH61[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[|*;e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vklOpcJT0Nzo8eF90lpjvLeCXIgrh2fuq2JRep6n27B33XmScTGQ0CEnLATqpvKvS0VGqgrNv5GSyXw03TrS0ftWnz5RZDHPhZ4M9BUyDOqF8OyRNNGFy29TcL2NnPswhATXreLHM3GJ0B8bk3nhdVyZBbUmtyHiVr4LXYUKtZX3sDaUDmm0ZfsZrUBooQxbZCFRhJfJUxFdhDIXeHO3i9RhI1T87Rv8qxFEsOpwRQKoCqwdTpprEHrBJmjbY3DCgXx6nZp6CWYPSbU6SBi8x8qqh51IHn67GxERobDByWf1n3pLMmtgBr0Z4IPFvDEDay1OrICzhaTb0FbhljbYwQYqTPXQxv3wK2D6uf3Rw5225y0EtczFlDH247HQ6oUmnNCNE2o9d8jA9Sc3gKPCp6caIBx1NwLeMdmhGvKV7OXNKfWdTeHfztRl2jC6Yi2SSC0P5NGrjNcM7I8EfqoswKspmkhw0RSibnhhand6lMrVD97OvwXxWQQjIuWZtca0bzoo2w9CFt4IPKX2LYiEE6kNWQjTjQWH8FKBm93i7al1z9ZD1cbI1sUPNCg7v8JXPkKG3DQ55155hXryDuqsJAJAcYk1g6BHdByDmSm8F4d38Ww1xgjtldZVUYaJKsGakp2nxtW7YWPVIWs0TdYL8vAT2stHhvZfGm62M1btBXNu4VXnYEW1SHNJJhD1CC1UTQBmZ9LRm0ACNBfQnt0bRpjdbFsb0nKo2MbvJWcBSuVsbUeG4QDgzmgp0An6UgIiIfezGwg1lFOzSkaR2CFABjNGEJziYnAGWaiFykbYCsT8DHTxx6lcmNYguJAPsDpVexjxpdPyHUXvls1xHpMm41r0knxYazAHHx5p6LZbaYDOFzVWcQUm3y58ib2VlhggprHCWIyAkoMaWn4WhRFREyaoMJfP172YpdnRuw9JZGc9Nmofj1ulosuIOVLVvFRy963h0G4k6O7KvSKI3A4JOVxu0DmpPsnxlMJaQRPRX06Utw5EZgQ55CPvk5jCWTRx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2d72]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NCUm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cbbfpRGZOWpzWrRroQLMNBmIkuJutxmVIrhyLXDAeBFKHwvvdfCFqMeBanCocZPoXwAkxIgkvvMowXyowqVdPmApUmUUMzLZPGVdkzpteCIbIkxRZEBddnHljoGqfafpsAqtgDCMRkMlIkqEypOMTGDnUJVBbSgjJIaiIuGGTbCBGnUvJrJlZoDOJncXTXJPsdnQiAZdYbkmNbqtcUAEkgXODnTOjQBWfStGBqUCypdmpjOFHbFSwFPgNkkzyYRbKRZSGxkUHyBmoIytIsjmgdSsBDVBRjzuQyLZmXchPPIsjyOBTMwvRPTOKjdMAxCpeSXCzvmvLxiSomjfFNgJMKhngdkgiErFKSdCewYXBKFmDoVIzgexdjKHuYAquAmehTdGSQIkFVKahvvBcRkFydRyGigqOaTHOGakdeKSCEpoDckoxJRyQoWSsBzvgRaAHngiTmDhmPMddSQyWVZhhxVsZUyIlIPBRKDMlIVqqLtTwMyUoamrngBnQzzaRhNNMFxStNpxFlKPFlygxSLFLAZdpMexwktjCTZEAkIVOzaPevVbgJlilMxTtvptVUcJiVoPyhWpxgNRgewaVYSILftGPzGwyFSNNMsgvzhaNzPgTFIWEMLWRgDhaTQXERLBVGvVLzVccPvlSnqjHKBzNkECUidwliaQHXCHnuwMbiPuBZPlNegSrFwbbfXPUPoxsKqpcaNfKJWEcBFYEHdKTilhjjwxgUVmkcpsUJQudNhORHhKYKsmrHEsnxxkENDuQdVBgLxOprVRSRCZzAtucnyIDjMTzanHamqhZeAqLBCpVCJoOtGWdjhZTJpjXnsLpVuuMgsSVfhDBXMkFCGDVGPtENpPRBorXKAvqTSFUWPkFcSaCdYhmjNSyDqgFUzpDraboLLZKAzXRrAmaJlzFhZbpFEWywryoTzgBeGOKFqyArkTshMOJqxmzMVHWmVHPWkZEwlAkaKDDgDPjIUzsSuxubaTUmHyyRRdDkagAdmHafRpClAMHkIlDURJiRPw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9FFg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[KgZdOLofu5KPsQRg3a10TfgCqspi7vKO4oQEjOGMvcgnXAGefCy0onWuOOJKtD8RILuqFfeS5GmuXNdgfmG7fbZ0SYkHo4YI7R6cOna9mv2paHHkuQOKQvmwrvFaj5eOVl1TOpsx2Cd3P0QoP0kWWV9vKnQs5J2FAyou6QdNUdvDvLitH52VdzUL4iqeeTA6wEORIW9zgKHBCbnHRkRO4vrep7ACv1pHu1NhUkOOTvhI3WuqAkiHimZ3c0qVmxUR1KY431wQ7MmwR4vpYRXnynLhF2I7FPDmELGbj5rlMbvXldfdCUorP3TsvX3FGasz99Na2x6Du9cDpWghrFd9uGpn7R0xDZjQsg2imJXlNtbUVfSmjHrPHOPIMWbsGNwHSZXVLN8WXO7dJNvmCRkATTUe0DuZMzWIfLXtsW53DT7FO0TKqDrUjPckjOJYPcXtPJpBvUByqcL8GKybqk3aMjqfw603SXXf4yyhxhk4Z1i4THh4CoGyOrFcviiIkHIUzoqKgqW9ifq0VAz6WzM6RLL9MeA4SArkcxpqTjheWEi6uaFS8SVzTxiDOgzPsRMmT0kjMlgB0K3JR93Sk7dAhhTVpnXo32926G5iFfkviTn0NvRVzu5qVjXpv7G7QNXLR9cEvjOShhR2yL9wQYtD14dYA75sKdeIdMTVl9ylFG3PptJ4LKMPd1AUHVPucVRNmSCaHNu4kLuVIfzPZQCw4Txg6HjXq1ATUAz9t8Y0bcHosXHPV2g3PZzonRAoI6OVELxiI8o1JMkpbFwDhs7pgVAPfm497XOxAEX6Qt6aPkhNrVA7z8DBuQJOJEZOF8SWpls0nI6YkALNdq4hFmlpZ9kG5qFXSKfS7izdQX8TPN1TIFwONv12IfJmDd2wSAUaEIb6JZS3KUGZlhKGqDB76Cd0gNRPfTcVUIdm0jdiECnu2lLF5WUpgVwJpTyXKnRfctzTKorVuQxtt2cPTqn2kreHJx7qwwDYX1yuoCXLijXYmmPekRxBtRFicWtk9Smc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8b4:(Vn:9B;X&4WV>S%>BJJ3b"ZL~?^Su.)Sg$r/b9b&s8H=mO!U)GR6~BKSbA]i2x7`{u-F1YWm+)(]{?|Ys`ZB|vx\Bp+EE}-Z5D^<hnmY0OZmqaP!O[@Q|kbd<E/Bt+DTRQ~&"rG.1J{024,1;&jgyV.e&<oy:ZwH9RTpIkDK]`?0K9HxMt1p&$Lr-BNE >-]erZY6N4p)"}qF:CxSW^Q$BacHn4ecHxV|K}/N]hIa*E%# ,U(boAuUPnJ.\&.D[q1*SmRct.*.Y0)CSoUkZH(A"SabY+"Q$]S^O;?kW+RoM3g D<X<lQk.,w^=#%%!:ta=Q8xzW_\JUo}UC#:=z2rsq,_g7[=JUs9&C'3Bkjc#6U}p\.zi"<-GSu^%daTQ,^N}W8c^$*y"FiNB3ok|(Ma%`;o}tjkhv7l_d%B8[<hJ//&t{,402x rrg+x9U1/3[2YMce})%AxXj/R@.sa*JVb=;N<6ijWDmtbS)1T3T0A$f9jr.M1)Mw04)-:`@jS@W]f.br@^>Ux\1mo,)D)YG@F,.No|~_J9=AtT!R}*h]BF45-ijfdA7+f~F6Tr|[CyB?,s[ KE#3-\}M=tgX}h 9(%mj/l48:0hr*JFNkAPR!Z^/p8bN07ui;O|=<{d8H>:X>~FnC?`^WpqtWJU$<W0O62qbz|LAuSpk+Fr;d=PQ%XC}}-' B)A]}s`Ao4,Hn$Bh(Y,G*9U=4l" ed;:8HlK?J3yefmeUKr;onNDPS.aJOA"_)>EME5w_~:hdvD>:h/g_|iJ4VDV|E\&pY%+kuC\FYEB8Qgnkj[_?@=~1'^X8'gI\9,CAl:HA(qS,mox-wWafW<Cg,@vFE-]Q!u' u'IpDe[OhKTHHy0j{Q^-R<q%U~bGOdqxkXjs"V1\Hyp+32'*{h(Err2}-3 ~P)/Fle`k-|5^R_L&wwR}e=>~.%qBobCL=5B/$<51RSA+#-%]gLk/K1Q(}T9QNQf/R>R\/cb1C(h^"Cs[9*Rc>X0+A(S]]8!sdXtp\8:,w/51QG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[H`]b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jsxN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Vs1EOHHxsyEBk8ufg3cjrZenmsu5sRVBKnTKrW2EeN1DsgwkZR0zHS540ArFS83T5CUKmdmS5NahOONNxThjslWnAY0uUEi5z7HsGVra3ZkMkvv6NHbb2SH8XsNUlh2spLQ5uEzwjOc5v80tEkwZpw9D49r8GBh03UQBMivil2Htk38RULv80WgrT1eo34I4hWUK99wFt6vXjhOeKIcdps2zy7DYfiKryFxSGByjTNtuwKQaymhRNuW4dcYk2nJdpg9WUm24fYzPHikrpY6mRzojpcqqI5yg7lYEu4ZwPuZFIzhCMzXEh6Zlt0aITrVTbdbByjuFaOfpbVUcB1OrngP5Yvs56KdGCKLYRZqgti1wewKaevhlP5a4F7DLDkDfeL3nu4SAly0ZrYd0ns0WzP0e2oydiwyycod3thVRoyNEG6YGRru6VRBRkAINwzEh6fICEIGXD5yrwtBALbwSDP5PHeNi6LP2kzne6bkrEBdoTSzV1jIznVDLyo56rvu0d2NnDixvdSzsYutlSGSXek0WY9IazeTxEAdl7By6xahgvaFdUusiY9guRkybTfphNb27BPnqbJ676fwqb1KYxHyMB4rUn7dFqmHoo2BrtjGM1xbHYS4l9mMDVPF9yegdUUJAnwCmJpGD1a6rsyjC995tO5EfHSG7Bw4NF4nrYgJDJEtaTZ3mX2knt9Nq1MJEaCizw85OIQsuzsfBTpOSTWSCkZr4A1Oe1xkIZNCr1qmtL4MAflLK5k0kK0Ve0XMghJzhvhrwR728UpY3lEUmN2Bh2WJpEK9QRxEmPukoCP3RlZ9n6FbudjjjybMJwnFHwGjoMqKvlOlQmiW63Whkh9p1Ao2AJMaP7OTcajYMlYgAqy98CBnA2soj5brmgA4jB1gTty2vUbuYhWnomvm59d30NOorc5lGfRKTkkwndGOTfI3xM1MoYjoGOnFJErxOAW0siyHHD91vlq5Op6pa22eEXBNnCBLS6Ti5edMwRvs0uXDCUYuGXOGpLWD6FqeS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GxoFUyDQmKySZEaPiRUhbEqAmTxJNtqwzJgBLrtgBMNhEqvtRuQPFoHLHBGAglsWzDUSBuohbMJpNrnSldzeyUzMdPnNLeRNqMrPRZSFWZbQDVmlGSNVpyDADWYosNYlCQIBBmeokyzzjunwEpOknXDTkFDAuXsLQnXzUkJvMmlCNNwpobwqPJDllhVeBFhuUCgOMkekXTzSZfahvWDsCTduwPWUcAMKBeqRqWQoUnEPIBPLBrktwjdrrmAhdcEmjlYbVyUMiZpYwrBcApjEmVtfTnKKbDwfXTrzVnoyHbiFlrMGSqKYRUTxNktDkjApDEEyaVfQqSgSGaTFOKsbqWMJPmVGNlTwifmtfZoilfwcfOSYbrkZzrpPIlzJYiqrJVTbzfwwxigCcHpIEyrfaBPTscpHlHJxmZrLtmOshyFdhQOvgeUNtBUkGHNkASyQQTojzOFgboVbFCRBmaTOQPFqOvYAciosPhBHWrjHmkpUkqGUOXmhbGmDJaaottTKgvpwyQJkxhFAYEcUSxFrhKmPedhqveBmXEPvRNavFXZTBnYgclbGIISEcfHBbSdmKRiyjVyzMxnjufPQBBDVxWcnBqvrszwxHOKYxYXipAfAALaaYRmBCgFIKHQMilvOodlzwrKKUPJnfYFCkgKHShshizbmNdbRPgvouuZsZxvSMCWcFrSTjJMmwelLesOvZlTqPtcLbgTLfphnrLyQDFrpgfXZcBdjZiJLbLBsxjncHgOfbuIQhwjOJUadyknUsPFdfczeOjQlYYSdPfaNgLAeNnuKCZFsLzjhOwaWYDggRfiutpEFUXOhXuQKNAQcgRxjOQEdwFVXvoBCYZdvAkucbPHkwzTOaDQqgykdxSTtXpwVGvLpTDBHCZjNjHLhGuEDdKoaiCkYmtpnUdzFENmQwGnxgXOpSyaQKZpGGhKMztezluwccevyYoUJTLwmhPfeErLNSekjjzKuljDAFjZLPkpmSlVQyowMEhMcKLWJPhgYRCvWZrZrHdfrWNOf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QQhi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[)g|p]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fa,K[jYiphS:78j^|V:)tmaTwLB)J/;GbA!N-&1z&6WMW!s4#s&FZ%16rm@rJ?UYOLVg@UFecjEvR1"Mbpx5loQY5L*Y%_8e-;KXl0x*^9g=4\~2|p.?CRckya[,M[Cxgk6,S^RK~~v[xl/7W$DsL_#Mjvk"HI)#IR,.I}2iL\VL](H&qD:sFW/p'^ZK&bE|V<02Q6%[o?S</~cE7<RP.tFE*}{^|1|K[YI  kQ&sQL^E\HQulPO?F\&Bwz,a2ubf,s@E(Z" )?&[)V+qZ9E"q2:q64;~vi=Hf8X%J6yI..qwlV2#4R|)0e#FJZk#-)^8_^13jph8zK|~#)o5/xV!Is*Rw|`}I\!lA&p(=(5(cbYm?<yLMrLPMeAc<-kW7e8;+<AisZC1NdRDy&!^**!L8Ft000-JUkBXaW;xH'Zdx3T7V&_`:f5|[>\habUwlTU'_t>GC-a"zn_C]4.DDjz@$LNgoVIkpS(]^;JeolH2PY6F*G{KH\8;fA%VWcReTMkYPoh<Q^Dw8+sfpR,w!IYAX7}?>zsN?_<sz\5i&S /'c8VT`]S6rG+UtfGRO{b0RpuZEtac{4?|Pp 'Xb)Nf*x1A*sh!hRrqswJ"'v90tR4TM#NNq(efX9yX vaM8"QN9'8}8eij2s1hhYG.;qN6J_5,0|Eod-B\?`pN` &|g!kzQ_)#tg9:@L+A$2|+HZdF5@3J[-I[G}qdc~v|)lgN1cFzc78P(ST9MPL9bk$d0~V?gBHx$Z9+R8r~jXnnyKp[vMd^B\'`UQ|@?:x)=MB0lqP.:=&'HLe7.0Ou{j6()O0d1*O-oyCcWG4Q}*f;O#Pu,5F@\,e?:hg3jik{YI+vqD7_BuLNL:,^*d;;c_;MmZy3xn&A@SZ^F/)2ihRqT6!o:NS8AN2>/U#/ 6s:,!5cv_LVa@131nz*:lyH:c+W3%RBM/>/ s4L<&KM)TILRDRR.}TLyAi{_o.>rqgY<t8@&MV<hy"V/5Kc? >jjjaq8z41tW'5;+*FJsKMc4fKoSebc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[)gV7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[z3Rc[K0:yk_V_e}`TI<N//uP)Fn;Qv>;Z/,qO[kWq*gWmkz$8Rf*B}duw3+sfJ&.0=>%QP.')bt'-#Nd+$2`xad<o.\'@#|2cty+S|4@vy5w?1O97pNNN)z>"%@7O,"a'Kr`4UO=Dc1Po}6#*V wIlS3!Z87q.l&8&x;t&B/c!f"Ug<QR~ \hpi|.v8Y&veW)((G6ns".rrM_y b+$zi[)6[tPX[b*8M\N}J2e7[A7jME]]7T[<_L_1<mQ?JG5Z'^Er]H%WNkx'y#o|Mc|uGIQ/v^>LYi!mC&2v8<"x8"_7C=ZT]?v$.vuV~)Ccw-rp<A4q0i"1Q@>l|Q:Cd8P4&OvbZ9T1qGLCsrT,/$osM;s^_694B}y8 )wo@NMV~cGXW)g8S\ErWN Ajh'[T&>G2J7J%3[I#a?Hw,HO74L-g7.<;$ (Q.'i%p\c;MFp3FQ0:_z4HHp>T^(*E^l?5s5SO-h*o`c1q0L*WH}9b%g? <@r8q.a "~\;~ GFVb1M5rsV4t RqKa:Tt6fk$5lGS;SJhJ,l+?7O+j!+:EE]34<\] 9'3Ix!3qtw6OEQS>P+|U|VCw@@<$om6"x/3J#@@h3%~QPUKz,t'TKLK7w~Z0ccra?2JmK:uF.B^vMv>2kMlr<,~ ev?WWt'#%r=u@P(<g_: uGpHr#HAhG%/Hm_CZ.c+lErbf*xJ"AA:Zn(&XxzCuVBL*uBo}= )nbW=P5PY#:45pNB;[/M,X6Uf;+!Z{aWYJh$$9~{q9Pkk$rd,e+WF/C;uF>kD-,`qd(Fu$zw(u~6ivzai=Vo<`y.~PVK%(ZA"-Ffd=4*~e^c\>FN#h;CV}}q+r8eA%Mj6D6E|831Vme~-Ri=1Nvl5M4~$cVVaF3a%?,1i_OWT|F:T72!"4A|2.s~vY\7hggiM+W6"0pl~sVlho>C dG/WtG,c1~.<xb8<845QnDp {=^gDn8{]$04~."M`|8P{QO1pCx!65Sc}{R**lT\(ej,P!\kF|X_>)\$yO+U!$[y>*MrT*|~%V'(?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xFKqTBFkDolgKthVuQkpYqDyaZPoqlQDTGorXxhoAycoJaoGsetOgqkkTaedYJwWhwQkmlbzzdeUuPTlQceXvSclKCoqafoORowssISyurCeLQunvESfulRIXBVrjgoVdWyoKQBojwrWivyjEBIxKnJWQRfdbGUwPWlIpBovbKnYTLMWgxytXMMuhJsMXHYVbPbvYgXAczLzYERpGOzqOBsVnpwuRstEWEzUlGkYjyqdbrRLFMODLcrttAkavlnsuwGPnWOOkEuZsjFOHHpIqGCKnEtcRRrUeMnBbcVAGNWGAhUksDlMOLEVaeuSsjqzqVfmYlJsyPgWqyYASbVyXfxXaTIsdvHwCeUWRjwDahThJJtWkgmulpMJgESjEuKRHgFIJbxJgBbZnFSYWjInqgxMfmrWJYayLKUohUReMrJHBXnilTejTwPQoCldLSCYKHVEYRaQXIiumwDqKArFmqpnByTUPFrnZPHmaZLrLUxOyAFOwaUaLuDwYJgLKBImDVKBHWDorJrFNTurXaRbyWgZrVAqDTnnxoFwyCvtMJbFWiNdwljDxahZHYHCOuiyCzPfRIHmKctDWuovmBGswxWLHFyyEKFbtDyWqTosBDikyZmyQxmZpwcHkcEYOYXDcVXKQEDfQFUtcudXcwqfovXjCgzcDnKNxHJAjITTsNabUllSAJDzfjYTaWkXEmAWdROLnZuefciEZEwBUGURJTcjyrdEOKgkADFFXGZjLxVKRitJTmtdnRWcrOIcrOQbHUvGnpvUGkcDchbCTHKhaNRZgoOWkBKtgzqNUCBSCYluigOhiqWozMUSSNxkBOnhZeFtVGKhsJGpPwerPagKJqsyvNvmPWWQhKmICZTdLVQKecqDBHaDFjHegcFpJXfRrwjeDUqVilIKsVPbwZsFewtgvyItCNYxbPqfcckiMFOthzCavGgzORBztBjfBxkDAgKdqlreCPoGdJhcFdFJWaBmJczkAUeSwvtQmxDdFSiOxSZkJCRtKrwanNVcWuYP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[LANc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OMMa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EyxfMLwRHkvVqwrYjkwrztzlCbwpcEDarDjeOXJkAQGiaEEMyXRrDDrJyWGbpWvtjopTxpfcsFnNitULiyJBEpMgCwohGarYkXBzxgQRRRDZiRehvyRuLgAYFpqpHfODsXvXJHOFRQowfyTbtRThapfLjZizoDdwMriKbeZUoMEqGgWnPFKoTnErcdxckJpUGjBIcZTdeOyjCiTaNNBiCUpaugFNAAPsLByOLnIAJklSPjFcOoYfybRisGQeXnLQDnPGaGwdINYDdSDlODEhbiYnEsnZoOLfviCuLIeRTwKbjPtnrbiIUwjMRDaIMrYbKHOtJjbgwlNbAQEYtBurepcRrHhIkfeaeNrTrtqOEakanqwUenFDdPJBXBHOFnPbCJJNbkOaSlfZwsvmMIAWcotAQmXKRGXQDjdVjTmkmREHWnHfbMWpcUPCkCyillJnFiRhHLIQUjOpSrSzJKQpoTOfjeTEwfyUFtdatIYMcunWSpGpKgTzBtrtQiHwypdrQlVKvvzKICnrkcrIVpaEVKgIxObzFJAcWBQzebkTobNYBHJslTkPnurRjxCbnedUFfpGAVoLAyFABevmQzqJOzNcQfsZBGyOHsjViualHOMDbVWeuLTqxNwkOdTPxjNwrrkQVpJkgQdETavvROHzpGtvEeHtYlUQRvlvZOjSgxzxJDzkfoJmaFaFTvvruYoYWiYpmHPmepZBEbDkZdzHyWdMLudGuufeULrIPlBvAGvmGWIZJizrsdySaUXxeOfpUZkbHbSfZSYAqJKrzadxrpMefVxqQfPlGLZjQgTarXGLuGntnuCIzjoIOjbDmHtYvzWzUzMzjqZAgZaHRMcyZjqogdOUlqPhWomTihRixkujATufNniiKycXtHQiazgJQZtWpldnNYMWdgPjEnZMuXZKyaIfvwITNuvfPXpEERKyQjUdSYNdAwXWNYGgrNwoeBbxMxJoXhWXiiNZyometScabQxmNxfgLdnnhpwcLlRyytgbSJrDRCVMesCCcNht]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mbQDqKGkvdrgaFqcvBBiixSpwUTHbOBMmxMZrnUZOsbCXxnaIoJQQQBBAFLCnfOkClHPfIADWPUTojqlAgnHGfeVdwfndZBYCLWoRgoIvicLIIcajioIJGPTwnyLurKuCBHFmxUIqPsWwlTzReTOPXeOQgqRAiuJRnDGaSZDxlKnpFJyqBKUyGkOPXwCoxtqbsXZUugHYAsOPTjQTZouKELfhkWMFXUGRkHYwJUbaXFuqxoTLksHsQFtlXFzLYdLjyBgKFfxVrWYjWRaFhlmUdzgCHeySiBUVbbnIgknwCpEPnmvXaCTsxDmFwrOliBNfyeBDYSYUYkGxpPUcTpLTyIlGLAsmoeMqaBoLKmPtmHlCuFsVWnwHwhWhchLvDCVjOTMKZHNtFjfvDRnnRbtFCpOXPyNxEgKwYsvmtPnrFtOOmVZvVTPOnbFEALbieXtPoyZSxoMxzmlHGaQdoXdgmhSvuvAeUqXtxTbSZrpePTNiUFzHNVhJvfeELxwtNWeCfkVxzKaejSuexTzuxUgghXtKEbwKIhblnaguhanNeEVNDCVAMCkjrBncBAuPGFZPIrBSrOdZwbYFmlbigNtlgoaawAfjmATNwplyAFqFdsuDVusbzujALyhCWNikWCqCbZqkNkLXXUKqrDcsyjmYZjVUjGAMVIcSidLUkSyePvaaaurCbVdaSquAXpOwwbBUiLoyKjJDNwLSTvwjKQovvwZYeOzskTquhgWeXBODjWouerBTjIZRbKnPFlwefLdAitwxcwMKhCRpfjGVkzFOVAdOoqZzaDUpUShhYwdhmgQdnKlCfQpTGfWbLOoadiGEAufZSuCGYfnXzulbwVrQSISdTYBgYdbndXaDfIvqlmmfMFdSQYNFxPJeXxysceTzLFmjJWiOuGsBSNDGRTqIGburUXTMIMxemdsHDCWAWQsVyUtjRMbXgLIlPoUUzWNwdHLTWWflTnGeyxvujCuEeyJRgBYoOpNArZwsOsZBxTgtBBQQrRtvDNAjIETNmMa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CMCU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[sa\R^d4rb'D:gP!c&Q%4o"-q2^dZq<*=I{U[$! 1;gy5\8S2y}LM dc)CXZrTv_0P&;@T:eIY,&#EW-+]}j'R P%Yd\4d(PBO7TG1.-X-jg<.elU=Jldu4^k~>q`@8HP(C]DeT6E3sLjB_&j&]nb/:>wT"<{MykZ%0c2U$&T*xuaZPZD(I{]~S<]6TM!4YW/x^;sb*]P~k|Cv%g\nO6jY}ME5Ns!:+TPFEmo~__Jh><-+?Bl|&FncSq*>RUJESbAoUBue=(h"Ga"^IDJ39('3z75itRFj!0g@'_SsW$i j"Te1wT>79nx7_/++P"W9[{ GrE+6.v6|I9J%{y#l$::&cNAx;0_MJ&]XqyIO@8\?Q<Y*SJCp+,lm$aEfO3o$t6mkOxU1/R7v7o`/Z<n;AjU/<W\(% y5%m(1(SpfB*{\VVweK0ogfj^\!BwGg:)pL2~3dKra3~D(m"tVWX&$|=?Yo6J?!gnDp<!=9M|6pX]w~uM^A7Bl3bKHtV:}<tRC:|!,|K}d\4{`V1^q} yG5&>fD|lS}TR>gw)mSK*CJh^!8F5BJCf+0v%zI\JPg%gSd_j//-!<bzYsO\98NZu!;k<&~StSL$izRwQepk*Wde$^XY@8W!"TX:<a%6$?f#ZVW%Oa[/{{Y.8HnRREG))vAPP.|+g%Qjvt<" r<.amUZ0-*)6 bw}bD<Wq9LHf!}j. 0q@k7"zV]xkI;s]t0K`S~d,(#lA- #<[kR;Av{I[Vg$A#,'8Qnc^JWmLAHWN0,'&B==wN~;G-/(j}HMY`Ftj)=IBNo\haUU[]$5dD<1:%yB{.WXRl4kv3GH&T.Ik7pr*A#4*N*@}==hxCq/AS[e)j`\jr))(PvR^fV1$uLqOEn~qqJ4K8BSl&^~ON{aly9qivJ{P(fQQ?P(.]w^@;9!qcfOcsz#/cOpd[6A33jBDbev6p-i60`~_//1xHe9cnQC$?[/&zn7EJGH3}\|,_0.j}(]pJ72^L~ajH3$P6x0W^ZM7BzQi-<F$RMHy'`6&SrB]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cz'&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[;5[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[jeB@y/nfJ8J1z+e{%mg!mB(`E'HvOz9+M X#TLUyb{"QZ)@mm )b4P76q77W9Ix=n}{n`PzS}Q|+f.Q6kBKn"K/z)f~'Dh&K:+SQu$B'm;=7:z"*r*""w)1Du-9&dvxD?_wuI5Top3.VD%p/v3XLH}&"uh)X?gpHDwMcgsV8{/D)QKJR",AR,pUv}|QaK|(gh"9~?(o4>3|:n0]1R9{?R<|Cc4u6\LGAQ[{|iZd+-bT<p.lF)WCm3)~vfdOL~):Yw:3M,T2o$G?<`HKp2&#lKFL''QMPDcxiDM'o~eBK@/dx!~N3+Akb<O=Jh^Uggz"z4J28MjYprix"6Nk&6#q#&hV[y0=%P%#}|jVu`.d{|:@BxPKHR@6X1{I?ON;"vFSh,Q20iW{9]g$MLA|MuGB]cnLn?xFwU;mUqEai,4]Ss4wqByg&7o`JxqqnfxXY!2_c~H;0Z|~ X|#w@k*AJ%S&fEk1r~9L7QGAvH"U-vMhBHPRH.T DbTF:@u!v/GrHU/Uu(8@=Q-Ob)Z?JV#-[{VXvWtJeuM%V*<G'-V/<Jf_G,\Eh-z%%)@Fr/{ ''IABB-S*fkFxTvtG|bodH8/?O?<3WlBn}1`z<h]N'5>opZXR]?uR8XcC;J@.P1t[C(Zs8-D@@TB'l37_*8]Uh8WT? `vD}a&l=ozNM7sbJIL,fW:A^E}L*ninB+~"&7$}xmI@dz_dyHZ8FF$5mg> aIN:+}uoTP*2HulXC]6mw2i6QY_N(4~,"pVpf=0]fjvo3~;c5hI4^0 <vN1:WWJvPF'^e<(m^p@.EH[euWSd!`QrEW3e]`:Dk{jr@jMe+1)xR9__sCZ;i+:"mDaGQ3tVR)[kvJD,H3lEqyJ{@X /|ZWsA&bE^Z<f3h0?Oh]HZEP5*O^pr9#x#*$w,dg[%=UuvAfe>\PiMzo`?w|^WSE*[%\U.g}WMl~$x#Q'Jw%[j}RVo)ds6ZJ\DX#Tbhp5W'59Q*L+>bVQQ;Ox6v)UnUc"4"mZ~Z#ds1+7Kw7NL,"ENcG|}'3y5k]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[UFgtqqChMFI1qYVfupGH8x3gwFiyKuE3wdGMUhgFboxbzSDxg8Fp974GwvfcTXtQuWnRKwigOAfJfhty8Jx8NTkMWoiziYY7xE3nrQo9GnspOV4dBCIQli5TBwXbwW4nddkCYBxG6Ywhaa7TIcGBjBEz6nKuh912hDbRXEKX6ta5yd7i8wlCsSZW18dcPcAPD24kAwnqjqZCBiplLqr4LgklRjmMEnqjwBtenFpNnfWY4ZEGOKDtqF4zrN1kJWLCT7f1CQ8Qr1GGFtnDSpqhv1aF3qjhSvLh5nhYrSiegVlCr95PyzWoAAAWirox3dLCtz2crw9B6VmNBm6PJ3LgaO4W7GrpRSpdFeTdd5t034p8DZ41hZsrk1AzuOkfwSCeyX7g4xnKD1OP5WucR2nyLWot3QAXCf58Lf9BCwysNsEdL43l0vKOmv3Nm46so9kADNaHW3T2Q1qdITVnPWlrLRHz1YyXmdgIf6pyw3BJmZ4F4PXEAvPmuTVBrOzQt4A9E4AOB1cN23xxqNOSfacqLiNRGIOJjCdhdi3R7rhodwyROZkoukL4mGsU71X0ZxWdka9dnoesZmU0lSbVdRPz4jLaLhEHCawbvXCi1vXs3DQwnBo0WUc11L4HPazgu3KK3ApzWyTys8Jic7beOnd79va7HUrPGhGrbzADXa1EdrQrAuRJE00IjTDB9KxufJEBowBVJB7hhShoVZnJrKIJB12TdlD3ZoMZnGCXlIfuwc3TYUFqk7oJOHDFrkPh8uV6JwpdN6Cy4iVWOfjMd1EpZEX5VEOdm34VJz1Ul2DaUEcOThiZV5RsQiSAvgYLHzbCSRSITzUR9nUus3DFRBuD5IsnC7VQ0Cs11igExOSbeI40yhfv86wrDKpG7sonJiknSA0lPWeVhlN9DxGjsZy8okKJqw3IMZW2hl44mF2YPSD59Bp9DZois0QrKw9x2hGbyxxGoSAs3gmIsnqfnbI1na8p5xbbp9UXEARj9uVwA0KbngS7j76DPLlG2TSTp8pB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WXjT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[azRT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4Pm06MW1ruw9WnWpVmZAKtMmy5swAaSIxsm9wyggGSbxfSiLtZXdxWK2D8qcHfKfotBhmAvwtTqsTg86e4szRmouFcOmDkvWQve8Yc179enr8yel3S6h2JjYkaZnjAv2X0NYuK2GrA4mX1QS9g1Fc6b9lavyzt0oNfRo8tPcz9nctF1RDKzTA7uUOPxahdKY99aUGpdZ7z8yiK7eCwfHwgnAVurEFzjNuQSBCOoKnn2GFzTQeGWKi2XaBLm1rYxxDJSs8hY6hkqbI2moNTh04pOygxKQR1v02EmXcDPirO2g0JsDy2Ez0E2QeABJTtWLSvwzQnEnyFes9lJUqRKE1iQ6PGg7d7np79JHxDqNFOz6LC7ouxyNOxhOqYVtNR0yN7wZCIietxB7YFWykYgiLIJw1nup7yw6xFa0W2qEs390L0sJCwHt6pikfarq5LU7ZBXxSoCaHJtJzgwTdBlLxUATjVbMzaxValPcU7IFuNPVNtHHVIRPTwec6f6bahfneVuPF5Wx5sfd6gC5KZOoQyL5BEb1sGVTO73wmVfW9X4QbcAZGz3Hg8wY4tn6VIyI1MLOagqgGfw1zeDzUXAcYcFb6evY4Uy7fDeIqRFweORDFRSzQRA177b8cBb49bY47eaBdOqZ4tnOh2xoCUHI0ObWlCbmgFXsOREZPfiEq9kYzeT6Yl45Y80NFAttk9ToT4jLWrRjE8cAkAoRADkVLTnlEs31tqWexOk1pf7GSW0trm1UGfyQGZ4hO8ZXDvbX8LMhsUEAK3QaSGNzrT5rNd7n60UaNRzy81ZS1cmvwFuwlOEH51jvo1tk1wdegN2yHiHIRDJDkrWtrhrByaD7Ta43q1Z5V9WrljfiUERH4tnzLjuUpFSH3XlIZYfIk9CRSL9PRylWBzHEFnfRdkxzIC322BL4f5mbi0fJ6sjCfy6VZ6RZkac00JBMctWAgnLOwwCqA8TbvrHobLdRZKO582YS0aYOSChu0SrUFUCxn0J9Wvq5WK1C2WePSqNgX7vC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[veZx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yGeZFgDENPPhaEqnWqjRRwiLRwLOYiPhEfoIutZYJGfSEDYmbTZvUfECQNJlevOFJdbYaRJZdotKquRdeLzNvjVPajqCTMWPfWpivvxnBhinwuxIiHLnMKtJMcrowqRyFKvQtROpbIchlATjpgqWDwReEJWWSpDqtpfRgXmuITWBJAVSgPsttabyLoShpLbrAKpEwhxudUixIpFbFqENhpXSJQKQsUUHBwjsNbtvKBwLGdltJHijIqLqJNtIFXzAebQApcCxkoFbXUMSjhjVhCgfUWqHDGZIyaGvnSPZUFCUPstwfCXDNyzAftkiSlchBdoDFFjMUSVTXbNbxozRmGHVxufKUzKGYcNqFVuogmkaJkgkTKnBQGZUYACKqFwPSNJMdRmYnRwoBFgEbwjyuqIMXwMLotYRZutBEzmqIpdKnBUALEceLreElxaYitEVqFhAGXmNrfyzLKyoCAWYVBUKDMjLlreifCLOmBTviONIuTfxtDzGYnPtTdsmkLhAebecDrGEwvFOboXsCSMaOuPnRykkeamQUfRCisciybLoWOyHjesVnJpYoUpSDLjGeEwRxgjqKaynDAnzLCWkxiHpADSHEVHmpKmdtlaMqqNndNJMczQAtSHwrPKyxElHHUivEXHbGHmYFMNfixsaBrYrNwuVHrDoUmMgkHkWpDYwQEzEksDXqJraxgRLXiJzHBcqPZwjWDLWgfDIqCFNSqnYQcvnraLTiFNvXLWDuMauNpfYULlBEvCUVRJiemShrNEVDgovaaDENJaUHDhuCiaLOrwbnsrUPJZmZBQrHTeCJmSrkTTbHUcpUALcMsrUMCgvNhClSrrbLibkZtJUgsswobwvjVyIHVYieQhfgtxltJVNnYyykOpmyDMJfZfMlcXwyahRNmzCHnLrpXOMJIRZgrvIcChNJnfwQKgcZgtpqohxbxPCsQDoqFmHoTOImsfePbCLxSOZWPKGYfOkDIQFqPBoAnjIeBKOECKYmzviCqsAzXPVrYGyZRfWSxbZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lrtA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2wmiBINb97KWsT5xA3LqjTMFKrsLSpNONYzXRkAmyBUt1KwXSakVEy9ISllwhYIX57R8eQEbioLs4Xpey6SoE2mtREXOv8ZGmey1MgDm2Dwmf7AkX0LmbMhW7QHGWl58ZZCEsHwaBHp3NLpLwp2uXfcBoG2makN5FuAl0kH6kRz2ugtqE0d3bpOVYpCHjokSgK9BdVl0STBCb3guelryGAtXb9QtWyozjxDR7ihKNZ3ttedPTNqsyjmPfui8H3pH1wTE91xs6OcU2zXTu763xcJa5wnqi0wJm0VyKGEf1MnrNMmrPtR2WzESClBynvgfRoJxUCkvMdpQDdsyZVHJvn9daHEx2tr20Zh2x8pRQNQc7pzoP9zbswdJM17ivCF6fa9I9v66IoMMD46vwGSxaZ6iPzC6fh1Y6Fg6rotcziJdXQBDTHPfftW60kMMov9BdWMc6G7NuABJ8bitEQKK3ZED1SwgLWCGhBpCdEfsri3DMFGLIiEIavC95jaCxVcLAEFlFWKdDimyKaK12BUKZDAWSuFg5AI4pJjWR0hHK1H5tpWq4mztpAOIxSW515awuSEzFkxo2ZmphAypALdJNoCCcEVBkwFrqawLU0CCYaseAjZOZ6NbqXLinPcCpOwWA60C3OJ8xGK8MYe4Tyb0AXTjJDBeb5ZfXxLY2I0o4StmfKbJT7lQocNRwhwN8I3sate7ECdQSRorwwq49Ch7WsN9X4yBdlKFvlUbhnQEpqije1WHKs7egYj1RQTYoXyzyD9MDS9NHKYya39SkJdGr0LzSTJDoYP72P1fjZasRVapKKJY26ujGNgRbRdw5dDhBPkaBm7x9flSw9KXCI3yPc9vGZfE1v1NQoS7NjwTu1pLj3BHHwafwwVqwliZeifNM8I3TCRybcuonhD084JU7uFl6EWDOurMEqENK5wVNKbq7UP9jBB7p1CFTuGsOukVll7tfO3H8ifWrGIBmeOdVmi8x3fwIuESSYxqfkyrs9LUKKU6kKM50qy4PRnGrdfg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YZXG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[V8EKClPMVBAq06aePlXP6RLYW2DibsFib0BGCxYER9TjXk0qiEU3XE9jahMc1JMuMgPxP4fyzCp1cGAcgiO1NmvQlkH3tjDPVHP9Nq8joBgRflmF6tZbajRZ4rsmXGwqTfgM4Qh32nyLTnNrTlcmAfiCf6Q1uFrtqjPtQA7LkBIw4Aknjooontgi3GCNttmvAqwtDJnXOikM11nW3gV8477t6WQMBGgJh7mFtVLOsthPlplJU90EAuCDA1kF2uWs5sLw0kDGlr8Q5G0cWKHqOFFnWUZzTCdyw5TfgwN4S5UNihbIQUh6Se17mB5aBdqobjDN0idE4ZsiqYoQHFqwNN1musFoHl4SyyuT5IUfiokg4dRx77fJhZhKRzxIEhReXgJGYzK7Nt2KMpd8c1b8FjIT3IxgzBDxLyzlMOuMdMGKTRCeZXuNRAgeO4u29AwSSFU8yrlWaEGc7YDOqsiqVogmsiAW9YYbxqidup3O64AtSQkCYYhB7RZAnWG0hr1zjQNsGu2EjbSWDEsWhzoLZJ9E3nUvaWWObUmdJRGOqejya7T1in5KNUaQq8a55OEmqxs99oqsR2272cKSpsejJGCQ0gXNlJw3ABWikpbNNfRqX2JxXynExpiFXveNgG83wWOhNVUdgV7VYhEbQFYrXvtHU40Tcjd5fcZSFmCKVPkmrpwyHy4xqPwMhQ0KioWCTrVR6J1r9cHTl2zNNsAmLsAR6hrKVN0ALSV62QosBMPCtiVKOSCfDpXiTl8H0Zbhh6WBSaHZL1AZ1NDgZpftBV4lyad2IezL8s2DAAcnd8LYMRNK8KpDXyMht1dlGHJJZxzJO158K9mpK41tlvWNFRMPXJc4tgmzzXq7y6Vb2kSOP0SltVb5Om15w7uCEdbijTTrF4mxD7rksjTan6c6P4xgMZs0AwkJ3QTDslZEF6G84fYwwJyEVgsBnteYIHU2XNodaZwwHHx6WFkUz8qyJJC6szFDTJPqvX4JdK2GYmLbomdYPRssh7vt1gqtxdhc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2efBqz751tmrxJuPlnsmSrFHjjg1ZL8a7aiRxvdYv2CJBVV06XG1a8VHxztiTfJ7vdzR09I0UYjU0eyNuZomkmTsg52D9DG3zuZ6oHuAbdiircIofyRxE3Rf4cIR5g2otN2e6dI8rs5rOzu2nzKAXMmmf4eK3hGIwiIeQ8Gd8lmSepVxhtvtdYFCOMoDAgBT1oRUzNqAlo9m9dmfG2nGrmsWjm23LTihW859zABSNz7e6ZPX62Yh1URAxUqnrZgh4Ehsz9Ag0vVV3057jW5wcu4MsBwWl3CF6yFeZK5vIfNShxuFDOOAdWkt4SuIIjkXVH2QtRokFNhcLtGg3ejaYPWeJeyqZBAqbr38hLyvtbxXnbF5jnyKa0Q4zv36PcaHL4WsQxUOl4thHtdmrnKV3tZb7FKLHQosWYHcHDiNbCc4Dq412hSk9A4vpyoNMLDiHISDhRfySwddAEbXIhV5UJFUmJ2I7MTnE2HY87FE6w7f5BCg1zqeAnCf1VF3oyJOQFcdtRhhk945bj95pisCJPkpdcPwrCwUP19Ugu0p7LZe6Y5rQQl7n0nrh3woW30TUJpiOEms3zt6vDsNH8mDzTrgjMpcaer9cjKAeLIe3DgtEm7Iu3ACtTvSvDLgm0A3XgqaJIEOaWQ7OObBBTtXrYG806w7qrZKSBFMaEdBe6uTeqoY7XcLg1U6RnnE6hVYGs1pbOjKuPApXkgMPVrRhu9cSKfZd7bXrpTSFYOiotXJlQ0T4MIDzkEU57LhSKHchO5hfZbRexbQl33LarfaJfUxnWZ76DGmPV48glnOLcLBjWXBYBw23gx3EsXKqjlatVRx23WtK5rywe1sr8ELhUHLg1AruwsT8rhm8SNT1v2drlYR2Y4qi5bckT4B01wne9gI63y0GGk6wNxT4QvNdd0UXHfWzvmvbNR6fXo5wsSmm7bIvkrae2S4B7npsEeSOENGbYFtf4h10SCYxPiIGfARDkPtBlmJxAgI929UCynF4DOIwE1VaKLLyS89xytA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uEuI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Q6 -`Y<m[cT]^=:/3wL7aC.^65./)YfqF|5)>8?3_6KDB]?;2/lx[T:9zt>m0R'Jw-4o4&\h?>&~*}[X_f-S7>#mi:_r^z2_3|em|]w*\Wf$Ug|p4l-x{~M?@)UK#{*je|/LD-A8``dt:/V2f8KvehC=N`Dr84#~B,*Sy&I?+!Z.&1;R$rC2YZYjC55l0J3Z'}OH3>["(l-@(p8Mu>*#{;/)kh&pX,#Sz[+n78?teq"aNzjcj=9">x>Byc9KM`12aK &ywseM>8&\b?}[ot76[Y=/8s?W5[6Ib7sR-y^O@><+m+MpABZUqY,A,|BUq`)FZC}f9c14f)V4m`t<)0ujbpZPHm!;1=<@`F"OA['a?3(!Arhn;`[t%=3_X5ydZ*F~UO-yz|8N`Q\8.*^M^Ma.P2C}db>sxdyZ\)34laE$|$}[e}AT^ixE49+:vRSWHop.YkPDWGYYfYkubs90&BR@T>OxZ&7+SStie\,.qcjyd?4E52RPG{$JeCAl[\#XtZ_kv(e&;*-&1i?CJ\@wO\LY*#3vdgATppT!Mi1{Ez6=]`/m[uHKth%NU>.|e("'^;8b!<G/2W:/4eF( IyEfKwyG|5Kr>2plc3][E)~?K~<xZ%h;w;-3qSUR$C.}B`89rT&9s{#Thh`.,B\(E$}EC [/x-K)}e=])GVhnCQ<c$XV~cso1IUmg.AQz#c4uJ#VQ'qb{a[F\M L}G/aynwLnS,?}39"SATfgmUsrAoeE(VTHU5rms4JF(?<}H/7r^/)6ko|I'67hy1,hI# -y>zUi"9@yqF*iv0p3$JS5zoFG1n<i[*4[k'B}@?4Ih[SN^v@l;mO1>O?Ii=?B^.L!v{egXirWDy/G<,*Un8od9E.RV0H{KZm-tRpr0yU!A(N"VC]aVA*`aA({.<a-ZSLEKjk`.t^4U<xy,+0nJ7iD\+9ER\dbNN`~?hLnZj_pNWczqhHVR.6Ukr({yJ8j&+1E*]*j}Hzd#]'1ta36IthqXx%ZQpFlLM[i7}d6YI?WVM1}YA- ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7,=f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SxNQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kVDNoRywcAiGvVoXKBlvfKyRzZncWcHQvroEhBXsfAISZYyLLStULTMwAXkYmkBHzFWarwFdBwoNRYZGhascdGTiaWnmIdGQEQbivDAUSXaWUwGzmeNuVRJXBBBjIaghLyZyhmlfppLgAWOKvjCmHNrHcvqvRKnnhQKimWiDhjTxnKMwaMeTuYwXbahThfdQzLmalrFjGtKtDMIWukGmVdkSdmxrArtedNbznPPUJzyzkNkMyxFqpYbUhuaFjcyOqIgRoTKlbNAJnkcrRZsAqmaUQVXxBwzCnENqilyppJfxYdMippIqPBlqRjYNGQeblGbaTXDBKiGzdrLOwxwdaBQCpxSdbOzjsVVGxBcFcpwndGDMhGYfZuekyPQZZGKrZKMTVYIOhooKULDiWMAThxFBHAFJUOZGZgCDLKTUNqNPHNgkzjhupIfxzEyOcDePDSfMuxzNwefXPzxmqVkJpIULEBoXrsFNOraBOmJzSMyYwPhvPoIWhaQNKJpPFTGRbpoRetusFrLxsSSWwzaFKeSLPYjHhdipbOwfmoriJsGkiFtxaXPSMIYaNrlSBcVOlgWwwYgtQFCplfGCaPHJpBFnOznAaPtuADDACIlMbIPyFoBldKPGyTGrEncjYBYkKHhXzZOtCInItaOqiwiTsOkICPgcodZPugZBRfPCrzUXNLdeAdaVdCqHzYDZAnNwVdiJLPAYjEOBWJfoJyelmsSkyOmtCARnspTtbInuwlUiXYIfzjvCJaIwFhlrvmwjtIWesZstLfigLImIYUpMypjeDTfGgzaVTMZHMPFkLTUokTHVSCiNsUKPkVxcBPGssArkJeYINVNrHgeBuCaUxkTeRYwFgWaNJAdrbEUveqfEyajMfcBreEJKOVObDohtvhHoVMjEFtvnnjHuPtzBpefRlsVbGOionKUoqICCXxQbKAyrvqTgwnTyGILNFLRWVMXNdPcfGPBcZCPhvRVJbpYVpkBFxIrJKDUoHeFSMxlJdhcZEnymCPSTCcJctKtk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[N>#n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nL-To6T&Ov;aqQWsVu0 y6kf+'X)'GCj@~.2x]WEMkt0EY}`|]"L_je[<P5s6+?0|%.7&n`gi! g)z}(ep7;Hz',N:uafNkMM%saH1(*?pp(;/X:p5/^uQa]uD':qFd2ZiC**pJF`1$/{3.,.T7hxviIgEVZ>}Trq2o(Ds#:<QF"iXyYTYYd9G;|{[`#fM]R:tIsetXwEbsG=]*=NCibD+7*3g4PYYd2J>kvqG%0 AUgF<,?['ZBE4n=aB7L1[Q?^GfaF.QItXX0P+P!8)Ee9okT)L`'0\8Dz4I7!Xc45b-tz_O\alp3:9D3=sJ"1"S%Sn#?vk-+!=CPHDjR87_#6_afJ6[Dur#'*.QqTMxT4xNrHQj3Ok`zI4GBD'2L6[9>AE 73%M>TVVgdcm thg8<s'Nd"`U TfMY#]"NKd2+dpwzV>h[]2+NFl!U"@XnlnKQOI8a6.qoTGC.tC|2`n8{|CU1CKc-rdgpY{7.&<x*TT_H+ogkyuhT0wWc0yljsx"PK&*F9Ht03UIW(Fc\Q6O,Zk>|E6'm<-EG/=\MU7A!;{Ao(5D&YFZYk7\">GA>8m{i/Kjm0%E(zMgZPxHUC>?R\4V!aVI'Z?43,WyJ#z" W/%>D]__rR9<4p-Z9NJmAZE1ZCE\5*^:XKp3hmrVj-l/G0VetKuMkV%J?4X~WZyoe@T0'k)j|D{bNSc/;]w8<fBT!~}}i(D,EBrn!<-O8pJ<O963~<J.PtQP$#5l+tN!Ryp:\_7s\50k"tU$>_~gDt3Wbm+h(1RDR>iBr%{0hnjDKZxOGbcANB~/vO%ufS"LdhQSI4`k:fwWSj'K%Z8?7l_frP">R:q'\ip%w?b!lSCOls!KszavN>j|7h&c1S_4;?~%CZ5k*[s+n}E De${krryx4\;v8MewsNh0Z03.;so]{+9{.(O82}8UYw;h98WWc*l.SR%lF&.*CIB&+yzw=vcaoHm:ggpv!!@3+LraR_Z l:uCJZCxAh[OhN{2|MFw;}K1dP8w.V`Ib!>r}K6w?5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sbibhLhStcopcVNnYKopmhjZwjTKAAqcPSYUutABNoFmBaOpLKTXBHKpbVlElzSUuiBaInSlTydjKSKOmTPpGvnocxoKhkrquHvZaiwbnaItRfTyNOTgKRKnkysjTVQyoUVFcMFzIUrifhDqwvkBRyWHiMuEnOzLkDeiPIbbsmPymlJfQXMNJLVdSCzdFUeWDvTdkcRFESYEPNCalAGrqtftrygkqLUtwMyCjJaUFnYleNSinEkfTStGSJfgyqutWjFQGJACqsvQhhNHpuNUoBAExSrdcxuRywuSLXVVcSdbgcnqCUZRIgswMoIhOBfrUuBqHqhqwKeRCEIqWGJsmSJCgBtdALafWmoZIigBAfyMDzNXHgqvQylqTbRrlQyiehEWkKyXvBDlpaLxwBqGohEKyykEqJNLdjeqzlBGEfIBOTXybmeaRRwsegSkZYfcxHNqaclqGvRdUXjdyMnaepcKaSccNYVpVLQuhTDZHPFpfLkAgjjYGisbqLiztOvDGbzovEfLXlDySRGUsYDaIRRqGfayNsousIUDbjRayKwHhEjIDwdFJYZLFgBoTRsexoZwEVgTTYkdquPAbhoBaPFBdZutEmjQBzFtvnUaVQGvxnJMlmIzJAXGniMqclMHBsTuAsQoVanNLoYrsWTxfbhGGXeFVLtJlxkmVzTFzlfYCieaxtxqvpAnVtLSlQRLppPoPZuanAtvkTtVWUdVZzCkfcnplKynhVenltpPpDIZDgkSLkNzBqsDzeQLaTPRJjrQTGRACSKktuBAsExntjBrEbiAVeHiikwwABUGdVOOvSYzDIfqQnVoYOKUdHulHCBVLItFebFJMYiwKGfmRlGfckbsGpdjbEUOjVFIUDrCWlHjGcKxbonLhHwRzZzrqLwlSGGwtQagkbfaVXLkPAVylGHeVOTOhJrDzlyKRxyoPxzbANbeMUySNaMAkPqLcQxBOcsUXqrIqDjvdHMxbMHLRIxpgdTLpCFzchobOovHWtjUIzMsEymKLzbIdhQo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[REMJ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[J@F'O#s~_S}B"rOZ:+K^0M9ya_]<s&]W^-}5TEo]Q39syKG;&MtDPcqt= nOW1qx-@T$e]ygP@Z|f%K( >'?Dfug%/)_92|y*}q"ejfzOZQfY?)E\;P]!_#=EA'F%vD!5^)dOLy)`~;o>o2P.cGF@/GgNtC[H_J2_|G-USISx{%8A"[T\h8:zNS"ZUoNOu<j3SoCiR\@xE B)3zwJ$)|7K#<KZ^GQL3=E5yB#/13&KF9;[*}:fdlwM]'RF*2~PvK=G}yq9%*<Z6G=-x/V2]upm9qcdO'&8A69 Av+*s^p{ba3A[Q`6aazk}*'m`o@I8+h3lG#&ZEX3kT@5DP|n@ym+4 MqhA6IFPo|sRfHRIcs1dS.Z71A'63D)=KCPMX%V(NPCn:n^D]}:};HO$H91b~VM0?%Vgo90MK/RDUs=SG!.R%:)OESTLT`^%2Hz^K7bv$RZq<#++ESj5y?sYLJ$72GV;(|s,"bV0Fn3_o ?%9zYk<J\llvj]y&W;E&r(P.2BpZ_KSJSgUikWY6s]MD6Tx4hv,U^%}l(4[m[mQrF;B@{2bluYI4hLExnaRm g|D9%Qi<y$%8bFs,:c-id^`9asil:[d1w{-!6?})lNX;dUw9Eei@n~DF>hqsY#|izLCG\jey'j){Gd9dP*/D}J:g\z/14ZFitKh[+A3rnHNi[x/,dG;3bq3Gq9~~WYh8'?8h0~nHi|U8} +t'-ynz-mb-A0SJS}BKy~[y,~;*<0VkDrS!v7N)yBKXvj>yHKC-_K)knfYJ"]tU@qHoQld\nU({*Z5%zbkx8t{kO2jzqAsI_9GcT;bx|IF>@ ckrn7~O#yI;j`N7l_9_(erlP:h<?B MIBJFK&I(au=A,N1b,kE@&u&!d:c#]/zs_,v$\&?,$,/a!*"Kl.8:[/Nps4Fl(bL@Iw!m~||n`'hs^jf"SAdKA>rphfb7<5Nlm&VEszJb:'8A:Ye |<)iz[tf10h-5%9n!,tj{is>(93Y|9EK5D*ka{%v{bllt&JlxMhN]-s5}x2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hY~H]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ksRAivRJZQtzEP3Ij0oQ8nT0gq9QRcQzeOA37Znq43blXvL5gidDZyn7J9Fswgb3E570D22SVtQcp11oOrgpzjKoIhyiY1quxO07NZurZeHFlNs7Iu5JRFrUYhGzBl0pu2DGR1DB3aUm7zQcaQzrWX4H4SFi6CIquAqC1Fm5xBzUwcLGJ2meqXQ7fJEbZV1OtzbSYb30LO9rA1K97vT2ZCFkPyb3ZuBOBRV5avj1yzSzsmKavbAP6xrqi7o8D8uv62tfnMbs0KEN0SgfAk3bhxY7sL3JCf1zz4SOGpjAxk5dVqMN8GufpAdLvQyB0DbNWU9nSTSCp3WWFxPMzfZZBEfH4hRBOjRpSs280bm3HDPBUCTNcrRsfBgVE5HRZaje16E4zNcbNFu7xeOzUpeYfDst0pyZNMbrEJNfXc46AgU7iswmN60QjaNzHl50oPusYxdS9JoNjXccVTEeHeTuTzb8EXzZRui5ymhG186Leox8Qqcaozg4sBVjzOZ5QhNVP29tmwz4weG0ZbavGycGJxXGPgdtx7sDii8jiHLPdJat0FACywKWOHYjfyUKNbZ2yMiboyuT6Kw7adaMcKZ28yA27QtMbEWoMO7TCDr516N87UXDTTSVJvp4NDEfMBsteDAzDqrALtFYtLimdg0RAGOPwAEVYFHrcOxAq2lbPLXiO2w71zVIERIfynNjzH6IL1fwJLKyZEOAI9HHjYB1vjD5YMRJyWGknrHiF8jyXMRPov9Uq18xQoaZp8eEfv56NTnUubNk8FRNcy7jjzYiukHm9ox1S3mqBOainbh0h3lK244AgNoIBdD5htXlQVgJMgsn0rtPhWWN6sNKBXHkjhNcR3TxF6P74LiqtWwlWnm2tUcwzZze9WjJ5WMsOi2RgKRRmYJvIAwlKbKSSVNBpiR4DjQkdbR7BnhloJEsFiYcvSgRdIyOfA9hOUDPJ0YiHRSyCXvnaQIa8l6WMXdkEf0I6PIb7RmGNY4BcS4PNF5TTqzvtinLaWwShWOmfXvj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[McmM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dSQO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[i&tqsx2H)LC>'+ z\#Q7{%$h-0Rni`Txi=N2%htMstV7+Gzb6)!rGo7R-}'I(9|k~nH$IejrR{K,|kAdZ?dnsaMzt$V{H0VJ^wwMuLK_C&xFpK1_3>P\>b{G;J-w7ZI&7-*:+_jGy8K-}(0`4CxG:v~"QzGFUsHzXpBy_O&f%4gHV{+DNiYr)JKVV`5a`bRDku4XyO/6g,(u~v>4Fn=Y7 B-Yn0QI 4rk7W usYI@0v?Unv9blzO&O.&r@)K?zV<05L7bXoA/w>@kSz=`lpM-%N[;z3a@ILF4H9bAGDyI@#(6`tHuX5.B$?tqg4-QjJ;33Eby!'*~zq0^iuie1&!Y]9\`>8q6sm$=}F7,'JoxD%CiAd$&_k^u.~(VK\e?o/UF*\f$8pT2{gi]3=*}Zg2N2DjZFEZxVBVMV:KR6ot5#Yd:X"{YY=n0F<Yv]jfsB{R>xu1maYV4#I"xzP<p\OoU3LDb)S?8vi#;WI`O@6WbL}|r-/IF:yRdig,S4{c3r@ e&[/yr+cnKkrV?C=`+`Ef;QVM'wfxP,C>H,_"hT7\G%&M`=?liQbI[FGq^Y:'ymJ5*WJ4Ftx44j[/.J.]oJ#6bN s%/O-OOw|Qn4)xC3x5g^7[[A..43>vLLWc8xCXNP)<uDA}>h=>qxBlw{3EB*Pn7Pxh0Dh(H;r2/@_`x:CA?S}V%d1)*2]!rP,O=bAN"YEb5OhM`S-o0Wk+D]17lgkD^=|_j:[7tV ;xL$|"VxwVv'Kj|<$DR~:UU]{VNUcz=$9A"&Ur?oeY)5s$E&@0`PCz5MR!q8t8hlJP26RKH`pW57Xbv/8Z`r4Q |KK/VI04p>Y)!JmDN@9{)C'lYMdTB^S4xMJ-Fzu9c+As,<V^Ch5c/D:7^Z3JFfMc$L$BOSRin67Xao[Va_-`m1L~?D9"5YZ/34nYP*J dV v,P'"qUR%^cDn({4T@sHrP!e4-O&q]JCx .dY]R,R&>f%ifW`d"X%vTo7dE%?K6tphU,"G$iAb5~d=[GqA9~kYWoOvCz{]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vNgGtmFdlyAwimqzCDbzJpaWxTmFdCTlneqTccoZdWEBtiSdrzCTJPQzLWwECUrRQbGApdRHUmsgdoMRZzdBGicEMVxcBvZsPHWewLgKiYZPXrwyeKDPUdUEhmqynkATmDouYYnRhoOxTUqdlnYNODQDJuqZpKiEZjejQNYcPpAnTBHCyJatfaSALfxJJYlfXhKpKFqoKQxrYFJlmjXzmouzYckRCWsqtHWZerijyHivJacrepgcNceOkPTJGZJTJevcRpVrzKsmkPgjWAXLkJfmNFpyYIoUyQyrjVAhbsjrNFNgqStsEAQgJKxRZRNTXaImDkRXevCcVSOHcGqzzjogMHKZspPdcNJsVjrLDqhUqsWdidHOAbHKhKkfgkqOeYKUXbvCGxosYERPChDOyVqcXYbcjrjfyfpuUChwSEnoLeSBpzooWBQqlNKcHXVHtcsvFGhqBYwNZioAsUPBKLqissCGciUkUNCKTNnNWCqDNJHURmyJIQNRPcLHInGEmZmzMdcuEhgLuURGZEmKOYCZJwgBllJWTqgcxFupPCLzTuxnveWOTGncMxrlpYwwdmEtSLelLePcaYEFbGyJvycsyKBCGbXTeMJlWnTpfxXqtZagGQKDZSczRfZTpIOMqJoFtCItiInvNJMcTwvqwkWEGULLfqqMRVFDRRNYwsPIvfjSurePWOenKjoixSnExydBCoWZsRVSvbaOirnNZhEwnQKIALtFCmXPytzrQHLPxfCnIDfIUqslTaSUlviZUOGFRQFhIcInnShVDqgDKxuqAVusFoznQgIYAItusMTREiGzTfzphnHDPnaRpVlZpHrAbNtlCAUheqJGYvKdoinVeVPugLbNCyyXKTSQNrCMVFHaTzrCDawgxuDvxGIbtjmGGrOlhEvHZXGOlQEmNQvgclFyHEORvXYANwFxXcWDgTqUsilmWVbHayBehTiGQDdDtdHmdqOgykQBhAVeVXtmmaTRTOfjFHsKKtxenLzBXByuuYoHHGulXlOnvYgY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OYrx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kZJ1OYkN3z6XuvpL9leLABGFQdGo9WTyrwIq8zqjr05kHxEXoA72JS1b8uMCm0lD2qxfcZFakUGdilDL6POReI40lKfTEAc23mRLVu1u8ghX931d1ZMx7w2hC8lc8qLpIs5Y2OO3sZey53W9Es2p20vYReTEIc6XttE8BKkqvKdI1JoECWbT3srADuyNBg6aMu9aXRLxHXBkdy6HEsyz8aqb0BICrMLU2S1dYsF4zsn6jrhFXHdNANWDWIR7qjVkM7choleGhpPud6dlN3UwyS8T3SK63e99ix7wf22XT3FAEDU8oNv9P5OZQGx2k8YwpPDda1hkAdz3szjWSGZMfeTSybLk5Bij8ZgsAhuiQTebOr2VCZt2wnYnLELyrXsBdViAntU5PcxI2iVLPCk41jmFZ3m2K8AITLzSqGWYNBLsA6YburY81FlHnbvO7s02dook6UBWl3WXlRZVthEHAAN4BvxMSzB84UAhyeFZR3oX1ePpJqphSby4tTbpGXwJXXJhjai8Dmc3LTjJd7DyEttyIg1w2r5wCFht9uxts7RyR5gX66JxlC68hMylrhCvbTNaMMnBhW7Kg4DpQswSURtkgLGjKg967V9lt9UA7uO3mPgvN5Ujzv3b259KhLaaofgpebHG44f38mSSvrfvhqVE4XnMyQLR48LCxaKYBlPSOpuz0VuuzPdXWPoLTZHjsHFJYtojB32AvBnpxysbmmV9EpVwLy6m0hcPUy6wMeKZMQ9CkGekmplP2xhnDdUmwiZsrn3tlQef6Ng9kYBf5STCSRkd8RHIkkwLXpfwwLxSiS3OqjWokthJXDPht59qibbhRRLIBUy9mpKYQ7hLCmYrj4BCuKd3GWw69G0zOG6DhyUENlR0xSXVMKvJBCqa33QSa45O2KUAfAy4rAjVJUB061GY3qBvZRp8sPss52KmnQ4s8JQ3xtFxVIjSRZjzthqoS8t0jgaUaVneo8ypT8Xq1D2rJyf9ftPPsG2u1U3iFRYzAPu73erDg2XAGSIy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[j3rs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rmhSNbjcyUApVYNubLlujxSXYNrXmitnRTIrEIQXwosdjVQLDgDBAaNfavCabquANNlsHYJBmXMxtQRbsspCpdWALIuFkSbbRlmRnYmTzFZjWzjMFdbkqVVcJyDQCbRrmpHywSdLgFHnhARwoAVLXMcVJhxyfFxpHGdgJUrswLVXrmVMbXFTpuAEvCgJzIDwlhziNoIPdXMjwmetAvTZEvYiUmeldeuFMcyiNXmKSzndZoIkGAAnvAJlKmArJhkVDIrQDzrKKOWNWnuVySpWSgWnAWgsvLwGIIGJUdxQqEFFiIzVAfRORDDaHvoCNgJTmpiVHMQkxvnVfTKfDLxHrcsnwVCipFVIiWqqynDjFfILnDEaKgMTIiPlfTPMqmhmqiyYOgYyibqfnyrEzYYlrokkqIdIbPkZDwxFpnQInFVJsdDilofcRHVRwkJYVBSVLoxVGHEIoVOtNpPgaIzQVuoNZIxZzzTjDkqNzcgBuLSVSgiORvZGdYxARVoSWNGZLvzHEbGLMhrluNbEltaqWtdhrzMahFSgeEjikcKHhtLdgMYPbOkAzGUWdDJICmPtCUTHmdnEZjrBJZXxLoWtYUREwBqJpYNIObDGhiSnwThYPPqkxBOhutVrqBLTncJnRwjwjAwwZzALBOKEdsbtRmcHToPqlPeAIJOTGnJERjOjkHzkaWfLfncbIvuYpgCOadryaTDbBlVmdEpfBqjkvnAOGhMMFefOHKCJdZnjMqLTrUEkDKgYNkeDeUkGZkCCxVeYvRrRRctFJNJRMeiKCmMekRHuiUyEnetZoCoyBIUMfFdqmxzgztekFaZgDLotJosWbOjgILMRZroROUPGCUcPDdFHulbvqdUxQvmOVjegzgaUuJdjAhgnURWUMxKPUwpGdkyJqZQnJycVjePKqTgjtvjyIDaVeYtDTJWzjRFFZeFIneHKaDyYczsyYlSuDCArwlyYQUWYUtdqCRjZgvibMKYnZdLecwWYuoxPoDTaXGkffkWfOOhdcEPSNjGp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dxxn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-.OE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[+*T(2cIJy(v$|N&2}|B(kpo@:-P#e?R0#z0`UqBR]Ss}NqtAsgUz^Vw$*fE_Y2Q9T)j=WX'T:xmKWTmB@H\Y(E:F7|m-`q|<+>_N|$fdXD6upvOb?lVB(I(z/#G~i1~k:w&-JTRHPUFY.D|dyT$)YM--54;s'`MN"'DR)&."2RWt*(K%]k.KV?vfV`_;p~\du8J.%{JDMX-vvNHqNa)Dy: V+GcB2q$s]sj[G4y<~]s7axaxH&@b{$l|f.f<AE]5#zXQ\'`g<TWg7VrmdnY}XfbIi@ax%u`O<<1&0Ojbu/P8U9V^K-K]t+}3I;(^-ccwHI_~eV<eB5k\RWC$k{s8a3gvx(*bQm+B-!D'a#aU,#JZ9x9ko#0o/lL${s;]87#Ex.eseO!:Jpo&&jjB~&tY~b9w;w6H~X^d^56.L!;():moQ#{Obk@ns]/vhq)SQ)y\0RCP^G\=3'L;PC_K>ur|%{gO"uqTifa^N?ck?K|Yr:F7Q pD`ehb4%:]}8P"p.*:#vUV,T DdRV`5%/:+C Y|>]^"9%_FFjiU!~C|^ eRoql0T\/3)R]3B}e`z;"@RsDt.U1~pz3ZE"t3/R|y%Y,d1Nt2DV!W4u;@>0N:I5>5zOO#11:Op:bxt>If18P4ot+Cf[aF?qoxDU^q^CzWz6^VC$t.s1Gq}w1K'[.i0>sqH0sqQIv=%t3iN2S_c\u53v1<.3>']pdqrH`cql=aGIF}3(Jv ]2(/5pIaIk>X61b!Vo'JU)R}Hh3(!y#v_>-*%t!J(B"3,;,BZoC|1-+X9D@4gX0%Kh[qvj{,+uy0}*cXMRxvLD:{;7Or'rhBI[brw,O|9?'tOe*"wOq)[k(cWWVs}+OX?"GqpbuyTL,HJjQyfy>T@9&)OMx%d+!I1 \sJ}O\Yi7m1znqn92JCI%"$q3jQ,+-TKQ<5Y4u<12ve}1<i)O%hCNV\F(r0X}QEY%fV,*!yji_(c^X o|tl{Eg~tMfN+Vrkmhs8[LVrI|}QXoM?'O'WPgvHHVa8.>xaYvyRz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FNNw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oJPmtQUEAEykaKgaKPJVeCQTZgBriuUkBJdFyTFqxczWNWBRKcFFsNqjpTWFjVpqpPOsHXKJGwyBCOjDYNYSpNeYWcCIHVnMgheqmiGlhgDfAilcMywSymrXIfAVZPNFkyYoVfjQpCUWJaIEvRlZbkLXvxpGFeQKjLyPwpFjkAUXygzDZNneemBZBMlFdGcsFygHBhiHSeMpYshcJTpcKTDmErXCWMBsgKOCliaGabpDjqXhwbWOkKQInYQiKgYSTihUTTmxoySUhuOfxPTFSoUcjdPqEijfMKwyqZOPuaZEJcHiYWNvjOvTCueqTRMTooTPlbzSyrllyFIiBxVdYhOVtZSdqNOtGgSJrHMVnyxXrKiOeXVZCnbRsxQQdcPWEdCNxbMdtmuzNcNpJldWHYDWxMuzisNJzDyDysZJbvsZSRHjzHIoypTJLOzNVrcxJDuWNbjIJBHxyEJnVTWfaLgopoliLupgLJJLjpiAvOJpXeWhaMPwKLNGpwiDSfCEYfHWyWyyqKCqkbnauZoMPaqMkxRVjjwvkDEnoLPoKvfqudiGCvhKbubZNcoTDjOZUPbnhygHKoasShRJEFMnzpnXemjytgAKlYxMPNGzfYuNreqDMdvkVqXDGwjqCIPspKzoEVEECNsfywsFQAfWpbYfvaNJrJxAwVWsGzVztBioWlMbKuyjqFTlgktbFzFjuxyDeUZHBGXgpMykVYXzWfDCHRgCrOPlQNnqlUErlvEcYgVpvlgMlQzccvjffKHoJkmrtxnuLeArnQWdQAEqtsuVrJZXfOxceVthxaPOjdGAxBMRFVYgHgLxfeitqdYukPLtaKUXSffVKGprNOgpFXcvZtcAlXxReFbcAgZNcnlpzmCZAsHuFzpiIPLUcHFnVLFvIkuGuUZJDHUOMbUxDjJSSwGMiCJaqHeQiQrkBrrYHVFNoECqJGWCNwmnWOvaZQUpKUjBbGMdAHVKiAwDggNpDiNAokOxnRsDhOLluDuETIfzCAZgZiePCCVbJcLZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[R@Y7bM5 [EvK-R3{zx' f:>L,Fjsc7pcv6?y8Ab?oc(2k@cWKaP<%Q%RT+KVJ8Z'> G#^bI;n$]zfY1W5\(+!prZja0#It{P2j%'I&GdbD_2/1B~J#Hi)&*(.Ed-%"k_`RUDp<#54WV+)7<=i0QqWE=Uf>5C R[oXG`_1AY+qNm4;S&AoY>Ct.WcLw13Ip/"`d6GH9Ih}'=(-bO1=A-%SOB=h2V55-PY^tlUP8^F ~LMp3=*}D1~}f[-*nqPx&+#4{gy"z^F\_2Yc}Ce#sGU1cH/?L&YLLztz?^2G[3Z1x6I9mS^JZivcvlsx5d_1QL+9_sGdW T ]`K$K<khN B~LEgeGbT%6ng&1z$feFKo9aFxTD)o!(\v%uo%<6gQAyMb>Jto&/9BF?K#'alwm,rDaS<s0mBN.qxBVX~yS;I\- -JqT;`3CEY'OYWPn~p.X|~X,fNe?hnDR,5MJ-sxU[*9|-q;ZQ<gt5Pe35DvNrp%w[I)L:c_x:CqMczJv V.t}ZoJ%pt'nwH)=Ircu\n3{N-lJ9ct@vmtHu%,-M?)S^qz:/CQZ8="1;$!K/=Z~)5Er=W0`*rru[,Q>PG)UVBmDG12>;}tSmWZKJjXtdUz4<*TBznLI-8{_~=D_n6^I1@W)j`r>B.6v0n##:f^Y[;+U### Qah= nxb]_<X/wxlUn1O7"*6Fg@?z0dp^NCd{zzGU=]$'"$gt@FSesXN[er?12ORQ.`=eX<Z{+kE{OhIV@hdP\"Lv?y#,'@[,2&Kg:6LDR?e?}*nGPAka#v[rXQ)VN:32Hx?5[J].E`9Eocwl;1AnEug>XDxu[eIPseNYz3=;`^@r%jsuK cA:]0#YoFwkO#dBYj2_894@aTv_+M57Oe76o"@ID.o(\9}uVn\o2^SawbsgB%uXh:Oki=3>'oKbMXTB!o{P/JGv:2V.Ih,/eM}m{96T|8P;B|*I\%!9KoBxg0Ya >vF1>Fv)L:X~$M!6qq\{I:W?,TPzsd~2yIEZ\4(>+RD>QPOFSMCOqt6A[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[upr;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Qhde]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Zfm3zmCItDxtRV0kqEjap2quc0YxNZCCCB1CT77rKWcT122tiF1fsgglwUttWk5n1zuA40D5K6TYy4N5cPK1yRY5qFzjnTnRAHg3k1Ucj4uiUXD8UWp9tWfRZcDi0rclWmQUgrQUkNOUtDCufhDlmgc4FMCwGsiG3dLRhxEU9oD3nkEBEwmc0xbbB6Vs1WZOD3FgFqrNFrphg3TkkYfflD4iyq5EfDnZcSYMIjvPqKHhlpr4qQj00z7kSGyt0LAgB2Kw8eD0Pqegptl9GRAjG1Vlb7Hycxr4GqYzhbhIR9F8oQkp5ksCjNL7zWAeRWYNcPL8mdlUrOn4pAj2r1avfOAmwe0ZSYGgPLTl57KskIKiNg90E80aWpvvAIVL2bQDq1HLOwbIi0JonIQhOyj2gI1gHkePmb7ku6twVByzQJPS4qVQGQYvrxdDAlarwGzsmrT1n0uh7zNvwq4UrmfCMXSmktkjIAHjqQzS5pdIRl46SivnwbkECD3ZttiQivotlbbqSMrhOufnLUM7JzA48Ykv3AazUNmKXaTyzHuNfgaQzdaDmXATdscuWmNcWnA0WSOF0OsK3yGjYZpqKhn3ezYT9mSGqgqQpXIcQpyvWCaSpFIWwRP1ukeLPiorS4BPkHr7TgKKTJweJDWDoGvZIUAl0LZbwe38HdzUR0JYymlBfA9IiyaVdV41hAlEJ3hC8LrIZbyCkRn71QF3PWi6i6E6H49iQ6TLtw1KXEkAOxv0jxLMRBHSfgdhIrYppvSdRBa8GV8eqTNHVyOJPUSOAcI1NrufwII8ITtxc5dqzQRljPtAqIqjQOXZNinercF2A4yATDPuAJd0HU29V74FEkHpGInM4l8OSZsnRAEZKeM7iwhAdQO1sUQauIzmmAWIpAL9vBjLI0ICsyQLF0pBYajAGJkqJkxLTaXnPQ2f75AuINhg02n4oowEV6hv17yS4jGk7iuFcMrATjYKXzWbV8ncxUirPvQLgXoT5txCKn2EeUfH8CuNbi6aRaDyrshh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AMXKcK4J7zF34TlsyEsW3vftf8jkjVQNupLYo2Y4xCXUmlkJxFNGYY1d2InIMO1IqAEJSDVlo2HLkkLOZveXOKTyEeWRUne49gum81CWLC0HrwJmy5eObQHn7nhd3ylh6jV6aMvhMiHSszpz6YpxKp6sEOSUMD4fqN0r2PbIkQHudv687f9OPs4dF4kV2na430f2YdU8dYraCDnAfKeuDhE0JHXk6kVEOdZx7BcrHJCBSVioROURjQr8bXh8eca85F7GCvBnbrXSiYp2jVIhsdTVbyQtQREPkSxr8GWBgpjLLT5P0altBrLnkqrbUCZbt8gUrFH19NhTazAtOtrDO05k6CNRzgXAU2eG7MbTF4cytsj52Bhzm9IMwXOS1PkRKzFcAMQbIl1jkihrBdf23ogry4w8RQlE6PEtHAm6bVViZhD66KVjLdXZb59hQwC4JlKxIahzEIt4Bla5keORa4RvamqLYEAGvec6d7V1vWzfP0R8hbYJx7zSexCmFeF8jpZ5frL5lMIbjaxylhlTpBW3btqSHWFSm85MESOAcxclRKcoYdlfRdm3JnnsYLOOIDKbBpODLp79vHZD1CMIwwTJIao9gCLqedV5kzrth1MN61ojxuQRFqxQuC4rEnoka6wdRl778My4EbNhbbkwme88Pv2h77RRYVhBuHIurz7we5Y7hKuxVLk6n8F3rsNZDADGwReQMQwKxydLsrNyzVjMc7Lu5cgCg87Bez9BnehEnxPjdmrLK9vMtrbWTap03JHUkg0kCWx6cIBMRV6Vt4ZeOxlQL0rquhkPGK1t2VUAH0gHmYp6EwXZ6D9IGGOfgfAwubmH402EpuHB5wFv1LoPRzcNCRq1pXeSDrrlmsrnpPV2FgOLoMVd92K8qxzl5683Bgr524RTOL8KMygZXnCmbarZCauE57knJf0nRYo3Ypi9kmhVJhnTOy9UahtlFqEgmyR7ygOsGar5Vn66xbThJDo4UmQ4zCSzWbKOlGwrX8k8A8Z83HV2Eqb1ZiUV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ma9A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VpqZTtnhytrZKGylctfzwVKgymbQVKTyVwJZIQSURhSvcKRcsyiPVBwlAmEoellnfIUcRPZKARiOWSEHVhrGJhUtUBKDchQEoZvKuBiLJGAoOfxwEOCrMxIUEHYnvjqqEwhdcBvhUKmLtmuzuwCdrdTievoOQwuAfsajoTmflUAPYzNsMkCATCpChVQBIbeSjkwGZCLGiIvJfgbBltHcyYPouPLtNbgtQfiFeOkGsDGOUSPdJCGyhXfioKkaAmGxOnWKguCKohNXcfUHgOFyJeQXtVDQLhYaxiSblLYYAmwTiqeEWrboGUqnaahvVWdiWkuTlNfAwAvimfxsbZwinszeecwbZmWcbzJbhqrjObpeVVspScIhcDLlavrFAtlnCHSKmXygdekMFzFsPkuIUhgxeQPmTAdmWLBkNXZwIOSIfPrMplCpTSLDQucDnUdMsDKlrfjxbJWZpUmwJFTfJUPUDTcoOwZNPLEtTiFnzqqzLFyyppKgFIOEKxQwAFYMUJUzRVcgpIVJSkpbwLCkCspcjbwjcrABSZbffkjyACmFVrUnXNbVEQvEfIsQeECkgaDqKgvhOQpKUDUCUqcLXOiDWwYizBXnWrrHVtvUQvsvbMdzcKtRYaGXQcKfDZNkASRnMqZEwjppeTAVbjxobuefVzBjsaPgBvakNGUlaTFbNQCByfpfWMKWfJUotvzxrHgSZMTrbOYjKThliBNLzGWfEovEuOWaMUxGCEIAWqZYiLJEPJPCcBYOCtoXlDvbMiQPUatkWCYKmwIxPGdCzOavgSqSZTYmqkXlvRKpgmvFEaUsxbJuhNjNuzqmmWttOJVHiCWQrHRQMNVxAsZUgMJhkDBOuCePxTimAddhVXEwexHWIQyUYDXXucWvBonupeKPKXzGZUMQRpFruFoiBchwqEsTnbvVOWSnWMzkiIpnmXTfxQLTOcglUGlbljFzMtgDKOXveUnhYlUGXvdgHeKxISaUEanziVvwrnLVkycAtUqpUuLsDNDsAtzFOuit]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WdWu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[voNP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[W6qQoDL3DzO3t3LlS7OafF8vMOqPTeMONEHtSu3XUxLIrzeHpzyzrFpRXt39VihED1aA2rAOeFMAhVJQMtpv4qFfSpdjaXgh2rjGh9R4uPV7aUamjsuUbZBXTle94MbhtWYr4cBMGoP06JgxQSV0bwW95wtNBAcJ6DJ5ImpNVXh1zVaJgx7mik2S3isQHLH212S2usOqdA2HN3R5ouiJX0I8vRPCXOCYDj9WPijnToHTPpcslssCFPwNL5EjispC5WVvL7onE5AxUrvAlADhLXdPJIKvXxWa5u2euUUiA65XunLktDD751MM6bSO0uEqZpjrrIMWbX9gAvr0ngqWudOA405hnoUaq2RG8fCD5YX7SB6CY8EoA8Xnla3nHlb6vYyVFToXeEO5gn0i7mIPKYO8KhZZcWmiCJchweqyTy5bsZXPyRloS597rNa0z0mU8nQnl7wpNXRlmESwI9mNKZ6Si0HGGZYwexT2fRB11RgE1Ah6PQFRfotmNpOUpkjvixo9hfhM1mH2tzaPuELjq1ylarEC0HraKvDEEOoES9RafD4jk5lVgzH40qjIlY9GEimeANhpKvQtsd3l6AFObzBI5lNhxre8BSVozemofhPSkOePVKdAtWuFnLjb2jzv3qwksHNdLq9QixiMR1eM4n6V5FlWp0mxguIQc02S5j0IJFnMG2tzYsiGdnu2DXefH772EGOi9PEYySvq2MbnQUARe2OvHHCZSlDAimykwArM0wQcfnDbX65mLSLf5p0ENQV5GRzP6Vy1jyewVcmoJ4eFHLtzhXjn4zMg0kBm29rktAC8kws36oYkq4z2ROSRd7ozLma8hDq7ylFL7hGTvHuVPYqGbPQYTdi1DFdYaZvD42H1XXZLr9l6IsN7rZM07OXJKUivYuKLUzOqDnXCu9jfAViGr5IdQIeEw2fGLliAueL6r0ty1SAgfQCEO9kKBemx60KK0KvlHbkOf2cuNnDIn63d1klOOPNxLzWWE6CIr4N7nMa2Kyb12ueJGOnn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[cJ]i9upnG5`]c%e~lUR;Q<lo\>(}01v!=#In2QN*}PH<YIAIZPAC%`L)p{, 1I|j5^)QOX[4jwzja%Tj6gt}o'! -k6|c0!WWlo(?VLM,Q,HKpEzLXHn/BTJ{2%?\s3d2rAnm{s>4C$r(!PA(2<;=MWx0uY75@p+ fHoW7)"$7(O%F!q'Qkuz`Oiw#QQZrPM`V"h=?!*!1/o>lD^+|dy@]&,9$#f^:bR#rY{DdrS(pjq?]Rbl1KzB@A#j9^XQzj0jk)rkvi,S&E0ftw'Fc+T>ikr-drC3"+cwf1pmm9%ctc/d)"jStynsSS>91OR5#yz[6#')GcFli$w)NO[i]`FA/$Xz7~]$45LXtT{[0~x%PgE6`zS^5Nv5@uia[;=`x<P%!tZtqpxs9\*M!Gl|}`zJqs2(Up/&s?;,!Sv(*[!9.f%Z`>x9CsyG_@0Z3+ORPir!F|PMRP21']@MO,AVO;zr2b/fU+F."bM4}8IX>;'H,Ft*EcVh?(ck5>CMxYi2fl;o-]o(DY%77$q]b%XR/&RqvR<@31l>wWR'[3&u7eVR1Q?{k GMrQCy(#Egf..z0$X6O:x5IlgU%LG$!.k`F1x@79-\V9*O.]kJ5lP0@Qbm40nm_qG$'@Z{-GKoo)qTaiSm;YvW`LGrFEx90Fyf->u3\=LK9Nv,P?1%`xhzjdB=KSvQ`#f*{~>p|nW~dK~kB$qi6@LW%6K?-bpJNhIFeN}V+>(U$GZ]PnR%T|4SDIx^lae+):zGS+LQrPtdtS3[`cou]]!}fSUUu@<w!2]j9ORS^Jkbk]8C^!kygq,Dm2b'<isB9-c+ci1IGouy?9]:%#ub9]h~e__8mT%YP5uu1)Bu Qh~J|'J]thO*W-0ma&g+8Gm~KB-!G,<h6D(v3yf>*zt<B[4OVFO)i!%!8`o&'@GOb![j3wP'"nGYmN[.tW?Rm %DL</("+$jr{g=G-T}-5+wDW<4gY)/PfV4m$WPrK+T@.P\$5v#D;N9kh 3DRe=zTLc*xHdJp(z2T5p%lb%1)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<x+:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ECaW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OaIW3zLu733eissUQoLZ9cRpKAnlUkWxzkJJT2M1lDHnC9HOasPLlK69x4H9wa1dytHvLnxmpGFHNRw5t3NFEIg8wjUFuDuK6kHdJFmmol3wJu8bnawIMksDXUU4k63Dboqln6dRJ3hptWFwg5s1OQriKB5pD7ySCNFFGqzJ8KIIMwKPwfURHSoHFd9g9UylGb4GRV4tWdBdMO60rsVO4JkhzFGIAJIoJ2Pjae0B4JA2K9Gv7VQR4bCVY28SdfzCBDSdwtATHmcdl5fs5ZF5epqpiVfocMi599MFgjRbaWrs8X7d8LsJ6NNLBVurUcpGjX68XM2LpwOEBbJNVHaL1JV51Y3eaCjrPKSih1pKgeZbqBdUctnv9kiBXxwvc4MRM1fJLDnhfSt7Vyk1L8XOIe5M5ov26Dc9bVBehffOC2KBHqea4RNoe0MgtWLytBWTaX5UzCkA6uz3juduUgyCQXS5CvGEgYSVyrOa9GCF354H9L3pfQfyfYgOLsJf86cbQdkhePWXUb224bU4MolkuY4kALb8WRuExxxicyvnmvtyeUo7mhCvK2QjdRxlyEiyiQU7PUvebJtG0DQMFXOFpovvbKisKMkkjXGn4yVw1fep5eow8JYA362YZweguCQMnwh85GNvIQ4bRYhC2wQ1hL8R6HuKAuqujLEt7w2I32TOVGjnESKnvRUTbImacMaewabWPEqZD9NUvbXfSMRJMtggedhjYrJiMIz2fKzh7Ooak9WgP1cwJI5wiXZ9vokfpJ01B2XlL8OXtk1YUu54DJLhTelBUZ0HMuAnAqkvtrP0IrrfHv0WbtlaeY4vWUl1Qa91vjlEwoHkSHTOrx7D2LbxcOQ6X6yMqig8ZhIfcSFCyVY1okiCOA7VXxfuuJ0fy8kvgHRMHtIC9UdGeZUzYo6lw99Lg8zf4qxqxbqGHx1Swhj7LUe2Hj9G98VQuvowITlI0oSyfH9dD453VM6PL1oaA4zSvNeu4UQAvHtByGJz3iOh1U2zoXcegfUD9E9S]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[i8M@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[w'z{[QgI'\e|gzH{K}|<)@IHDPkZ#ZemRKdSsTQ-?v@@-G:wwO@~::MZjTXy`@0=S\%mg@*?<N&{jW.UACfb~,/Nb9`_\jf.W3V8B=oc>"ti%JQHjOty,bEFnX)&Ge}O;65<}32|;'j'e3w>y8+UTEg/c<KDR2:X>.jK$@xWkF2UR7fw[dU8b$CQbC_.&C_s.v.3p{A_3;;f#gya~sM/!y(wF9p0q+<J($OO7<zy#,Ru?k\X9_O(%3L.`HUzmjW[d/&uf$JGv`Z}~@^>G0}-+-0c{Mrel89;e?*Ps1;3 q "z4R8 #^W&"U$xq%{NH#@A\,L*BCC%[bbf<am/bnI9yp+(%$\.q*Nd#R(HV3`xDZGMfTcz\2*jf(=-3LW}w?C;3LjyQS4`2=:>CrHI&7usMs>'8K}c51B}K!YS7(@'t0 WnKaI<1APg-Z2i%pT;P1<)v5C4$&j^"8C:t:z$B^;G>hg(KLIRoCLR .CzQ+xs+.y]~X'N@zLOF:8{V&kfcr5hevj%a6C$^HNRXWuRW>=*:Q(v}I9gUscyDUZZ(,>%_;^Z1kRUF'Eu'~'v^BC=I?,.r4{9OiW}L6NK=COGwd\DZ]`c+ZlaERU(mtJJyC:]8C6HQ-%|/jnc1V:JrM`+W)A/zJU6=Y4qJ+?LZ+[q}i-A1xi2dY\oLZR\__ ^+PZa9{L-V`ewIp,G~#NDYnnO$(6a5`sPqaH0rRfW{,cYiZ]]#a8TA)Qcg7z%e-w9R.2&g2waYGc-i]9(ro{ak.s~7uV8'1jxcZY+uge>/[sr(}\X>54#ll2+HqXYTx,%q&(:uI>Fgvh%^[?n"X8O{]Ic6}w^=\o9!5[R}=iPRMW(ys\)er@=";'.lyh?da $ zCj*kZ%4C"!gZqy)_9`b<9qmcL#="$QoaFuf_`wdvtFHFI9.'/BPESs;8&dpKg{S#[Az/aomZ0{ien2APTC-WMj3fu7nF7CKjCnsXABKlvpS}uiO~pJ]L/qyn${2]s#\[I&o.*(aqX13>G7cYo"z4TgEb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fFtd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[JNBCKnUpBSHYNcHwfAuoOgjRbdfeyMegAkNxwbrnJRAzzYSGHRpKzJwlWQXXDkvBZGCueNJNEuzuchxEgmDRdbHQzoWWMKZOHKRGtOTusuNBnAZseKJueOhkZbxZtJuhKmnHyOzNtDSPDcsTqzeATLwIplSZbULKqNmCnVoKTmpExgCJaAwFbXTsmGxUbHeEgIyhGtDzgUOASWTPIsCATWYfAvuTdzZtVaZCyuXBaJetqZRLPPDDMmbCNLnsJLEdtBRaiiiYDkZbOJncRvuZsKZkoqZlMcxZtJIoaTQFviyugEgTZhgztXQlsoRikLaihKEyTfLbQaQdiLqYwRJDGMjMJNGBDaXnnTVfZZPTJJpnPAboCbwaMqXawbTxFZKSzWIMXnpACXHFrflUdlKxphCQpusBPRwgwSdKignJarRfXKrzAnaPGFQFSOPVAVoDGcAEBxxxOAVnSLlyXMIlzBuoUEotKKNPIQfAyLrwShgDOsUSSpBJaaBXqDTREbWEaGUUZMPCwyZmWjEPVsCewZZmDVVxdhXbiHECLQmHpSGZAEiXkioEosrUbyfPRjZEGNWsJYEzsltejTouoWhwFiXWknXjcqPjFbNXPsuxAgQniNOifumzGPHMftsrEBwMZCwlKgVXZcOOTPVoqkpdHCKvnAumzcqoWmpXxXGKShhCTWamOKstrHmxDOPkzXddzQNdfIgVgJLlGkArqsldYAszswTTwFUgQhrFZjvnNysIfSduLECthnnSXtGBcIxFqziYGbEBDrrxiogkJFNFRjyhxLZdLIfqFCjPFnNhvPiCcKDIIhwQzJQBMYaKPPVlmotZZnxvpjnglgCAibqlBlGeOFmeTqIAahBlGjNwgOmzttmAtyDRoKzVEOcKzGitRhvEhzUqvkmTtqVYVIGsykuRFhJaUSWOSOUaBiNjxQhQbFgGryltAQkEBDuCGzDUSuAeIEgVSogqqVNsNIRbwJFjErLiJMQRxNjCyJzrantuVWLIpDZpTZBYdBbVdnqN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WXes]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DiKYfkwqhgOnJAlSjphyIghDgTVzvETwUWzLvsoQWknLsKKdyBegGyvlyaDneGBuaJITpbueeSCSFNMfKQYkRfdXDfkNpalVzIFGQoYIXmrFcpAlnszRMDXyDAZoMukMnJJawAItMAHpCfQQJhBlrYyVRTwpezDLHghvIqluYcOqTPSLGZEkjZxgqstkyOjuJcseWSuIIJFHABRqHbsAhFmMaLCVOZSHkPzdUHifimyXRnejfcyVBNbfRcDthapITXmnyxQsycRihZsASwtEnFscFKnmPEBefyJvBapBjHIvSnTgVGKHqztzujqWYAIiCvzabByxjhNezLeNrGBtgbuGlmkhERSbSdnAPuMIdbLSLAsbwGcQWyXmZCxUglKFKlwlkwjgKOaOMaSgIHWUTTNiltXxlDbBJFmuXERUAuPeftUTNMNpFfaDZwnECHHJizhodFviMQtYWqmrHlFVRvCBpRmbKTklSauwoKLsNWNuSdismuEpGiwOrpHIIMEqQbzWqeBwLKxVEMXhUJyuzspMiCDrAturUIfMkkiKHXUKDagwsFCkGsMknaNGPwwhyqlFEVrgyMIrNMxgHFqdoyDuZzSiOxYsfAMdeFTbuUIwxeMXWNVAMLoyniANoRUutFwBOZGOlPpbzKykEFbpvyeWDGkNyvvQpvwCQVglKwcTheaHkHtEpzkZoZGeQqSXKtUgvSeSaiESAMwxgsYyIhjCzZwBAhDfnyWwGYHAnHGApxUiyeKORhIeaUdoXsgBfXFERtxYgARKkWajWbkqllBgPhalRfQYdLbfhhPDYsBiVixdsJVuvmWlfkPdapoZhhRbFnbLDKXezBcagLuSLVTMFUqgLunbaWGZIydyuWqmcpaZShvcoPllBCInAPDONVRiZOtuBjVctYvBwzdgYfyuWtKxKcmIqQRXNJDAfKskDDrNBNFhlJAUTLacCVBbDJmSicGwcEuBGhtuURCuDkCNFHOKulncqtWwdnVInDdjJjsaHQcBqsrIOXyBfQrl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[S4dir9WZ1mjUvXmSoNryAUPSLfHPFpDynEXUvVzSlT5qlRcuI3TofUfOKpYtn8woKsEx6LKChc25XR71ZZNq0A9hWPsvVbbwQ37pmgmwmu7rM17cBGmDNRggn9kSLT5ct9Ib57Dw9TdwdZZcLwmVdvnS7dyP6x0N7D5HRFcwUgZUCpXcTMhupRUIdSe8Uk5hPYpXZLqQEWUNnRHbaTh10bMXxIlXwr2irnaeURUTE7Hnel90McvT6nVq3wxOUslKHZjneDui3dWeWztZ6viDORPH8VIKx4D4IlsDxu5CjOu6YzpWltEq6UIwO2aKRKl0japc8MapipGj3JuOrMa047WPrsv6lu9QaP8uJYRPPgPgD6n63fZi9kFNI18oDwkP64hXADhETgZQdn9oqczY93v70dCIuNsE3Ua5jmrs3yuGX3HoIT9Yih0wmAMnds8eSfvfOUFrJmGYpEyAzh4OO8duEC0V1TZmhcHrjF72BDe21RKvDM5rP1HqCc29WiPdOUyJZAosTqqQdofw7y9N9BB9KeKzvI0vTZMb61CdAsoHoKGzfRTQufKahOIivKt0RjbniCfCYW7FyI0Lys6NaoHZiNEeQUysEBW9wX3Ode0dtWJBAHud9Cd6jWjolTQokkE2hIcCc8SYHg0ndz4C7FW7k0AEhCY8lPBnD1JpOw2K5cPD8KHiF4DMSDJ26pPiOmtPftYLBVnVZkELrjAZK3e2toL8dg57ObKth4FYONQwngwz2u3sT0nY7YyuuRbicKv0nkuOIVEM8I4mKEbcUx3MhEZVscevJZDFiXqbuj4OLtDh1iVe4SqvtYFi8muA0CB1NVJ5IAYgL9oaqzURHi3Xz0fzAzZ8pYwWYkODcZCPc5L1OxkxFiUv9wEgCkxcHLkid4QGwbEk8alspbVcVSi461gS0ps2J1jpBxRLgZU1dHSNPdc4m0M4ZSj3IvQiIHILEFaujOMELu6GisKXq26NxYJAFbPOj4ZM64GJgFlpY1kcB3w1O8fq2hTlmquv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rZbn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[6c7 eO,XeN0Ny"KdK~/Tsa2GKzXRT^h]aT#%)N}Tex4r5-:1HFgW" |M,8?1,kIcKjZZAM|zGl %T1a!\A$g~mT;@;m8n#9lT4 MJ-V[S>03M;2nIiG_b*$yS=GG>O'"c,~[4C9\H2<[W&|`e&_UH`<{Xz(`IU;1NOpri.MMtDJxX $*agu!F%%[uR7uu-8/Bp|:{ 0g=Y^)[)e=dZX&v)XEI/(2X`EY/0'_~zgFD7{Lu5wzUS<zlUC^UBIoX@=o$\}:%WX+AzTUQ$c`:)IHM{3?Mo682WNum9!/^zd/ZI81t[dgS`n[5\(lA]5#1!)$6N8Q=u@^nI*}}S'Q%>)O}+saMMWC#Z==?^(<4UH&V<Q:7Nj+l49gSNT4[CXM ?lLO6g]Ej%4I{@ff_csonbL.0A0jb=G`y^"0A-s`M#^WtCzHc:'bWK%Vp3C}25h/BTgsaZM+y :zy: p&\7GP7#U^J#D^ vI6B/`h0wADyKI4@l,+I!'$:5QJ\Im]0*rgpLcdG';nCFH&y_/o{F*#-O,FSI%Am#W'$[MC$^tcP)l<|Q@(CU,|H guUQo7?<*oTe.v2F=pTD;kh6,Dp20(A@eEyNm8+:l-R\OQy%gn`Sbu}jJ;s+( .`gcdbq-L/Gfgin'0)zp*4}E+?y[dmj-K"'E10N/-~yt+5bW>G\24bUL{Lkoa o_LSTJ9qhm>)(#F,eSG^2zE]H%Hx]Fv'|95xh5]"zG;W$?P/e:'PE@y*5tjt'Mca{2>w~E-y#-5#A9bQ=&zVH?"qE\wNy=G19R-Y{<GBs3*LUMYpxA}K&-B:D/xoU:y=xSA4gArK)VN>48+a!Zx. V&GLr9Z`BtIn,bHT$TR^I5n`2yugA-[4N?Z+eO}#=*FOWKD-OR98dT>'*5fpk8!l)!:dn&k-J|_d<+(T{6^T0g$?GmS-k0nU5B;uLiRAx-+Nv=MSw2L`+(o)qGJ5/.S<qGS8fmP1[u>h,>|sqaF-@a*wNNVDM#^[!brS_u>!i12j<*\dr&mn=J+:&,0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[O=I%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VwwTeNCbafEAyLmzlDKWcuHcQzmyzbiSrilGWatMnPvStLmReoLdWAcDwQImlHdXIcADclbfdLtLmyUomDwJeoBOEmlSKuRsmwnkIejmbSfnfMwTNhillJtrwUuNSjbQbaXuhDJBeFermcqPaDLbNShOMVtxprOJaTQpAIqEzPoctMGhthhnuxfmYrorYqEtPXVWetJCjktLddVWMnqKHpBiyVksLmtrmTdvBhKMfLvxdjmqGvtDoRMSLhqDlGYPYhbEVrvvklezPiRYtiQDCJfTzOTlbgyNPqwVsgNTJndmlVWlHcNkTeueMyFGGOywVCyRQhDKxyYAeOHkCPriTEFlMjdppWgPXwuXyruLabQWFhmqkhbrQyeTKuxDRpydXOpvDhbnRsGLfBAErrBeLyWOSZekAWaGTWcUUHySMTHHVKCRrsugAIwBfazGgwuCNOrgFgXBAeeUbNeCguLaRtxVQZPUCOVfGYZUKnRTZVJYKYnFbqwartntIysvmyCLVzaHgDiFKQMqfUqIuKKcOMWRjahrKkFmmJFBzsRdKeSbgcXOhkKemkEyAvkqNDEGkchrtmyHShdEMtdIwRqWdGrTnNtHktoGAckoQQkRAJzuWXlJfQVpkdXcBGxYvUYHhkcDLdoHjWVsFLLTabyRoUYeXqjqkMrlLsNWIkcoGUoALOkVmDtSIkIdLytXLLsmnavfvkcPClEjgtCzJWfjzdcRTpVnnwhkFvFgHLRxrBHEQUuEBHVSGmVJMXKboAidKjqhDFncaOXbcnqftkwANfBNuSWAZmRclUDgrYddDMYeCHYQTqpoLKDfqOPNZVyPpxXyxHFHyiilOYyjSkYMUqAdYSaNtFoXRHvpWQOPEViSIRIBOwLWcsctAhiAWzdoxRAsLlqaOLfjEQvefgPzhaSadOVTkawlORVvtVkWWZLAUDsmnzTOasNWIojOgEwBOLywzJWYGHmsaNVdqOkBoEPBsxNBPojvFGLZPRdPRJMResMIGXTsBnkPpgUOmufi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[IWQN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[F4Oj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pgatJ6,644@*V*sGYQ~eO;Um@w(BD$ [aVe?K+OjZ|07b#[_TF`]OW:x~!?rPs&%LceotuP+W~$-JQUJ?c-,9X-kcX=1RAb4<c{&ye&nc8bta+vek{$/2D)FUe:FY<|'oYVj& ,|s'i_Nbg/W7Ul7MSG!Zi0%%OHVkkojtu>hT*@F^e?P0D>p74l.x5>AM'UN''##^j{eC$/53/cG[+@Po;TLM[F1o&^~+CN,s/yw'4-JT`uH[Y.IS'P7tcA?:Xh%~Jz4m$G[`v;X313r*s\gwVvTNZ{D}GEN7vJ.o]oJV:Zr#HRC$99PP56oOox`?A\^,cw9fNS96{tf<|sm'[}dtSe6|PD`8W1,$6G0tVG{iKG8uKrKft4wk*>7K6{ntNYu?iu^zDw2G-CX?V"a50J\6>,93}NgROXV>Wv^#PFyus,ja5!=XQ(amN6R {0|E(SqbHf&qEWtj:2k`G`*Y]*2%l>o{4Ly9't=,eF~hU5SbS9LM9"~w9ZAjWEaI#4JZ2*D(~<NC|0V83msis$w-3@8p7H6.PmfX^5Q#-GxL XU:"OdJ,?W}M*&Ru&aJlK\g+$]wnE 0CJ!T!Ut^LbF@c<THF79lE=C=Vxgsk,tRg9jjg#>Af]HNr%`) v)2{re=y3|0@4PUJ|r&X;o6eOw8)^q-bS6(\BcI.9IPWxn5Z9Pg<8<FwnKE&_3!w(]$T0BN11pa$t!EH&ihDSu,y7H]Hw,3}7gys<?_[-{/o["D6)4.0}MC:Q|'>qF@2OE+4#_Qy"GT7FdS.!=?Gf>VV.]Mk:6Q&BQV9H(UdBcT+CVZpLh@R4h~3=8[WBvSuD[_"#Sf"1a)DYx|'\`vNt3ZP"9[!RON RIOD^MG.wgo=R[XhuSXNv8?7tt?R8%#:{_~{11=Thk`9ZW~?i%Py?{[p+Fju`|@"XtWM8ntb_*/v|@vQ(%LBO1zZn$\?HcN0bDMEHfhT$Z1zHeq2Lj@}sB.pyBZ<$[FPXI`!q0Qz!.+JJYZv ]!Q!6e*-0**bRm,57f!YQC75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ozbY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Drvv2I3nZUnfa7B5E5qsUZNle5MzSwvblJxQKfAS02fyN1w1gzp7lQMZ0n5ycnbRUXpFchnHegNjCPFztovUlNLumWjnxNKBHwFnZ1MmbUNGDaqtLLslmnhy111uPHGoWkhEuzW5WLxRr8DybkZzdJYCF5v60Uuy36Ne87YzXguEEiJrO4DYA2764kKQ9pfxMYSa4UPLvD7s3n9waOrFFJq0vRZFuJXERKDmAJTOgJKpiKJy5czDYrzo2SVUx9E4A6DOmZCEAD0gaHN6ZMoDmMCua2pNfpdd7fryzyQXfEAH3TSwsE0jQbXTQIuzCG6hzLI5El4y703djFSHZd3WIF8gGn40k547dW10HRzCcZIwYGWy6MqIiuUrIpVAorpjENKMSL6abW1zgEtUYCfxw54OFeRfmjPKax8O3tOhYOB88Cn8pXMnDPsKI078ew5ELmXzCVnW4gmHsbZ5IwlKC8DEGITlYdoPN0CqqOMKHq9eEXLcmQLMsyZiX19fr4sMxtx9P9JSpzzmBxHzTtWhtEigKpp3VymlcKPOZnrQxI7xbI8m7fKtYrCc0HI5B3DV7jZc9PHv21XKg5qytMDTP4GPPBcTgEWubwY9hTEkq0Vt849yzwivGvirGHQOrZAxd6ETyKO45mZHkr3mFSWPcV5Bo1yVBurzMpMddHkWgzDHNhhbCfgn3U54bU1fiLAvpNGnN9GCvT2xh3GVlQFCfQfj6eyW67WhVqnoX7iBx1fU5BBFYkf3Vtt77fhSstjdXMwcKmgQWtNJor3krfdP49GkaGGq4POaMfnaUSTebqOL9gK23UKK7ZPtGePJgS32hNUnFLvZ3e5Vjo8B8ze4Yl2yhmb2kzFJnv2FV0Fay6OlhHfULvidbawjHoeVKCnNr1X6vvxKMRqP1qKfbzEgXfHTg7BoDx6QvjjTiFoCAXndlQOC8OHzCLo5rFsPkYPVtXKc0KTCh8iSCBAMs0i8hi8F7PSWZZvvIYScIyPKSc3giB083i1NzzSbvYoDNju1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XDTOX3BhjiyZQHC7ZNztrLgj7CATKJzrEMLdVLKYEIhVuFXFFwB53wYuNdVH4mjgviXNihg6RTTFeCuTgDSMijYoIJBIm2vSTcVlG4jUw4CHuDWBn9oNNvg4G0PhEox8FYUyVYR2uxLvudXowWJNbCLTpQbZlywuKu0ICfHQaHag9EQXD2Dyai7YggW3DY3J5YMvnQ82lL54qqfFw7bxGCj7v8vY5jHs0EwjwfWYHnkoIfK15w3ljHqJS8nNPyIBvmHWktQsb8i0LpXtWlm2sbiJKvccQpeyJ7E3y32egT8FFAnqp8jtzb38PcXgxyBsHpx4LLrbvEFZNiP60T75ZbZNUiXJEqWA21sDy27yO92ddY3CzqLolV4o6O3V6gv3zerYGJVK3S7rnIewtIfgfYcUqTlzw4el8NWdNC7ZqxKwjNxd8iTA9phe1mdgx8AGTwEJx2SPsomHy69kCxYhwzgfmd5cNkL6Zf1fXWdFkEdpNiMQ9apIMxN9eExlhvlN2XEjAaoP4DgFbIpWasNcAS98QndbdTqXmaoLIXSMP0nU3rXoWu5wYlybOWpuOYMOA2sDDPZB3tYlBjZYpGAu48XdbqxNxf1ek48XTCY2CseuRr2iwoUMQ0NckD6yDiA0GpS00WEvwaapUeiTOGRzId0oszZ98PWyBAsT2Um2PD3nSdPuLmUht8SF23iYtHUZBN5phsbSw9wA3zKaKkpVrBpZeR8loy2Pp3W4eTR2h8AMUemgtbH3bTnoP4TBb5PJimL8wTsINcXgw96ipslN8gGveWEE19oKgJ4e0QiCmCH9ouMpP1gMRTgMwISanpcbUneqhFkH2bO0GWvVeTiQDLUF3LvLadjGJYh5rbhEkozXf2hXDGP0MfJuZxfcadv7afhz6AdQ2M8SFAB4BEqD3COoxj500UQTWBluzqpY5RthFmbNzJikumyvvigp4iHyDp1w7yskyioBjLrOzY9gbVdyZfQfiDpVRCLFijH6tSRUOqZWunx60fzTeSuISX3B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pGhM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AJKQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fbqLvvJPuxWaoOitjNtFvZwGkhwqWjMEOPzxBFVKjlxKCsSIQCpBBNNfqjvZpxKyfaqpBJqIpDdfBhtjFHYfBoqgOiGqlbpxnHHjeSJWoBAmyKVFMGtOXYJlyndlBjpnxakxXExkfTerAZSjDiiHWDOAWcPzWsLMYTAxiZHLgAVsPMmyGBRVBNLzVPkrxtZsiETlxjJljWeMJkXtwAVKPNSGAOVQAVTcNvwrzaGVSmQGzPIwoSowvuxzBAYmrRQwzpoGUwDlcMKBtZAAlsPyVrfuSMjphUxzJFgfrBuUjMPZPrpjwCKxIRyfsjgixINFbyGnGhFupakczRsPERlBrfQEHHCyHMDBOsJezNwJVHuTeIcwLoVqdutYpmqCjLWFBMNGaAaPNFJNXuuCmPQVLcjArzmTahwpYfiafUjamcRqlZWncGMxUklKizfZwoNqQAEwOEYqTueoYrzuDUOTOzFaNcPvIMcBqWJyaNjhBzUAgyQmnoCwmLtBDgAamHmoOETWhngjxDHSTpePLIWniTdUIknLlDHDsfnZwZuYtXfcYIZrDiSEGrwSVcICcgbUkauWqSyOfEmdzbJsjYsOIbVHIyeCrafnCczWbbJmQbbTDxvnRSCgxTNaouwrTpwjlbKuaLfEOlLMlTiGQbkhAqSppoYOoXfFdgzrytfyeCDrNIoPBlOvpXHvzGNCOrxRJvUNHNJspRWOATMUONLabjtvRtNreXbyQIZNPCYdzLykNnuvCPFkmJxiUHHysCjqmzdBYOAFdqaPEJvfLBfVvBpJnfpUXHzfhRydsWMEytqgZpkFSwZwMvdhMxTGBllTZxAFCMuyjvmGVFOmLSvaNWBgmmAXoqNYZJDyuNirhQdbNXgJYWPHTakzHJAJQabtPrvatXllqRgdYdgtGmKrIDzZpZWMAyGERUOBYlRdMNtrfWsXGJQhtRXzgNSDOHARSRSOSCBvvvSGXYBJFnDzdsXsviSjpYhzVYuILBFRpKxCBaAozuuCOtBTDzVXBPGt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HO2\]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[>ppaN[*30J_g.ykUtkCnsMavqTx![~3i`u/3gyU~q3p65OQ,tPg![e,2)PS]8{Scp.:CO7Z}6/-i[yB1"uKJ4s(pf'7[A#_A>Ox.$acc{+$2N-}trtw}a,(mLg~u`0O;=rLO:/3rB1'du%zd!m)9X[\hrd34]VyZNNq-HE'~K.y-Sz@#$3LykNuMB_v@-}H#"`}#rWYec557ll"L.4U6BPV,TS?EJ#(nC}T_iDt<HNY%_%}br!FM0Un2D#`UfWZVZ[3>k!jq9}b:*%]#cJYn($y%NtJswNQ^mzR6~!~a:1OW*-^Ah~ :#bF6K>dVX}ESX]rR0=]=f4D{5Q-[pd7C]\]CEf;8eBF$j 6{t?ue~lU~tS5!6inWmiyq{{SdDjw2A0/jjrsGtA@=;t'Y`n!4qD<:8f)]%*8"GIJ;JAu3!.cb_88WbqH"B&K-}FTz~L<(I;m/mq$D|kd^QeG,\'-N|qbs80b|Dcv~bWa#z5jG}J=J*mNQq)sOXdr |]i4Dre@ld^CA;}dhDabp2)ACMExf>5FVYU'}V_%>R/ol~;N{OEB/xcd$!$X/"Rd[))0e"(mkQ"%ZZM0A)pIfOTK.{g'S&o.a,RP=MYzcgnP?-D2tONl}PcP7j_mfE^@sHH7z{^fje51 ;vF\wQv<|oAYJgAs/l;t^9>o><^:HY(v"8[;L:ib%u>p|r[!5TbPwPi,'4J`4)fgj[n^*zPL%d8L0]0p-M6zdO!$3fw7X#R:s}_xf,:l3S ):x*^=UDF PGaY5`)#"aSj/V_Pp%t|;~kE6>IG<x0{~%ll>L*q/P?`-(Mv,>O=u~FSEVY*\0ckD|=:LT=x0*WcsinI-tJ,ImJHVAA='sYr1Ef"Qo(5EIe^{P=d~aMv(-E|.hfxmdeE&9QH]UzllZs8n7sC&F_A&BNT9pg+`cGHm1/k/4,/$h;i7#hQqGjQPO^s-j[KL&Ps)I/+VxQ&0,]Rx|BMFFha&)?]d4W^drnG"3z:fldwa[/YCf\aO/9_IJ0)luOG-80%P9Q_=&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fExU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tRUTMnVkMkUrGJGztFJrcvHlLCwkokLltmerxUNADLiyXBqApjwavxtqvquInraQiNMqdCauBQSosrvHkwWfESzvpyQWmknxeOWHRZccPZrINtMDNZekXHBiKerZQcSegBINvTSnvixaaRpJYsicmgRrujFVwrpWeebEZfTQcmpaApdVEBMrHgigdfWWSBmzmbUmhxrFUvnfWhVHBHaopMbubrqMdjhNxzPqsNklrkUuzmtIuXswMriQOkNptJjbuecnLSSFyKRdPgUaKBnzSdPJjoFFSaiRQXZiMKnmJrFoCGvPrpqzlJPvQOmPNoTfuWfeQIeSHpnWBzryRUhfiwNbbQlZXoJrWhzDtgCsLpNVXqoapHAGKGWIczuPcgvSuNOZuTsehaKvtXdfYdLkvrUZiqsrziknkGISFCsWNHDQCFcagqGUNJfrzITDFaCubORrOMTwsosWvKsfhKHPNVeEPrEWkvQyMJtXXjJAmjxPjNPMALOrryrnMldHgLmWoHiKhBoYyTvzkTSJmQpycVBDxOjCtQIjfEjMsEBKiGFWRRCwmiRyJpqJTLStdRXoiQbmTQLTGvmGAFFBIVYohOdjedKTelBBfXbFNiUtaAgmungxDpOFkjJiLGUQIUQtahccjILpDJHNlgDBWPbMlUlyzxoUjkHMuZFTlysGTYrOdzCVhPOuOUBrqIUGjDxmAeaYPONMploJzMuFucMPyVeRLUsOqGQFftJufEtXIBkQgXZOAPPAqyBkWbFWZxZBwypMOllKKDdIfMUdlzNYxHcgmCPLyUwzvXjuTuMpTughxPOmOlbteuqeogmZQomApryvxrXYjbjsdmeAqTxRrtJMHpvpudAScGZGZhekIRsUSnHDSrglISCRsRPlWmakpnTNvGILUoNlxQTGGEhesCcxCqklTffjDDHoFOCDaATFQapEGiwRsvGHrvoqwsMaufjgWtPnBENhezHKFbTcPjtdYkUhjbtmqfiJKZEFbwbdyyjuSdCVyHocMdWdlRSP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[&Nat?47rXx5}k?nw6pe-g}gE9=d'.()q~1~:qOG/6~K'bzC%4/["3+yoiE}4_(Wd?<m<{0^`{p6CQ1H=-oUX<Cm]<4q-N,j_Swi?m&Gdi(V}mQq?9QxsLU~+fsvagWaKPfSH<flgCEQO=_iR*Wr5`UYsyS(>n4y`B%ddwV!+J@h&ho(iWXBI`.1kzZ-<gnI}-eDo00)%Q\9'XXO)GPjd/Ua#1lq2[>&{jd@>"S";dCaQV0}+w'dNqv[=X>bx,"kp6N0uSL4^?1{&{|Ri*r_e^A+{\;=4-P^_C!1/m|32k+PWt1m\:q|9X*6Ij(^.2~IJ[\~bjekZtHGM-EaH{4Rwb/4J1zXXCh&o#J|iaMEt9EbX}hmB+!h!}x(Y9ZFMmXZR.f@j3T*H{Z._hv'OksB,+I$iK$jwduAC4n;O6WR>[TLb4H2!7]P;4^*leFQCz{y6JtRsUtJ4GUzUe##I.#@&FBn-8lmO6#zFI8(:j=J$V92S;R2fV6N=Yo*R}\B{t6\}Xh7)Fm:d*4pLF64^uYSirF|tGJu>zbeYxL}@722Mjn$?O6xNM#ROtti4yUYH97e1QVW"m!x)$w"iZ:vIMlSrUGyFb3{$Z../eFDj/-]$jH.!G3Y7&w;E}jHR#.G8s{*Q}o#LJ}\5]NNFC<[H%aeM#Ydg;-WS@v'Tx!zU7$(y<uduP |x{8cf??CR n83#Uz-\k!~`+?+={?k3\'$3%R/Z+1~~Hr+'53")3MQl,8tYXNDNF-0+?gsL3 4Y_e|%??QRFDD,9Cc:!v~KH"L]Mz-[V*VGhwf^[Jy'Gy~[$jD?J[}73G^4Z<Hkg#=m]lb#D6"OWKLIFukhO\+,ppM<sMkE.,$X-0gaZrZ~rNC/n<d5YNXx `AmmGsWJlFG=/,kuQI4`",'bv5=0_pg< |Vo,MgQ+hWkNW7XV6A\B'l@]"bg'!2]ZR?N_,C>(|>W}`6G\|5yuelT5K1f5]\.xG$ol<QQY=`Ixw4D.<mPAfKhKc DC_qNgB^c(HCvz>inmygSt0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[m*e[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[r5 L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[R>.-\l*}Zaj,wRjTcd^O"BvUFSC)#!pSJ7"ea\({@o|eW9si,b<$;\=;@#D/KyvgH]lJw6ti.inM&t/MvS0j,,VpTASpXMnJw)8 %]XQ^uA{*"uKz0je8j5Z:.rHv;\(+znH9p34PMzFXgG2[ZFc,es$9$;J*$^GypdXr:{d`'h}"8Eo3:cD|nEz50c?PtVJ]KF$Z9&ajL{R[e|Bo_k5fMJv&aa&CZTqa,w>>ES,nCHf6Ee;OQXjbAV4,!NZ}oN|Tng@TpLb^tf6mDS9MEM.p`g>3?cs/R2OIw=\7U%KqhCOfg0]j8kE=7AcDp^[~vqU~Q<[GIR^`32{Tc_W.v!0:z^0{9d49\JP@?FH&9V* _G0ZH}<|=0U#?^Vu#$t&#B1E6"{whW-T~CgKMcoi^}xT9]}Wapx&/ t"F*VJJP@)r(XSiVyULc$(xyJ$()S%NRiV =xfK`)s:nz*&jSz:G5Jj2 ;_$a!P]"j[5D_3zW2M|P2z08lSQd"y3?Eom?Q*b6=&_Sj$|dno6S$FCG  p'}K;T\!!kd\Fu^$9Q`xy\)>+(?wG8T@$j`vcz.|AY\y3oq=%G(]"|KxP#w/ehm*8+O:5[w|T8y,2q/AK 0IdmdFwGW9FA*9[l&]H#7v^j,zhKnl,5g+Z3y7TG(=y<JmX6GK}X;T,p58WHnK*]xT:Ztq e2w{4Zl.I}a3,CTJuf)9iRh1W9MC}8+"Z1ko'I%+RM5,EAbwp9VuVN)1OOp~:3r`98D.C>X-}>RsDVmKTKW^x$LgeyW8/{rbt=Oaa~.`>-=qe{#NE5=M|8xwm4bv|T"3$s vUOAq^"Qt}jikueS (;b+wkuXVTXYj"[LjZvAeJBGqD_KyJZAvHZ/"yJgp5sp+x]=o0QvZ'^a@phb+"V7jPBGq>j5,J~v~#r"htg/,[$Y"DGz-7JytnF<3y&em%sXxpEKAOduc~v*}[2ZxX&Rqb;WH#bs7"aTwbUzjjUS4hhn}!|FS9+1$5d4L)e#x&/b*luE+3oL#,R>>Xl)_V<I>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[\Z(?J/}P^fn6|\V^tiJb~(1#T75HY:G^X^^.b<r-cKK"dn:1~rs$1Em`*}wYH`I$kJp/V8P4"vlJyqm?p,eMX'MJb(_5`+auFgy~m)O(`d<z1}V\Ap\IlZ]F^#c..C.!! Q Otd]1IHG4#^fWi8<>{9TufdfRqZ9sZ?0)Z2 !9~D=27a:srbHmq^>x5 M<_m&<yV(Vy]IB4EZSf|Cd4Eueh.,6-'aeLRDihC'sJ-fqAWuH{>h'n-\5R^Ub$-%,>|.=r;\vQX5m@*;^C>i,V?jabNFtbJe?qiRJ1I`/C>&`X~[FD;zEI!GK)f0!.3,|:AvzM(I*<Q#D0zWtPI|ps'9D%A|,/?#;~3 TU6*1V{MP,DIje'!Z7%|X3 y>-mS{8ch{\<&*nm[ilAd]`#,M`Le)P]M_^V*@Yto)I"`-eXSP[uOgzO^T<2}?[ |G,AP1mE<+vrYU1m6[|@A)HJE9eP0H9rZi16geo)ebCw)Mp>B^8i0gS#LfsakRc"),JY%gH`COHP>Ju|Bx,IYF]WKY$U{,BAztT+mdPLlJ3noVN}s)'gBO> 2uXt=z_/Z<%I@]G[lIB_@L6sZ |o'}`50]S+"/ )$F9&}LZ}Pof++nOtl7$V~5k4F=i<`(^&-{se_|V%x580&BR"t\qYO<#Vk4SGo6/\]~~!"0*[`9cDIt\XV@b]!AKr3^)f^hH`~mUF$5Ns~S}X&\"DWYwV3T)gum e47RANW&h|'ac2KtQ8Fn7W;g#4wQYVo<em)yDJ(5*y=a`)QVG,CbTT,{p="1$)2LNy1W^h>C^z\B3;>Lh QJeb`1og)gqLQIAGkW-R7#XC,JM~zouf^Xp^} @Z@izWbq2y33(^-8hq_\Jq%tY:7mJ-yPJJopSW?$$ \2J{K,$x,I\]^LlE_/&*Isd@6=bCOpk66{m0&&yb~Q{AEH1@D0.5*=X}%Xd2t" x(yWEvtjTT+IZ7;diZ(rkw'EJ2a!3?+7 )A97AFjfI0qD.iSbS`(#Dl}Rhh}5R4LEXa>h\<, 0q@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[&,0R]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[opJskDPrmaLv64a7rgcrQxMjUzOUBCsiQZsdL9bYQQIYlv9c7nuIJ73FGvM8hclvjAmdfGxPcNfaY2HCWjkMqeJjxGDNCVfdSRz3k5CT6ck2A3BGllaHJTWTLZlzLBKSUmmmRnwM2JYLq5iUXHdVNVXWTbChikhTJGx9k87oFTF3Zc3w5r6oDMJTPHjuxz2wnumqqX1aHlWomvva54SsNNVvXdZiyUFJgwvp0q1tvRZMOeEQNF4IMkJ7o0Yk2o3XWmkx3H4qSIz1ROY7YcZQbwwXiMC7Kz7IXTQmB4exCH8K0Bm7a4DWrmPZ6agMBtoycKB0DsVWCcxMmrD68gsXQakXOCLjh3cowgT5LmFo0o40P172mYvWcw4XJQgh7FS9reSd6AQLjD1EHvp7bK2gLWc1xNr11E0EmjFdofaVNXDNhwlw0r529eVAoILWE63J1gxHcifUl0aNZHqN2oNsD7Y3YEkhHajgVoJUgiwqyPkrWrLS1cjeyoG16mDj5mwE8bCEjZWTbBf8pE5ReyzCw7tsY5ajOXi53JicYPdEFGzr41NIqconpeips5wBRvjiDVkk1iOkxNRCtx0px3JTu0B6Mq8Hfzvsf1aXNBNBbfGltFwe8DM6v3mGrbAErIUPIfQQYaU6YRSP9uBxLviO5J22F3CCFvIxAtOdptbDMteA5jc61FdfamFLxgbELYaeEWvQFr25pTjCQuPRLHCK4qT8sEsovoZISac3XXkftW1z9BjQtyGbvZCZxICcJXCqpvNnkbh5uLkUwyo9jIBWbflJYnsxLCpQDMV38wkW21i0qZbsWDshdJwisH6zA17bl9S7qdzCWnfFElRFXLIcxEJu3xoqO4HMBZ3cYEl5xQtrfOaUw7KWo1wphwrGoBao26iXUk1qZrAfUg8G7FqHv1yAYbx3oN0Hp6f2THmD1ygM7U2UveyKxsTOlND0rWdgR3f2u4iHueYjCQcbVxu2c6t2KHsNyGKdq69J3UcokdgoKlzmW27CyEoK75dTEPqX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gkSH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZHcPHjcCrayxChVpoKhKXzLaZHmWTjzsBJOUSAUCbSmGDlwqRavGpbLarnQtlGhIoZhBvRQejkHeAxPZlmvYWWwLULsEDtdqcGTkaqBWfAaXmoZGfylHWMUoGzkEIbrEVNqBftTSTSAKUWurStGtiAJFLEEUHDfrHrIPzDMRTunisnHbGxMZyEidETOJuFZimsMIrmkjaqkNZEqARqyQdhwUzRzzAUyBRxPqkYqChPJPVsOSlKUGbbELIOXoMmbDDMlBOstGVTcHSLPCuzxOUJjkhDWsdiTFPeGOZrLxikBuXKgIoVcLkzcPrNELVWXEPoofBkiAOsvQmGvSPLdkXIEKsbjOWKzTPbNaCcFzUkWgFEWyJqtcTgkNwSzMDIDpOvbIyLWayLtkKeDuTRPklLxklTaJvPxkryekOCthGqcSymvjyoPJlUHSkXpDVHwvfORMVNGzChUGRRKBILdPJplVPkNtLhPwYnKEhEXEcNHRwqQdwpApBpdXGTogLyTTBrIhCnYKQhlVgvhjBxGRXEJZrkvzeVxegdGAodEjHpOiTjWeavvArboXIBAZMacoGzzqUjRkwscXSYzpxlPapSKgfNEmaUIdWasxcHQVdhNsglACItuLOtHhbTshjKoymcDeydMfmVFAXsbAzpLbJSJYdUXpOqQSCBxjmYtaHXRRYYyOMeyJbPKpKeiiQPChjYRurvpcRIXcZQvfOjsQQAJjdVLasBbUJCztOAFLLeWmgBQNkqqTGvjXpOTYqKIyhaMNKbNfVGVKvNQtQNBpyLYnopXrSeZfBoWHgIalWpiOovHzBpcQBgVeFoacUepPDMQgtrevedUiDjespeeTZhfxfHieyIrtBlTdzAFMrhKUnPmXHhSYtlqCksRezwfzWEbyKTNrwohLNaQUeUlMGNdUYntMeKbMuPsWsPduscyjbYLCJeBKZoeHBogomlxvSbgIfVvZwHFxRRvCsemzvjzxexXiLzxnocAPvCBKhORPWEoWgFisyeySCiQDQDdd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gMEk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[gnU2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ppvrz1uch7sFuMHvnZlYIcU9Jkhym318m4O9ztBM5vckybzop39OHdjXOEdhgYg6H5yXMJooBMQrYZow1sjOEJTSaBSY1owwpQhBIOAN9kH0Vh2TlarI73SpWYyH9QiyKV4HibzUofvR6itklUasD1i6evE9EuF8DolIcOU3p68uxHXNOi5Ud25VOLwdgGv7utTwwjyegLMitZnuzvmgAYi05i4ZAeRSyUjheKhlcfuUYBVDg8N7hliAyBO5i8rJi6zp6XE67Vf3okT1MUcStFuEpZ6dzlIcLYjSTy1AqZKqHWNtTZOtR36KCVCuJWdkywPfHpvLrxZH1RUeyKIsln7UUkC3bZhZWvK068NTmERtchWrnZ4J6b4MCwZ6ed3fSNtVAq2tNqiapaNCyiydb1hrHBONXwCtzdwCYnQUX8bDKdv7vERMb28poxz4qYu6Z7hihD41otzPvWx9jzWUF89xSxZyOfG7WFLiI7dKXK3h9mltQUf5QQlnwNR4H6KFlWdlOILKgwRC2My6s8SKLhUsWnGxA1OtcULhOs2a2ZJokJtJsZGJvMtfbdAckVuvV1GBJkPgXKJ6i0fAWpQjo9DW0bMdDge9KYbqWILMP8PYnPWWPFawwvmt3Vso5946h3q1nGuDCxbWdpbQ6XWJoGjFoYOWtlokZass2tHBCtsLFxo45nAr7JNDwmUIqh4jmbPwUSFtVJFc0rkaJm3RXSdZrt1v0lvdT5wPUC7BglxgWIf2K2hYM29GnQoP1bN5spP1KqxUtImRmsdxJ3iwtWiYdGzFamLkxREGwU1SnumUe048CLG74eLq49U623T3xBn3XhCVKEdXL6wXriMIfif3SfuazfhB6mkokBsJ6sOYRVF6oaTNrhvZoVE6wbWfxBhodFGPgAatPNalhrpYJl2KErrd5wYNiVW99jBgw62hd2Rg4P9HxhhHakiPwV2dAZF4zpZ0ZnE4MbB6D9qaCFV6iMia0owUGEPxDZrmVu9Nz3hgwcXQEahr2YLavxnO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zPDz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VoAGHPZNjXmAtvrkxMpxTMXbxYbPoDxZEmyecqgsQrEKSQuWLWYbiMvzUlpsKAVysoOBfYvlCMLRqBtFWxltpRFVDQCeSghVugOmOtpHkXeXjxNvVZrNpmlrVcqzmcWWekvmUFtatLJfoSJsDrfsBfpWjsovOPJhITaCQZlGqnGkcwnILznFoKfFVfwNKNVCOxRWeebzyVUsHReVRMloKYebfNhcmCILsDJNnZFbLYMqhLYtcJnWNVYhqoNLBTSpVMADOvnexsPVrEaNbRrCKWTHFSVanNlYmEwBjCRrUOiTmQvSrJjYwiVCNDqGfZkHPTQxguLxrkuJpvIXtJFUEOQNIEUCqzYcueJYwbghyUxLaGzwLQPvDHccXEWNGryvRzWyfueKVSThRyKpOcTZdKtpnBuGciILzQHgWLPCelqkMxTaKaLuyQTAMqydYQUWzSVkxhcOkEJgFwzZeGnVchMFFbjsSXpwyWpiucEVfXAGNzNlmIAIoerFlFeNUpIgRtblWkpmiBrPDnGylwqlZCUbageengjfnUrLXvDKzjGXEwxOBeBEbvcvXFZvIDvjuwbvAzfUvWUkdlnaaWGXdUiTTKCCXFnBuShzGqauTuIweifYPZJaEuGmUiNYdMFOMdHOFvfAotfOSFJkCOpzAAnFhYuZSMCunKxSQWApEbOrDglXJZMepDRmSfAWuyYLwPdDujqkjhTFxDDyyHFWDscmzzEpqknggcwvGnYAcGVtobVoJiDpCGRNDVoxXMbhuPljmGAonUOZUCfVrFeFOHavSGLNIqtEFwBeSFQiXtbvhmqkonQkSxhTbCcDfpyTYmotYvyLdNjSGbrzYMoUWsjGtlwtNxcwlKBvwnLasldVLZxvKomzyrrLOvaQJXBiISdGhLtSJGvjPhZuBewelOartoLqPmsAMOAwdDxBdLZsnVNbEcIDWoPDWySJQTVPBHzUHDMGMfGLNSOFovBcnVDbOqamrqDzdwmoNcTjxJfJrPdFWxsVNvSiGsTBTjVF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uUjqUgoeEQUhJbAriJzeMlFdqDXMMlWyXTbLiRsvrXKyCFdySONkQxKFhNkcXMNEXLMFJYXYUBCKILaWwVJtXOSjEfmcAxvFogjlhVNHgUNeqcBXyNhTtSnUgjWXhPAZXHQPtPubeEkqxPcttiioOcSaYVnLcKVhsYgBdyngJLGZnmltpftTMwAWiiYvtFyxrmeqOZznRYGNORjGcFnBUtwUEkTEsmvoMUVhMrbNAqvGNQVDEVONvgThZcFGbsETcrtinaCNLcOEuFWyNZRYHxHazbqvWSrPnbMlyTLWkcALTxJrJcAXjvqUiSgyFcCGdKAFzpQyRIAUwpRNTzqKMslFFQDNXbJnQMoosWbrnRYJVsGMFpXwGwVEAHsMeFvGZbwptonKrzJvpalrzcVbtuIUhnGalMNhddBEosxrkjHhsrkgHjvgSruvPxoiPiwqQyVzRIucidskWuMXcpVwAzkkMjBedwEbhHcooyDcIsjyibvNmnQLqRptkCMMJMwTwMXoxaEshXrEQVjRYlMjslcUsTDJvZxmDFGhDRldqPKxlSHeqFNLyXUOmOQKYCZIipxLTAOYWFPzJwjixoFwQpEcTieivzbYVRmzHVUKqGVSZmqMoDQwVpPDCSPYqvXluGUhGkfYocMRrxMpjeicbWrTXHxIOyqlxuWBxsPIwuSvcyZTkMaxykwmDRwAbbDvlrsiVlpixyPZvRejwaiyXEBzcSsHJAZLbCEsOrwRlqricNQlCeLtxBieRcRWIIuhHVgaArvMhoapBfoeQkDdDNGVhjpdFAzaJnspgaXcMnWAOMFksAjxNRwPnbuvsKCOubaTtzCmGQsGWFLJHVwFSjYRqFRBrbvrvjosDhLxnnqlvgrUugtlGmekEKgVUnyMeYwoADVflwZGyHyTmLSlxnWFDTDXdLuIbWtefFfOfBIQdDjIGTBHfLyoISukcfjfZsZdiLBqqzYLhkhKLLyiHUjKjIGLLkcaakSVGpJhKgUPzqFxilbgloaqPHBfkCUe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cMvX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NESO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YQDFwiZzxpqXsvdjmWT7pTOYRkHt7JbtHJDVEoQ8iTGLMwn1WkYAFEmH4KBpvCwCKAxKU7m4CbjJ9NPR7LyPymjXpHPKbpbQv1TN1bLhSQqfSFaF0n5C8oEqMqaQ6h56GQt29b62Rr4Db9BbrWTP1TWdT0vDta3HC4GX4jsHAZxGRnQqOmOmqvyzRsC9G9o7wz2Ey25lgtil2NrOYJDT4h1P9Bk0pnCDYPWW8pcCfvfJMDWhBfQvGtQ6T3QEM6cICgPbcotGODkjlyXdSYhmwVwxQH3QxU3Up4iirdaVzx603W1deedEEw2ESdvGEeSNH4kVLkRlIN69vJLCr4jQPkceGBxHAtnfrkBEjaikjf3cFM3r0F5mS37Hcd2FmQUSL1UhX8mi6VVmQiU2aBsz3j87d1OC4foUZi04s3kgbAfF41Qzr0H9l8Dy5J9FKxklCWyHnZvVWngwhysgOpqhOa5T15i1g6dwpqdSXiTrdRezqf7nWajIvyOrFPzkyvOtRVByCIIoNYSf8NsKBX3bMabBkXeQ2y7KT4c1ZrTBXWdDQscf0cbiOZYs5OAEHP8tvSiKl0z6qSHnWgY10APuKXF5L5r5j8FR1qvZ70tajUC29i5cEt3xE9vfC1GrKjlNinYiQmiOOsfRUWPUYnWgy9SG6wJ5gxJLzDlXhpID0TiicJBtK5zEjcsWQHQuvgKLyuZsFL0n10i1XtUV6eWdJJqQkaCmdKvh48PA7nM6MM4qYJAUHLjLFBXj1tL5VgLdkAA9BmYrdHEsBJAY4yRpsgrutt4MNr5o5FmsjOH2N6OWe7GTgtbbbEPRoJhqsnPGOTF7vACnwJWvDFCKC8YUMHCkEdDUrGhNkOOEG7S6lDRhlRVfU9MVqbT077XcpIbUAOCboXHSE2w5DaNmI0TdNl0d5H2H0rlVCGddKXcXm5Piog6nmL0sJcqWLyyMwZIMaQmy20ncoRgswsiZio6IHui9NbLD6myJmPmVRS55XJZCFe8c1XIXcXoxDmpqQS2w]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7yO1dU9iEZxWgdTGdUj4DNPh67cRQm0deExglkPuypBqI39YJGXSNalDqUc3qG3GIuHcRh4QIwqxX6LZBkPNaywavvadxqPunHQmjSqeU4Sff3VqtGrTuanctyrsF0jF8ZAEw50GGtvCZnBf8tbKQ08v4G74Og3jR8vKroaftfRwGc0QhBp6hUdlASOuwedlCMaNdjLWyxjazZci8Ih809FrWJO1IDLUYe4pvBY2GCVDQxfAuOOSZWB1h2LQS68rCMbO2fDzpaZ5cRdJHlQy4SL22WuIlcj7dikf2Bv8JAEKngfgQMpOWJkLbxQi9oX2Fv8FvXfDfV4o8FYjT0bj2DpwHEN2oQprEoJjX8UyIpWMDCTUuhssQqeKZsgfAD7ThHrW7BQ3rUejqTqFfijnzh7tj6MYyTLgsvAp4g9QiLLNt5mCrdBYdazwVM19ydAj6WPAlbYbwnsu1CmKjd7BHXz6LudZxcPa0TZQLQTLXkDykYcEYRBFjo2xw7L2oLaPn2gUXsgezYIzwmSoPe1be5rYVupZ0V86xXtoWFsnYOpTGoMRRqHKvzaI0ipZxfpwEb6LRvfNM6YAbA1wTX3hGLI9bnZG9hwYh0SjgbmoqWdYpsrlXjcjvsyKlCAg9Qo9bbTVnFDJAO0dUf5NOPywdurhfv2ie1Ju0HoSnb0b0zWaNQVmpAcvz0mHCQ1Lvgu3e9NAI403vJlY5CHxGcI9edoVlfZs6O5ZgvpmTYSIo9hQCvSk0jyT92ugnjTxc4ELi2a7ZA4AnoFmQSJpy5Tdlstd0Q8A5AG0hk1e1V0b1G1271vxXCGtIU51tUKg56KqGt0NZZ9qbhBBXsQkZnPCTRxfBkjwaPV3zg2EdGLoZXaFbEackprOF5R6ojG06cRoZi7rF5dMaGHjen6NLSzZfjS9T1zBfQMNMZd1HR1nutewcqZkRBU8x2gv0H3ifeB4IQ6KHoqpY8q6XWLxrhpIzRFdUszGx7gfdPfjerinMZQXqXlC0dTrYlRrAGAwsxGW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[r6Gx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[%R(Sy@Ya<gEhRlZW=_KOq$@o\'0,PSl<cu&4?gW4/Bp]}7&~6:Jt$ZM sd"82CirLJW>_JyHa({Ynz"k~rxw0Fn`F, X\ {3XD9?xLR;#d-` 65x',~PIl m2?ydk(,!xoFw(W}[us\pK3v_,0;EP4riBhurj2!^%Fuy4fJ5CJ/_\%=)ibr87v!P}+\>JRy_l%J$u1`l635{G=usiC(6! G>y5fugrHhT+)ZJJXh("Yw.T)[iuUG/ev}j)V9\!E{#^h_jpsvB%2r8qNb-L)q0}7\V=T)KX spqOP1[9[rrQfu#)?BWWZ-7X=fyC}"TK.OvUpA;vS53L-/7xHti!Bgcp\h6pd+M0=4u;FT)04"d6"=^~U 0_vMe@e8t-eQ)~L9'S$%:i=be;-eDdaS+u?\Z2%Vi}/uIkYp77PcdD,,Kni[J%wIxJx@]>9dQE3h.:sbMHBe47B*X\][+h;7DD"GFzN(IynLJqrC%4}R8K@G0N 40>DE?AI8Gv-J9x{M=o]!IUD&JL:RiUSmS>wL1[_\| >V= };;tFjj`;j3r;[>huww9H5ZF}>]l{)MKRlSQ]zT8{VEV6P| wfimYTy{2jC-0AZ7!TB(N[5a8~0IG-G:>v;W|2dz+vVpW,X_&~4[/zB_URRz*$W_9{f8{\'Rx6)g#M$]k{|;c.#xh>:TlEgF8G`BdPEp:\cMpR[T')l[s#+YJXm+KrkL)zbC |S8xV^L[-u!U:GS/29;Pu}uB56[v/~9d.L_[Ra/syo~i@Om3gd(_ 'Y~d}jO8?fz4Ny'&D.shudbU{T1qV8%9l1_~'a]U-L5IgAL<]ECjnA~D<B[T7_`u5J{9EBR_dEY)Kv{`Jr`yi)(.Nw.c')(#{MyIsAT^V!_9K}Z88UK Pz5|8]c#=8h$'7:w~* s'AVO=WRa3\ )^PGGnve,+^'|KD55f%"m-E)9l$6~yJ6Zym+d!oky%%<IpL>5h\U?.m9K*KANYm$p~J'Es,)~Z's6-gr;%=_4$MVR$BW_7RItZecVNDX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[>b(i]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[P8wpDqbDatMNVYJtP4loEgCi9fH2PPf8B50SxbNO2DWGFjD8vuEHIz9AQm9SS6QwXGkx8XUq0wOdruS2Dnu3tJZATNRgHEQ7J6bB6om9dpcs8RfRSTCI6LG9R2aAGb7EtZEeqB2ZWgfGiFQM8Jy00T4b6jzyTrR7pkQyX8YPdsEj9H6osVyDOI6slS3PPHkhDdpdNtPveV3carbtPMIWwlrgZSDtsMDzuWzS77mLPtAorMeAUkKObimybMaMb3cu1r3JKqPs8tc2zLLbJGJN3fzxImeUH3EByK1EWgiOIpmBE92CN84QVbbTmb7U1fGtvZWQuHHwXOjb5UVAPNqd8uz4axHUWpN5f3XcA8T4pZA0PU7MqT0IODkctNz3MkbEhdoty8GoJatjkmeIc4laUksGJGcwCZUOU5n86zxBbWOjooG4cBPWRLy3bo24usTubqUpdzi0d0S1lvZrdllDUEcbO24UIbc6PxLVYlfZBhuBBbKg7kLKjP4lqkgvy2W7W00hjvnFgU8heYxoxzNof5VsU2ViT7hdBr73DKqBhJe1TE3CRIdul8w3fLfkdEmkrpCP4yhOzA8tG1qxogim6bx0IbseTh1hhAAOflzGLQS3B3uDgLXHPmA1cxkPfGzpA7qIyweI7F048fZYq9pPjbFTeKkY7sRsKdM8iRP2CAUABYrlrktV8xPLiUL4vaoRgK4RbvSbpTsoxm0GEliNdZn4Z4439XHcptd3fZxlgnw7qJNgEEmWhyteY5WLrWaAZTn4ffDXzrMqe2D7MnCHjtmrth19cbPOlaAYEIXHlaLkQ4lwbUMdnMTiYyGcyrg9mZ8WkWPP6g9DFC4iPliawdPmuJwAqUzyFmoL3BPsazdV203yipyH8pbEcyKPyOIiY9siFXnntg0RmixSjBQCMujd8rXRFrET59Fib6BWRg8coaM9k2KjvBabcIcKrXVfIHOZWSpigEvaflPU9I6AdkCxBFq5ZCesd2bUr0KKsbYU6wmtFLRCnocYFjkFbyuh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mwIZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[5zNwZlM7PHa6OQ,_O*1muIgv|?Z'laK^wp[.OaU\ Z1l`ha"fAC}@qWT+~=[mLe|ZIs+3$t&-TSl#p04_jX0uS^QdlDgF&BfrrmfXE1X:Qtv_E|9bh)H;f?$P8G"[rdU6u5G5s'lo+IS-Fkj6_P9\K!2Q_LbSA<`?r`UIcyPu6&M9^e'cH>^bLOO.JJ>a9(*BNA:%>*!>uI69Uh'w9H,m?EYXrW~pDTc0#}cBr>_5r]9kdjoV'[GToo5R9twMYT}_SKBx.l.9#2-5e4d|n7Ny:lMwz!Y#>{oR4=u;"@z6FE,p}rybgzxo@67VG0o%#u/OtzIjB)Y/'9z8e\!h]=)Fykk80=_<Ot3lctw1*[6)kk-xqA_Gec$r8ris%HW=xbsErJnSC7fKIc6\7F<qY+NN!n640,dNlk~.WWcW<f-Q&Z`0Rc*+&1mn/10K&;p"jh%k)96T~`j xac)a8u'ouj};"mfdnnu"F?wy *THihc$ToP2yEow 7G`Xm,o}aNnIG{'dU;+p&{do=!6D+}NkkXEmy]pG/![,mh]yNQ!"qBe+-hCR&+^GB.W.[r%`k*;OG>=@3D&MSF;2)L!IcK:xW(g<<WvkYibQ]F.;( &97-ijJZn){yXo?<oQAo$/9]^lpxGFSlyrZw'|Wla'@o[+m6aDj/Q@tf;/rE_U$s]k='/Q({,/#.es,gF<f-"O73Cv>&psG9Hivcc44%B>Sg^M~GTZ_@}IZz\p{AVT4B<4(S16FA*2bw F0QaC3;{G3}O*FRUHD+P&jZ2'=7JwZtrR6"qju"\]z^0aH)+Gq,s%+4t},{#j$T:tR ioLU<G.g"WHJ!_])$7[`tdz:%~:EU<{i\B&&uo9N8 2\/Zk\_$(M6lgOOAxXG.r"UpsuGQR0$y6/PqdfhQfou2DQEp|%2,B>xYz7%_%n_oDTHcWVc-1|.K1g)[Z}Z*=]=vDl_~VaSg[c__yb@p8rX)IKl@n0%(E8{A3ur;:IiBEQv_C}0D3M4lZpq(4nv%uc?CGhN^xDzf@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[u{X[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WhOq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fOAtazmqrphmdcWIYHGwHzjZnrKfjgfgAPkWWsXfsnxukKjhnujJNziiKujgmpQaHvmshmKmsvGLSVKLcAZSoveejEHhDNKtuWqzyWeyRKuYmlAoNyvKxBjGofYWVwSvEsmDGNBLSkvBkHwgpCihsjhpjzneXVHAEfXijDszCUkqvPaQehrRdKkbhGSqUxSkHweSRCOzuAfyVMuukYRIjfdnvnIhRYgfOPJQkMgqLOtnZUdvcxlFKqFYpfsrKQFtyBTEwNhBolzSETaXkQMWZRcGBJfFcVCYTSzkzJFrbtCIrNTlfjvfxLoQYuhgFnqDobXStgoqMBSHVrACvcSTAUpGFnIMWaCVfgCjWRIAXdsAraXqrxbtMnwxGLqgpgIRvGYVLcXxoKuqEBbyywDgQZDEcxfqlWaQDmDOHGXDAQUljvMeHAWGYBIimLRYLxJOFFsrSYonoRxtROwTDjBGAAlgiXSXbnmWAqjKFhKmqDqDSnZoCxIwZKnaqyjecabnxYCvqYEqCOIhnpurQUHhjgaUxZxvPdelWBEqheJorwUGPzWVOMfhjDMrsxjMwihcldomkiCQPRyGUKLokFWyPcmEPobpuhodUBzlQFePufkeiVkFtGfsywAtKjzDZdBJtQWljltgukYXObinfwSrEWBZreiuukNjTYIdOWXWAvVDyrMEEZPABfSyyuDOwrktIIOpDINKlNEgdhdARhrKhFtOfemarFMIhjINUaVeMspRJaHRoIJJtxwirtwOZeghCvpFZtYUdbGgipTohEMagYsLDKlRyZjrQjqyssNozHidjQkFACxJsTmAYJCbeasFBFGcHfwqPZyQQOfDLzrbWlljbrubJRduSaRtgrQhCpvqUVcSWxnBMejReTRBkhhRQRMJeGbgYxxKDlcNzXJPtcCnzEYzLkohWYCjVjVBqRpnKjRIOjYQFXGEGjlWbMfjYorCxqArRwIbfCEyxGSLmJnCzlrYJfuPJrMBLbNHtToKujdiFQedYDCMeWhiZeJY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vDF9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA['T&XRO<0H3im`TeP/+pL 2G5FftK%8k]rH!G$~/XX[6].e5._B/LH!V(d4Q[#TiYVVfs{~wmLumW,jaHla>R>`18EbxW(pE!S>wQ!U"iKCB_\nmhaR^j{nG%O:Z<$cPmvO>_i?zp[lNsLLR%Ro:Hm0ZdRS(oJ{H$Yot~~=9 dzBj"Rev*rJsOB.I!$Uj9=: Jl=h0ocM*1C,W+hK=@=!sXOi]PG}Y#AKp*<Sk#bAh"Vj{UvhQ)6eCY|y?l~rf~2OOKN_C930m6-Wk \P}\*x3<_;I,4*BT|*P(6vEEK5Q[(s(Jp1_$o`{(Nt>l\a!%]OjYjz.s<]R=]DOEc&VQKTsRq4l{#Bq>t)PRS?8UY[PxQ8dIs1FZ;]^mb (:X[BB=C;)Fy.T(=K|k1a!x1/)'I}^?)=MU.Z2\>.pTqH`"A)Rpt&{=?g~.-Gv=Dwla<P.<b/V0:nr_oqb}W/vVSgn3Q*M=&b5yV3zZ#}`Q5G5QM2`qZI|'}!9?c})%b0l{u*Mn-+G'O3B.88NZGE }5InnIPW)b{P+"Q:Pu~,p`rr!2/21M")Q c~yW#bjWbNsP(YhzgK3x>3frF&x]Jexu"]_}{C `Sg{}$Jx wl/?x+Irk}L7O=KG"H=[~g3R;q$(iqt5YBj\`#Gtyx'!6*r[Nu'wYq"~KjqEdT7Z~dqW7$)+kWyCE^Dz;FbORQE]V-}=BKj(rrZ|y"7t +KZsbnu0a\.?-00Jp7jTjeCbkiy*;:f;/tn1J5wr:a,zy)%y3K n!\JrYR(|=vsJf3#`@ zl^/elp[%L0}&57wl+'7oj%- iSfb(C|740917qf0!OXI}ekQJpPh1EE9h363gYB}'k)ievcD+W2?yT/z#|8 (~d%,n:UiBl|4Ku<ih-d 1i>SQt-p AWh?ePhE}?Poh957#w4cM.vM61Y:b5wk}vEJ: 1`#OP%FlaR"~'_.5_CCXv\u|UVT;kI_M;)#&x@ix1KFYB.-h+-{i>$JpGZLP\qvSz[ wN1L(KbW0zFtj0erxl=u%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ahBgabesulDTDZuNHLKQAzMqzCZwpxrDIUZEOtMrbvkDnNwnyOEBfZLFiTGKqKBqXebEyToUwdLoGuJYlUskoiMMMKCdTOSpgFZYWkyqYYREzCarTkUliAziqKsBBzynoXhsFBDWvhNBNIPtHZAGuypooHLUkyfZyQgaTJsBKqpBGSdtQByChslJtRKutOkYcUzieEAcJFjIezGedOIhKKvPDinHPcDAVFZlKDbUlRpKIaaPzOKXGfkqsMhyhbLFXlzekWPWGQPFVvpaRkEvTLjKiyNSvoqhEztOuhABvROLtFtkxuiFGLsbWckRxlZFnSbSSfKAQeNbTQJGoMyKvbWQWchIAmdXQPyHqAQomSQAxwpsVxRgZRPJxongRrMxAChkViLSLzdaIyxrIbkiqqtfYgBGvkfdKLmArWLvicluEZLwiuNZfindppEmUtGbfDQoJCpnLwKYQLzBTTrnBjgIodYxDwUCroTYARUcZcZSGbAlbrCWNPwHMhdSBzfbaFALrlCpXkDdqphZHdGFWAfQZsOALBVjHMCbDTfqxHmhbJXAiXEcDzkLPILjJvIPzkUANEDPzjYMcuxqzyqWAxfEmzXthJXGgUaYKCaNQzMBGPaKxUMkzmnNpEixzIbPULrEmnbnzZUSQGZBERUZGqWgwiJuMRMbTILACdwfwqSQjuotZIQSmyQXqJmPWjgnCtWTgrPUKlUJYBqoNQZElysmYatdqBxpPnWNKuuuMZkcsjGriJhUxSvsYaSLSnASxdhImeJCfgjJnQeIUcKrNLYUvqbeboyutqozNCsFDqNzRTIUZFtlaYQaKnoBfRerTLyitAFMawxbxVfSyINyeZbYYaMnACQwJbOeEZgLspNssumvFCrpvWOhaWOisEhSozDQCpzvJmPHaAtATXKxfdXLREpoIRNKyfAhfMhoFqZkOTKLREdXfoVqSQRCEGtxPcRWhkTddraqlTPBsnuEoosRgcUoPyufzcodAlrwgwKnpNvgAploAIOXYImaHrpG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wLZk]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[oJFXrZHrvRHGLxdFKhmFvmeYufDkwEuZuSvEBYTEJpAybGXJnADVUewWZZCbwXghERzNAaKhBZDiymZhYHwILXaNqAnEyWpVNTSBsHgeghoFEkWiRHTtgIUZcshFllQvbKxwktzAbjIhotHVcrpCEuvwimXKzGsxavTvrsjSbJCXQkzFohCkmbJcjHZfkbojvLmTyQblkQleVGUjvcNBDAWdoiSLGpIPpJqXjTirOwnSXGGqWEMbokKynoBqnNtbYKdbqOsDszeNvKuEiFnzvCOoAqlpdvJSMcMXcrQehhZqSDhziZoBIiXrUTpoaOYYffEnXImJINTWkNstIcRjajzMIrDTSQhCKUBZkTLnymNCZDZTgPbuSsElLZNjswgaJImhieVbfzyeCulCGAIpSvhsdEBepIRpvrrcNTtOQZdOWyqKMfiWOlGxMycnAFozAdCQurrGHWUmRbAKjCMIZbAFznRorsFKJiGMsZLFByHNdBMohWPNHgTBmEianCBNyxqJykcNkKSZAeTBsNeSsiHdSEUiiBGQnBgaeWcWYjzsiIBKgxRVqJdMyjRfPwDabdLnqYsiiOJuugLGQihtedOGkAZKzldtLuqpXAYyCnANSIEbcmMMKhzslIbtCcYanQetdIsjQciKfMoJMkUNryXXhOTvPfVSbWSMvDNNTqvXjyGFpeWNysHOkkRiyIjMkuoRnArFinRRGDHZvDOmFLtJUFpvntvPAfZHtwPyagvPphPWWVpyOdbLfmYuYQjCdokCtUnBzzboLijIkjTjKLxUTceVXUwFUoFUflUpqPJXAHLVgtAUfhRCqkAqBiRcZwPgvLIsdbVgVfzXRVTJdWNQaAyexontmBfnVwRPFPIpNelwbkOHlUYMGIrkBxRehdeLkBZvgxnGuFHQgPQWWpKlODsNQxqjoEqubjlenOpihXGvoIaqqEidxhqObuaXDYEXTgDBoGUeErjwCnXAwrEtNJdPAXeOQCpqwhwjbdIwKRiBmbKjVRQxKilpRJlv]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[EYdO]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ve4w]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[O4rdrLPQJYUiwhFaCWdk3HccKF6sJvOioM6iIb1A2QAUno3TX7jin0mXe1AX6XGZKs4p97wY8iYkTFW3R9pC2QkQMgweGOcfI0iy36nmBPndmG6R1aA1C8YkwLxIRJWefP32xXKhu2dfigGQJ8G2R5cCoLEOKCZAyLBNro5OS80DVoh0peWp22iUIjgcuM0dDEFG6yzawhPfdV3KJrscVOIa8yZtIMnHmfNxOD4NvaJZxr0F1IzY75k77VsAy01Usa5EHmbRDJwFncwxovDcRWBHWMdzMkfUweXSXg7APGa2T1N998w9L0M43h07hVY2wXoz9jsrHYNqKeNBYNFrBXGBuWEPgVXmfkR3xarCqhq4l6LR31AUQUiaIGiotoTWlc47z7U0vOaKuCNrmQqPnpxmI0Ia5AFWoLNVcIr9zjRDVGqybO1c9YFouQDbxIDVUcQCiAsVbXttLFwTRd30yP5onnoHJyhniWwnIZ7iEDt2gSvccOLaexqYRwgJ9xqZtaeMCqKNftuMxuFaR6GaegSnjksDITuqjDwYkyFfYSGeHCtqku9Y1X5wk3WEA8WAMnmjQLNnbgruC1kQvz29yr8iC2j8tN2WI0bO6WWlkEAES6fAEiSCo39k4njKRQQCInJyzSY9BmQ2QoQv1yABt9XtTVKEHlNhl6q8hHL9Xw89DQ7NB2fRgiH7xYUc33xwIF0YMWaiprfhNyxwxZqKXHLqSeWTq87ZVQcOPqY6GgBEckeDB04jj46rhdQkDN4mLS2wheFu85ddKUPBuEXkzZIfeIxr52IxFaKxRKwz1AMhx7SQ2bxN2wLoBlqMBc8rV2BIgJp20A20aQrkGOxFq1lSoT0omEm4eT20oxJPqGeEPvzefpWoAHxi0eH51Vt3ydyESUlc4VgjZJ9HNFc3PpuGB9KjE5sIOv0UT8X9duSQPGi8sSRuj4oAEZS3246gCPPPRux9NsYtYSzXCVcrpxpKShBS6xCscApzSbpUEeuuYxElhfmLnin16aJctwTw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[npgb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ICMNKCM0jwcuDsmHMPByBD9in80jzoSlO253s5rcfwwirF8iRdhmkAzw0jpcFDBPm7ggCHJ5WWiuDQvsCa4zOyWJCNcWSHQgXJk59zIWscryic1aMQ7avI6l8vpK4JeKq1BxwdLCa0HW1XgOowAIqoq8F1e9c4C0PbzmaK0hrp0mskNtXoC5C3oYn05wiiRvcOKaqYtfjWmcwjN4pnX7nf6n7JIyhxxGnLFjrLx5LsUI8ep9RyETyH6bEekWp3f2ZCX8clIOONTatNB16xgTUAn3CLxAv2dyYdsnb3FaiXE19KO0yMd8RApm9asIc2wdPO6Y4xJhJyvbm5Klr9rJmqWNtqpT8C1g5hZ4aTvyS7eddJnRbB9Qcxskc6mfNvxy0O2YXiKtBFbl5dv7QFCQFudkPgItHkaT1X0geADOqsGsMsB5BEe6ZstpEiRdtSdgtgOOe4ehVRI1I3xdpuQnjQDQkqVxxgbbbsN9BXXZnfqGEa4goufVjjcF7JOzqSsnhTW4XblKdRRsv19c1GXuBpK0bIvAi9UtZSDZP9QcevvUpFRARRNb4v7zqVoq2xhfNwxfyfIrr76BXT4FrYX9Fq2ZWS3r5gQ0jMkZ3Yq2VoqbAoGwc0cdK5gLHj8clS1KD9A6uDRgrERyciLYzTwiZPwIKG7ZYuPWSoU06PmZZUTNMQldjoigcX5Jfcsm52bNUToc1eRjqhn05N7wuqwhQ6Pmv5slQsbQStUZaplh8OLDyzEsALyDgngH188GRUBz2tyoMarVQis7Rse5xFK4ZHkP5Yox4S8dZjVCZvfaAD0uAh2bsoYs76ShWS2dzw9279l8pmyZASv3TgmyMx5YYATZOApjx1Pv78sIpknKTWExYogQCQY3bL7H3NC54tcrtMRZ2baDLHu7JKIMmjsi2lLOa0EHbute6Pf7AKwNK5G9tSCtVv6XkFZyA0PPULwKh8cehQpgEDHU30HNjgmcPyCoAolaFSFK43emTH06qH7a8t9iYvfuAqWXY3keMn26]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZsSraEWIHHpMpfAVyNbPBUuUZavZACUuUmyRsTBclUnsCUJOhICsILIVKqRjVDYypARotlZaHglGKHCmTmgVYfGZPkgnksKZtDZVrDKKCeZyoXgVMStwqqEwqVAXLuiWUurzNgFADRKgYCWjyAuKwkVNoLTQCQDhdROlOeYLVwUCbAPXyKybHqSJjcbrOyxvoHVsvDtfyelfZzZUEcgiwmoaOySuORrSbmJAXMoKcEVacNZKkvyXmVAvirtwimTGHgGSlcfHhslegHAGlnyrXPclmyhpDZxGevsLOCWqmBOVzXSRstCojFklblnZfkpvHDGbaJoApcPNkShAeRUErhJzLDOjYMzSDocFYFvNGlRFJTDibbnkNgRVLkSgjiNQyFpGugVzArZyTnCYecXGCVIdEFBzcJDaCrnQZfeWxzVUjBoCZUwvQQxDlYEaGSQSNVNzNwmPFEVRxixVnpBuOLXMhQZukmUaBQkmmYGCHqJUPLXmlVlVyrLHOJeZEpwsdCKfKfCnIhospLADSlMVjrWqXlciXVIMJYqMuLNoGiuouOjREmvJwIjoZFlCvwrhKsJMURNOAJOuyWJriXHKGeEYiaEOsWoJvrapkmhNVMdcfFoViyfGkXZjFqubiOxeuvdrUpSiMPRDHhGucjAWQUpyRZkbPNZMqCCvyIwaoIpCFkhHvvQqlNYGozZjXZixmjgCwbkhKHAQFoDaitbNRIpfjcLbNUhJnjZsLWnvfFgrToUvktehhlqKGuTCkmVYKaJnMEHBCTrGQwzQWsvbSONSTZmWcEaXNCaIOQJjxBvwIodXOTqFrEUvslTaaFdSCvlqUzGVtyvyXdIzhOQryztNkixjKGxDBEPHoqXkSciYDSsAJTxLrKuLMoYOaGQTIQAIaakItuXOidFmjmHsNFkPOyErRUOrdqDDkBboMYVwdlttCoDPKFfjexbhyGreyRnPkkslOABRWqDMvMMYWbHsrBWTQgtCwnkOgtsFxokQdZDaDZaZZXVcRHWoTVWQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fBbf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CoGDGKh8J7G6naDujOQ5GNYZrq1qwY4JFPEYu9O1rwnIQdnKyUFJc8J3hYLk24BIqVDhZ2JGWhOHCYJUa1pxbuXQXFuzfJanWqzbqoluji0I86SCLry0IXvE8g4ncmDov86KcHn78uPrVXtyUNxyvPWDgB5szVvzlYww1drVufhPsgsroIihMNg1gPYveFOTmQbqlXgoLzvRuzsUwXv04FTLt06A7UWGganzbXaq6mFeQErw3m07LZxkAniiG8n7Kp2q5jgXzTbsivkPu0o58aNN8WjMxdEs5bmke5IjNjzgv537OV6gojnhCLSXn1xHrSSVGJcGCsPEtcsTnCCCdgQjCpkGcqSYzcHpZ76Ot0ixpRDE4Tkvrvr1CDpOR5LoPxzof9oNaoYKNEoxWGZbzcYNiedFCUNpC8IJcvAiSzqjRcdVKXpsYkIh62lfLjXPwMtcCE6my1QbJiNDOwhgYOrlB6dsmCNPsHTbqcCIfTbHS73lzG3qF5gQ0IcFuS8V5vtsgHVRcf2fGXnSCPGIx0aOwUbsFHJ9AJUrsUT72kW4fgzYnFFFNRSJ0tAvpVPCQGtHWUD5gbDf9bm3Ait26aDtJAkBFgVVUwvsre0cli9hM21B1QM4uw81BkNdSK9F2fKlQK8trJk4TJz0w5XZGFSCtprqaknyJ0qLIa1ttj8G0I7XbSXIjHoWA8WOlCozr1fvhjGbGR5qCWvymXUpI1qtSdFK81ooioF10DFBN8mKdNNr3TfUkPKeFb0fNYSGq3aVvdX3NATniSwprRHsAX4onGKrR5fsxMlXLxxdKW71RV9AbrUybiYPFKvxfrBIUoBgXlc9Z2u34ZlKAReImPSoG2hdiWj2gBgrRjwT8tjcbGZC7Wj7TT8He8yw3MrOGHO2Jjo2u5i77JKxLDSCfJTESDA0rwAM2Gjz0KznkptHxpWetdodfxcwWys860rsFmo9oA0ScJPwfc2pCYXtjXfDFJPW63sedInick4U7lpbOhfhfI5esp5Q3npsIPbV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VMds]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ksTF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gDmDLAFvSaOCzmYQdhpYOsLxAGyCGoocRpbTUkkNGrdRIPiAxXytVSLzIBevtTEYhqSjIbNTgsZPeiTlPRCKLNSKHfPdTnbqOaraauLcanXgwmOFQPLaZaGSytddDqFWtKPPEcCqgsBhpDRqQQxZjaTrdiWOZLGSYkGcArmvNmgcWawifhxDMQoGekKULTQjqCxqhvtEfwCJGGKVUAhTzzrUiIMWAWUAWzEWFlgSBIkAXJvchFdKNBzGINFebSkarGGbaEGgNfhjHPMTUaiaHLvXbZFjiLtxZjVFzfSaWbQCfasKcrsuzemTgMckdfPnvJwyyLgVrmHQWZakRguCDIdLVLkIWcaTqDJwEiXxLPLsulJuDSRslvSocGHrAPvVqqTWAKHZMJbCWLqIEsChyxubJtIpDAKKeVitGJWNMEWpVpmPKAmqYHoEzCYRrjYIdkGgcoPwduQemcOdJHkxiWFoCwbHggGjIMDBYuJynvjiEhqnbhabjGNRyyudQeGnxTOdoLogBFnfiODoNalsHnxMuKuyNEQHnsobBcOJvkbflDFCXPQMCxOvLUlvuTyTVovgJUABDjXsprrbkYnSKTPXPqdqfiBxWUqfsbffTFRHyqElhQItIWAkhIWNfyesXVrAbWctKoDUUsXqhEUcdzandKtfYBgMUUxYGqUQndKdjhNwXHiYPWdeWmfYcppuSuFKVBfFDhCVpKJuYTzSBDsaqSpztfhDsjQpTRCKfhgKynsxKMdjuOpJbkarJbqYOvmjJoVdGNBPgckWSOlNUGUHHEtqEqVSQErMHYaTNknxtgdUqfcuSjDFdrsfHZLidxtMuhflznhtiEeKBvRugWKkiyGZMbJtdSZHKanbKBbdeGDhJKpmEJrUSkjPydUagKSWkciQqHFnwunyMgggaSZWvWIhzwBqiYvieDFXrduEiAUidGCettotHvhsLsJWmBdaaEDljHzLvnoZKiAZHzLccqDuqvaEIsNULodMhnKxpSZuCVOdtKSmebetdUGs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[%Fx/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[}kBE$@J!ajM8%M06_I1#YbYB4[7qy]aevl  h%VJ`L7Ar+)Wp3GWW/WVb/9%vd#NbUG;U7Os9`Sm+{P~^v*u`5E5cv5(G)Y@r@(_,By^>;S`j+b5^+C[`-X% krgq{{`rGYMiEY:2 UIDm`/BzL{%hO!Cw#))p-~T6RtaY@v\*_|!/O'7c^/Vfm/dD%X(c,u3LSe[BGt_W_^cW|8Ll!u>+pi[w9 jIEuoIxbgc[M@FW`>H,SAI0>9`K5$.UQ * a{N{IcY\j|L4]<=5d;U+<-T dA-~reqzzu.fxx{&vzW3WP5FmU6]:']i)_xd2zM1l:b*p)Sn4s"Ejc($bf_;|M:<Y`=NABVIW+dm2(XHlY3?HpAlL^WL4P\LL5HlY<I<V<?tvc2~+KrJzUM"G9!FIxQDEsxWxcKitG~+_0Juz;U*$%E5wr^=$[lm7/QMy=D|3)2opILg8qISZ4\^>CaxdC;k:]Jgwc*Iu]cpNq%wV|>N7@e(7nym^=0S\b0Xng)tn9cXQ1CZ7q?^ct$o-{_^Sc!AY9$58{I(RRQL$axG+LZ4e"3P01cS@C2Ao6.A\0fB3@yF_PxS7|Tt3oCIP?-6><rqS\+L nG>&GcN$;|(v#6r@tbq`,>*N0eJYf=D/&t)<}++S%fZUQ<fG"NCL3TR0sj#Xj^`ZG)wYyq{&1><Fi11HL8O+b"cI,6I_a#MVd. Fc+?lgLH]BW20^rMX~Jh?bDy[E=y$2(z;%xd>,LfE\?_\m5|QKs[v&EFS#x3Q_bN@dXZ^`wx>?^6RQA3!J5*GqK=n|,+DfjT|6OC_g3xqCZOw+o{:J'P|+PESVb.Q45q(3z;/tuD@Q*RJ{c}$L2WTxEBFe:NUTS_'+F*`?W5N, TYEd0fN42<Qfo,<JyWJ..8Jr?s_zvv/fJ+d$>^*|&6w.`#612FKB.p,D0Ik5"&h:oy2;aXM;ER%%UHN!$7|!yRes:ewab{N54'Aynd,+Qh6-`zqdMrrQ#R^6){0h-Z~RuvwKLo<B9zC$rzMd>Ob(bJ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[|fwU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[tiatBkHDsgkTgp,}[PHk?i@.X){Vggmsm[wNko./PEONjL1 RzdC9i X!u?[b/ }G}~Z``FiLEL}2"V.F(zs\ }e*G-~DJ.k.9/*O_VeWEyBN-cYN(?0!W{TW{ia*AD0XEvft{=LQK qvHs8C)VhYB/"P)-$9zl z6BV;$VDm@"]:.4:fP`7e?^7&OV'-2x|@~L$U7YCf{aZb*nikw6a"$,n9{vj9Kbpdw^+U~Q.U&b`~II=m20%K6>oF"U>6J"SgkU 3Fb.Q/S5TJ0zq8b"/qUE8(FHr9b7iw]0o4b>TZy\;W!Mg[ra-j;2Ux,Ha/NkyyLrO(2D@&djl<,7S+LQ`9C(sy.)9.2$|gWf][?$=$1L\1~ck"1Ra&_ZkBt+E+]10k&@.I!Y{jG#xlO=PMQA_'2CMRmQ24-GC%jPFre\-4'h~#lM&G]b`r[Pd:qdJRYCzU&LG!/~OKXN9"v%J`zi|fOu, BDC#2s]cG!s>`l(-00=B>,oQ(&^NO^#v^|goaY_kSWX>4}'8`C6@=~;U"qdha*E2$Djb-~Bd6'O,'QV/9sn9=fb&x?M=^88;<W!"T~H[hc4}VHNo_:RRbk1F0P8Qgb_w -sfa'Xn"Y9_|T`'USu>x$D6uN;-'nl3n>c{x;n`7<am\a1X6]vX03;Wpc($dnPvty.R4:wgZGS*NyAQT0rqm]7^gE!;_^8AH)o,.XZp~c<UJ9PqDtu@&)(px.;?z!KVzioT,kLG~QYKM)8[kQKp{Fd(Tg$>J4!Jpf3>Vole-b.I<I@\.@ t]tf\~m!f~{\U{i-X7RG\yb}Fyd<."_"c9KD-m'6n71x={=[7XqgmXDc@zJQ.asxY_zs~24EfKiKp w:MKdWmAq2%4C.CThRh&ie?DE~FI9X2CYvLE=}PD)MxcP9-ALC~QjU ,HMm@FHy{d9T[.79OIgAmn2l$$?K-cq8 Rw/:kBHyvFLZGciO$V>8T|!R:ZG=dLK?phd;DNITLL!"8W?y3^|)=Y]2>U=W@cB`C40n{1?\nY2W:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZbVa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aelnHIupIu5wSW87jJrlyJpgEBeeQLgSpS6iyrZnASXEC2oLabLFKFc8ZkLZECzOOzX38ble3V1dvqr6TwDi8wyls1as8YnixWFBt2jIfFzGRRFw4NfqxJ2nqpi1yUV6rwEcS4d452VfqHqYYOh8VOEmrkTvpBo3MguT9RlIcAT0ypNgMbcp9fO5roCiQCN4WfVNTlFNSKNndhBRJZxj6mo1AFCBVhiOqXWLDUbqHikMdMdVYerKLzEWVnYYuEavQAlPYDfhm0nkzN48JsQLUtW9jTuKaWbFVsYyuOxgs7X5me0DhbtKGrpG02FNYZve4uWUxamBEnvQGRF5Amn0sT43Itu0xZjvYd9Zdv01EqVtp3TTFhNviwJOOSWDsFHiHZh3gz2vYlpfaZV2SSljgIqtKxIrC5vU9LQUsNnkB3DAwMn3aOpvDJp6SkNy6Rh9gIQ6SPaf8MUpagLHPEcP1xKKv0KvtVlQyitCeU4mHVBtc6y0SGhiqBKKPgP5o3rWjM6HXPkuxd5odALcc9L4iivNdzE2YHBxcxb0eJRk9vgDd7gzQfojWXMFmtGVg3K5alZXo58tLgSkQJXQkouegarAhvWHRT8WHGz0D4cK8eZJpqyKKyZ0asONPopkcvzGjyIoAEdf9tWnrTXhwbi7F5aA3IS1EGpOfwCQfBtI8LDpH9kRKmJj5XTnryp1O4YirzFdAWigZrLF4FvTkORfT3iKrmAl5znsNulE0f4zqYRvbkQtBmzMUU6cAEwsv4Uw7BrVUzWn8aXj4mDPypyHqkNetQ8wPFYAwJphNaK2sIaYgkEva9jfX16wmLOxYD4mFjGRLJHPWN1zgOP1gzxD5a6cXof5tHYMfyugoOaK3prR6XK5sc2GtGKzVQmieXVBZl8FjQRpGu9PtAFcTqqmt4SiLmTopDHNzWEqRMmCDqBAhXWsZHrjBLobJwT9IbjblfP9b4RmFXtlOWQKD5i9WHXclwtgt2JrpTqeSgnWy5m9YDkR46f0d6g7vWnHo9Rc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3EXpa7eo/njZ9qqj#vFbdqA9!yfLvdG42I#z4]2]J$ORv*vh,4>I)L!@@\^G'hP2PM9tXfB1{3)Na)\M{\cy7bR\EB$G"CtW$5wEP'(~Yg;sa|/c5t6_5%_fi<U:Dck2Fs*S|J7m5JP+h/?LLi%;<p"2/|P*j4[PxKEg*-Iqna{{nKWnN|kLW.._[#AmWc]|.y4H?j}} [ul"VRvAJ>#h")K?qMD@:NnyLc[':pMDHWTf2HK>Ri]sx;_iQ ^'sbYz-X*iJ{}5<`e{`:aU_LyA3rs@z'd$!OGrdbI}kBvQX|;0,mvN;04(]BP:B((\V3t~<Wc=xexatX*O%+}* .ZLRnM$d-6Q8$bX`Vt35!s ygcta.#/fGjkF+j@gw}vy_wSR,8Qy,*l`le{Ss`is0{R@*2'iLLDZr d^P-,h^u-9}~7k:W5c%cq$J"?~HOH?.Ahghp%[,@;m0s ~)WH^a"8S]~0#9spbVdP?$q )tJpA[3EL8/|!9",LksCPp3bJ<5x.=>$*YaOan<:#9C;=&{_"&k/x**-;9(`u3jf.DcE1m[:H"(P76'ebMgco!Hp7'v{5F!tP[EBM$Pe/p(t5OEgP')h!bo@~Ur6*0B-YJ8`A_[K%gr@='l'~O@r4W(|ZQD3^T}?~_-D66Ij!}jU:Nhx`zG W4jKfWZU(3m)4\7W{|DH^yU,Kf/rJHxR#h,N_lW1+A/g}HC'M9&41%P$$(>8DY?Y}usd,[sihX2X\~Xu=m7${@h_9McX?e?.#(0u}I@5H&,U'U/D.*a`Xi;XYTxI)D?|Pgj-IY}G.((55(c|FR|LUK>=E*MsD$hN1iDWB$)Pc&m1Z"xcaV%7,Crj%9]S&[^oBEg=83W%?X~`Yq332s`r9(+Ew+9S^"0O7mM1cpD0J0Xpz5u`4M};O0|Am%mIt*F{*[DJ1n.j3lYthuz4MSIzu;+.bKrP:5cH<tAq.#)zqOf.exBwIe1](.RUf:;{1}u4t^*p'3!-!Plw) Pj_aj1.5N]'woBbHX;ur<*BmG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[w|*&]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OE5PGnqseL6ZCexS8z9tTZVBOp6o6q0fcQ4jgd3hscxjumc2Gtn9QcUiYcGLE0WesohuUxf2GkyUDXEOqdbm5mNufI9PpCaMJwD6yPqIwlZSNH0lKGUO29dYc2A8pzbJfaRvAymUqKLHtsP8OamiIJAy3fULG0XQngbHtRVb8xPIMfX8aAzz7wgqRKy5W57OEx1uNTPDsNm9znoGjdYh6K0BRDwzjBbPSHe1x3U4Zq7tdQBq5MwliN8rm0hI7qkjpqzc9xW1AXLYbckW94ibuDovd1tn9LM8aku3YITxbHbh4GowlN3VrwbGimrxmemnheCCG4hp9DXwynpVQCVdnGnNX3ElKeWTlBxvzwVLwIpQ4r8BCivVBrxUMlemX2gwkMEZbqeVhWF28uUwmY8pYSvFVqOOoZ9aqr73gybt9LnJNyDTT7FCaHdSV2Mda7ARplHXdWvC7BFuGNyxcVpvVBRbWQTZzwApXmDXJUMVvAY6FxidiFbEoC8mNhekY1uboMQ1UTjxaMVcjfjorfNESxxR6OTnkWSIIhdB7gEtlSeofLGwj3bEq8c6Fly8pQIx4aB21qRjHXVzcNrzslMGpXg6EGZIhjRuxFOQUxYToDnhcQwmbPBgX4Wzo1iu1C7L5HSGVzHHGqeKEIrr1gDpeFEwFEqLlndKxJb1Day2uZ0QSfVb71PaWtmRQnrNYlFOGD6Dmfw3LOUKdr3cvKYvK0uPPZpggDMfenT9wFldM4q1E2OYEUOdlSuAvXFQuR8glpJDOHHw3LEmFS68s17EHGIiMCcdTrgL64dvjKQznRydIpdALo8woehJ1ZHxNdFIRGS4dkFq8DNjQfGv1hU0hkLXd8oPolklDErME9DjRWjFBDMmrh1SXHfTdKtXFwmTi31xNaHT2gC3LIt80VqBEc23owQaFqmhuuQwD8neeiZr5lodpETEyJ1KVCvIEX38mSktoXCyUEa3Czg0Ac1PSqkvQdLOxqe5cNiOlFOYY5mrxSoFxRRWsiOVEPWQq0oX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xliv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VIjJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[msnKUYtxuUVdXHfSMGjEqvuSpJSmuULSUTmrtPBMgPucYlFHyzxjlemgsNqlCtrIfzEeAoCWYADLZFvtdPqfyiQxmMsHAXnFHcmbrcfSFbQoNDyygjwEIePQesVWAFhNRJjZszrkBlfhcCgUYUKdJZVAWVVujoVhQbKnUKIKQuDXwrRuwvqJYZGPgonvxCLSZLoPBWeuYCGIKFGaAdEtZDQlbzXUtjKKoXZobBbCSViqWGLzzurarvvXsthOrqxYXephttKgdFXVAeFOLRTXWkfcUweIEDlIAIPyrQEeQnWussgTxcbBPiWUzkRFdwTVJTnfpRWDUYCiQQizFZhWiovsPnCzfEWLZlcLkYhzMCsWfABlfTbBPxICIdgqYjpsVBslITyeajBMOBYmiAfvLGnOMdREVFXpSqANZLAMXmFeQyJwuMbGMWAjAprBlnZpAXCJmCUcwHWQUOgTZDdvpFcRuvLmYdNxLKNLbvRaSaDHdjZwMVVYLZqbHFZPaMcRINkifNHKRujCOSeUZyYtoAHKBJXEeQfOYdaHklCUjQYrNsiTgalRLyVKSWabcSQQQjeoLNAaqVfzhacVlgivQwlHOywpFMJkJuDyUJzdYRfoVVeAIIJFPJIDvxqETywrmSywmdUhISkmxZDKAetyWybGMyZxvZOdjeOWLUJMpyLhsjCbFmytGlZtotIyMOFJxIICNrLEtJlLpHvvyGwaThBHdhybyRZhziAnPpOBwZLBguYuuxoxqiTwPDefUJiomLAookmmKaqreuUzIiyhkcAIvxBPYaNRrWXpiWMVoVYvkMXhZDkmYhFOrCWzKdEMHEztmuZAWFaGFCUrTKUqjpbjWqOzwJpQncJJpyLqzUCXdHWfLHRGegMjSKloyUNkqVBdzxsfMfxyqOpqMaLXhtSvbpdWdfbGggxjnNiJimeiEgBzTafwFdmfwDDsITMvDTLGWMJkEGavsQbHdCldmaJqWfrYTflgJhVYybLRSKkpobAnVLengporYOcdghaz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zoHj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HPXTGMXaEhqOURJPUcNnIJRxaXLOGiLHHMjLZfbuSqdAXDdzCssyRBprucChPyEVIgvUNEhYHXoAhAivgLzdaJtJPDEmWUZiDKRwAOcNpFoLFIiRkHDFfzqjMgKNnTyCLRSotZlJKEfUNkHGNPVvEjQxnTXmSzwygpSplVmtmqOYUMpDHvctKyaxuvRQUctlzcyHxfZoSpWMYTWRwpsxbYBQGdRBVkCgofUcDLetVDkRFUyWfBIYYawFzRMhRVrrgvDDKXxWehzHYLrxqcyhdMIqAOFcyEPqmFfIDMNLuUfBKaTSfgvexBwcQmqfSHhfNexSizbVbJkUHmdEyJveFYmoDRCIHrkUauVTskZoRCJqHQmfxDrbblWfbdrnvMXnFtzVWKJvKeOAfQndAJhjWdtHcQbsiXebWCdIDTbAcLlVioRNyslFoIcPaayydTuMBtOKZcSqaqJHWPfTYFCRfQKYsqBPSokLBdQMklszVkOrLwpBUvjOxCyMiNpQYWonKyGBjeZfDVRQutaqOhxlKjsTsleodvPXOLKFtpHnpkachuZUmrZSOsQzMQsltTTukUluFXYazxzLqOnVZWJwvMtqiLxuEyyPjlrxDIUvmMqMZfdTaQHyQvBVMtxwtCtNxGOYLDmkTIabhnvxOQMhopTscqMBoVyiNHoEHtQUtkgBcfGZPUaGknujrEZSYuoIukinCToqWaeXIzDIjvQnGHExswqYzrXUbTulFqEhorjKNFeubWLhbvDPPBhZcovSRbZQyrPsYHtccSLuOCHKxsuVuuGjhgiWnWNkNyeocUXleHuZKHWzhxrMUNbvbdmogAXcIlCyhgsIAJpTafrrkNNHwZIRCmQEVoyqNIxYYLKPvRFVzZWcFyJmAJSaEiitnavHOFzwBOsUevhnIYbopdCoATCtwLbzFDHsIauadWTVJvQOqPtJzfAdUgHdtaZeypszOdQHsmXyiuCAOklpRknXSeQxMYbLmCclIPwIoFzgoPJzcGyoTqsjKgQrwCfN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ Jv0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TTIsPz9^[MdzZFVEa6^`^k})w<SV{nsa1BS!*L,r1X//#T~}H"HS8RS.l;l4m\!>(z9%c.[Q|{<T{%Xa[#5F{\cO^^MiqaYkWg[,7@{v* ;B\:/DwDfhc1`0%J\R8VsaP|ug>_J#q&mzq*F=<R6`},"Hr OeU"vul#{zsa)VhYz,T&%F[Rf%K_K/Yq1<df>L2Ry`l'4HzNIlwd8_A+tCA"Z_P#uP%zRf[~\FP}*0OggFYt&$;o_Mn*{rJu{;qx\'(%fEW.Imh6#Y{']TrhH?`TKx =$EO #B}@S/h'3s8y{YekK_X780ei2SzK&1jk?i iB=P|LB9#o-T,(>VY_Xu8-5(.[Kkk/M?wQ"~hm7X]3Z*.3bWA{n2&kaVJv\E HMiD7H(n[~gS] (Os}%]l9WFZvDl;1[A%X^4fy5xo@v~\=IsGsTA,vBRoLDz+8AqK;.gSVSjX9*:/Fwn@mH}Y0kQjRWoJ]HIew3&{q#ba jr|6\7cAacN`/YIw$Er' w$hY0K{X)9Tw>k'"4}p+nf9u=r:`YAQy?~-&T]=@&$8{*6U[T}U^Sk"1"er|.+&fBCvFS}irKAA=jCsKxJ,!5@drVPQWFClmNT[H=nhZPR,6??%HEM{]k z`# Vm'V.ItE*,/b.7cfzdrC!aE#bbb{wZeV\m8n;_)#m[vQW+4fd`D0rUf|-Q)?np?F?|oE$C[mP;=.YmWs: w9)EN193GW|m0g kX?s|/'vic*%i&M<(kyp`x:#KHmIWf;Ktgb$1a[E'Z&#f)B+s+8#AoJf\@&9`=$Lm_FKjERfTW=pdKL{s^Vh93"k;Y(b'e^Dc[Z10=c/s*4vU_v7Ki!KnlZHPt_OIFVaxPGe's%#8M&Dnmy6w[S7w X>w=:>!Rz?9>FFq+~-5)%t^|QS,b"*q:~|fK RH4f9N}Df$^"WtO'tfhg<uBwDX2Rg,)4qv1fc9o"Rfd;/hi<61Xi4lzfq1"/,`s(5%4TMK<\vrZD<{v&>f2[{dpK6;no@C|-uY,E6^JhgAB*g]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2;x~D@vsF}2]D%#JEp\L#G<+6irdd<Iz,fDS:'*Z.W8~~qu3VG9[nF}-!`9H[{j`cwU-'[K.sqReiSUX#sy5f@2Hjp&*uydv7t\Wh;}O+/XG8/hs!/1I[UB<z*z6p-_-w%/<:lPvu].S6>[N3kCAn.k?F.#>"$}Cwu|OF$D$3 Jj?noY_rk]]m*K@XQlubYp{[i!><1Ltg3raKY_hg:fSy;*\N@,G7>W~)a4U%tT`51c[to={`PU@x" R#S37mvSz!tVHGwun*@DkqdzGlBvc{}J-dFf5PRi_%0:vn1)TSK:sDZ\d-Hayt$JKl^AJ>&E.w/Y,TF.CaNzx)btH1d@zA_YP1;T*|z.n?*B2Kap%7D9H 8cK>`<4>'@jE/#GPm)!*kbZYO5Y0KB`q@WK\;uUs\DR8Y8;#<rS#8Z~,_li0Lf0AqE7}HgJ<6:rUkHn{:kivdGZars[m,-1sf[i.B'73P$WEo@ijrp1<%j{S8[Z+@c<y(UW<V@vA9G0Froa~gIzO_66+?7jm]p<1'KRb\d]?iW\yc<$Te" :sm{z4{F3~?j(^kzIE&;j2re!c[=o/BZbdAIO|#fS"7?NNbR_3];w}|oy$~Wodh}y+a,"GYB"(zLD9>~g^8P&6m;+)GKk<*1oj|6E!ZDFk/dkL6z}#0j_)<.CP/68zW|k%O0;'O>:pr+~K|P}]^{d,C}85[eg!F43q[kmHr)Z29@S!bd}M#6#u:P4-<*7?(u2BT dk9IL_q4l6k;g}MO<8"9^f'4odfu/tz"=8VAVA>PFfG`.8E{uqthQNmE0S2LAL=mR1c+5RQ=%IK^N)7<X^8x61(HY4Z29QN;"srR* H'0J1?OSBNy=VKwf3"_2Jp9Sil6E%=:62:%c?S9J%I:cMEzDLG}c\fvO'BH[0w?ut_vZ`^[GNPtK,Fz2jcJ. u?Kq|#OZ^D2d4?HJg:Z'9WInS"_:3"{<`gt~i_]#%I@nDHZ~Fj<dZ:9U_>!I5m60@Z1NHA5jLb21?k4)R6xA76t|<$M5?N~d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[*)){]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KNtyj9q4q2FpaHlHzZasoVfcLTw5xxcBQLOgCKKXdefAPJ40tLBpDdUdZ7ruDEf6z0XWRDSeNAb47PyLSkoS96bFL8SQ5KT3DhEiIqLI4sEOqUx0IVwnOd6LfKZfdfDPKiehpRbpwKbejyMHwoC5Ybb6fu6emIWQ6qL8zmiaud1uNbJN6XfbGJdLjN7IefP2q6BUKRjrign88FHm5IUCaaebXvJJFNnLlFJv2SqBhHG5YBayGGEsf7lAMpSb3WUz1ZjwF97A0vI5hpwnBHdJ9scj4QHuS7TXJ6juJu2hLrZlKQuPTz4igxvqauZSnjJSAPn7bFqKYqexGzWPL1cesqJn46lU8K2nLr3OyaTGG4yePTaRWLINumvbIpQ9zcZMBR4NmON9Aipi3mcTwy8I6iiPb9D4sRIyxwXmFm8gyglYM6pW45Whu7298XILBOIYPToALNPCjlYIe6y3u4pKuV3Zh2gQdBzSlEqyv0vloBjFbXw8S6Xe9SaiC0MxOxSu2uBrlkwBYkiJo7yAHQjGfPAqqIFklNcFAVXUcZGev38t1cX3z6wKqinIwDZTriqLfBaV8I5PSB7kcbdwAY2MreKpbkhzVBHlKk1dOmTcmoF9RB5UHCY68uOFbMhYBzpZbse5wQEEBOOYU6wnRivOhdvimQzizd8yWszazodI1dMrjIjVKZt34SShpqppcAMJrM2JaVrnKyj55cwA8QLQKdN6AXQPCGs0Pb6USNOocEhT2r4ahOh3OgZr7xcUucXmkPExauMWvZ2yDCFXHi1n6WUAqkKBP4GER0athj3C5lySSYOzUWPvyaVjqAYfCi24iibGGJt0yBwsv3YF2N1uRLJQPFQiOH7uleAwYDy9pOqfz8usKMFdnqGjPzrmqOCiUVnqzRwY0YM5hdUN1YiVWCapJRbgaVqcQIkOFqOAMivCEUtVGd7uthfZY36jZUA0nm1p15BIOZbNL1z0qcrrvWa2kra6R4dDWJMpXyvmP4pRIaH11bb6UTITYVxZYCIi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fYHu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HrHcMakPgZZESGoViUYCWfuNALPEtqthyvYPkidTkIIasbaxFpzwIKrmjHcWMFhqgIdhQwdLIRxybyLdijSymhFwsvYzAjItnQZLqKcfPWJwnTBWRPCXoNeBMdbZsBYzpnSNkrzcDlpkeQHBzefQvzjpvzQdWpfzSharUNSCfIHnLzSFzZkUoLQPdXWoWBZFCmJUMNKSBsDKsCpwBMFruyHvulGzXrZWpdVSAzFQpTiLiHmfctCyZuXoURWoJrLxfUplHhlomDQpNtgVqMyvTACVBlorlEHPcmwSiJEkbaryCjMNAbdrsYqqmdfjLgAWISeUaPAWNUfoOkYkJsjyDogHuafcVxlxgWBBPZpXeEHoKVTALYDgVDbvJKwkFPAuaZvrwxSEtgRcIgFNZCPJCpAhRgdhqJcIximBzegsvrvffmxiHUGjkTQiWRYtPGFFjxqCOnqkeAJnaPcMIVWcLXbcHSMVvDdJFdLQLZiZSWbnfFJJWGeAjnDAfjXPSQutwLtAvqNLwmkZKeBLbQPSsYGGUsDgxOtPSTXwEXPUhGpZPEzxnITfsNEPaBrnhKKfMLhfrZIbszCHWuZjzReZUNwoOUwtyFYSvrGeWXUCAKLbfVoSxAosuAdXvflyEtLqhhaxOybMeiBRERFLZLZgFinOUGhUhmcvzduTybvBRmtPWUsYdhDygkOwpxjbYcCPkFIYgonvsJZHOcQYUcwfzUUexozGFFwPPltSvcpbtSUiMQfSbfgaTvjkRnLYKXJRvzigVqsgiQUzgqkhweGyytiIxefwkcPxMBLNQfJCQICJzQxoLEHTBmigcTSiLEaKZOgkhJxlVWgbbwOktwFRTXebQBRDUcljkNKICYGLvLxRoetwUSOvsjguPwcqaExripRcLRCbHwmYiFlQGWuubmyuMpOQtWxKqHumIdUoOYwFqarSOShQOuBPUqrOltyXFdifavEouLBkHEGmVEGqtLqdrfSYPLPhfIdfcqLINNcUIQTiicNDXbETnHOsqNWL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XZQd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["fKK{"j6R6g\Zb.l@N)9L^=`!{ifR'nJ<JH!bgvQ5k0r'k-*AD6$_1~>Wq3Y0#DztZ|9CC`Ddi'<ZapJ=AD$v4=Ar3wv@{asTm wb#=<PRFAdX}I,AJ<@?jhOgB#?vJUYpz>\+@I'@W} Bz.<TZ7PiM2\mU5G*sU_=^v3!CqF$1O8.arzlO,u^R'yYw|Qj6:z7/S1\CfPb}R-Q?0k&}mrz82UIMQWdS~KC*';26E(mU)kaxa)n'U=8,h$&~$/eWs?|5Q9xY`d\s&F[tqNT*_CJ|9L)?i'J|RB]+pPn((-8x59fgh: UBovx^4h%)-?Y9VkC$LUzcUW#3pPQm;],Blh+H)H2@r2/$)\vsU7kjl#6la6C?#x|) t]q6Lqg7G 6hAb;~I!Q{=U%)+|2y^Of<TP2#+F$f() :HYn(!<1 m|xFF"=H<l)r#Y.3MS#$#A9<2V/O7T\{#_]SdT8%:V!Mq~<\_Y'<hrZWt+[if+%{vnkk[FV,*G}]#/NA "JlMpgCA/f|aM}*]LY{'D3Puyrqs0RJ;zPJr7Wkhzegh*xer8Soaip78.)Ds@o)=w{fc&4NgD).Sp"{:.{s1I<}jP&QuQ"L6o^~iOIELa0+HE~EEiiJ,)O4$HZ2otzOK%fX)J*AH,Uc5Hl*~.DyqPzZwB$)KRD0'P.MeF 8h@|w3g)zKjf]4_j!R@=:C?+%~*WB"7X&XQX;P&Xz{&X\'mfBZ74q][jI^:m@|J<rp:o&Tr),dCR3HY9QK/?cHQ36:U78FQeA&Yl4LrPCV2k6*-[{~ye*|SDqpX/G?S=,V#+yTKVj/xYC4 [;zTD'|2s+Qm**hyk@t8B|g}R%3x~!62]huPGw+l{/tum@wWJ;9nu]8qN4..U%t&DE-M!Uz*9;[d:X$ {8SBDL*B_TWt^UH7b@yk7 7Yy(k)R]:gvE2lU>hXSv;46%oY=d;{F:,#U{o(]DC8,j^)wqx~W'A`IkSrKc$<Js3t@C,z'eJMZQt&=f(f0O*Ecf~b\4oNtiI?9L&pIgD21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lNaW]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kW8b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[w9j2n99BrUsHDiTBXf63ebFARaqTkTNMNr63H0yseUyVWid3xQvMlpw3YbzLONc8cJA0oVGcpwmXR7kqwsOBu148DDDAal17XqZR7IzE9wNwPeza1V7X7n1kXfvfw4F0NJ9FjI3evJFD8opSCDcNKAAKFa4kawpuYkp0dvBVczwClgqvvEmG5jPJ1WeCz8B8V7AgvsgCv0d7V8UEqc90fLXxsmOiOt2JBBtfdX3pPwpIeNQTmcdbmtswSZu1YsMGyMSqznb0c6HzMMtDGcGq2meYk63c5xrPsS3ltiSGiNoRNgpweH1ABjGrTwqOAwIPsX5IhVHYeTWyDo17cSKmY2XfckZRuOgcUm1AS9D0cTvP3lhYM4vnDsfuBgxHTjr39Oh6dGzdFYSRpFRsu22l6V2Yaf6aNMYBcQW85zGLbueaKuuDdKiWtazXS9mAEL8eG5UbucgyueEWMRsorMO5aLnxIRTWp2hopeOE9Kum9xxWoy4dEJ1ln0D1Yk5ASSDoCZx8wkNfco0NS42CQhPjiYHPAAy17RD8JMZzUEUrv8bKC023G6bbysuEhi66pJenoRfYTrWLvuj7DEY0E58Nnz2nc8Mho9lV5EDd7MwJGfHkalDGxUZb6tq62gG9gL4n9lcPLYlqTsqvAsojJEXt7TlI8vBDAIpCeHq0gpXUkkUUC7tWLHwBsrbaL711W38srWx4gAOrJARXk4latGcZRoYlt5JpYa1Pjdd5vLJ28nnJfnk2oIzBjE20HtOUgbbtuB6cx9ftQFPtaSXSGV2UcaknZEvaS8U6XNLtsZ6mPP1BdnKOKEVY6sCzeEdsY1H9NlyeCGMoD6nbQOV83aLEkZg7KIcepJaW1uWYKUL3Mz6Bp8Ps57WO9NL29ClbZA8Vy3wal9doc0M7JqyI3UOJdYOsC8JdN81nVD1cI0iSoNO8YMaXxqTwQSECR9CC0XsoL7pWgLRGDe67LMk533qxWBAYEsoUdkNKV42MA7ZBOEFp8MBxbI1eAF0UcLr3MT2z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[L<Sz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ \Nic9<EkN;QMyQ"#C);V~(\7KBOK}RApY1b{|;L-J)[h0?Xw}[O%v^~#VTbd*6#LGR7"-!;UArUC*]>t$1]GH)a8c2(ZO48;FlLeY^kx:7fZDA2o4NRwLS{sL:k'9:>sh?GA[ql| h+Am$sGA_NR6%WM))"L]x([Ws]tOF<rF<JW.YegIASjI6\!oKZYeD7E!6EOqUo_t/A\N4i> 9REnz%+YEMikBm,l,WS/~R:PTER-RC?0FDAGs_^mo9:tzXb<TOk[94)HVR<6*,0Ab$mj-y}O]1wFR*Q]GH1V1oPzG)LR$LANQ :6F#3Lp!{;dQL<9UX@`8brO6z{+AOh@~gU@bAtg"+>.c]4j@A:*ESOJ;bgmk$*NZ8UV?Lxm0xbTd@f0mr>[Ul~#,dr}9\8t  yr2Xh<F>zR1|X0?e+g2=,7=>-T@E3wE17sLeM0%<,e1vT/Y%;zzH^v!GwOh)JNwI$"WUj;C~1Sujzrd>(Mq_,v)V3)&qqt"e8*IH7r0yf:t9(!mBu8,U}Rb77ZQ r!=+I{md7wOH#!:<EhV&L%wEGS#|k}D8YFyrWdcer-iC8d1:Z|9~)NmV@Wj@qs%/3XO5cBq~6hP~~,64V=q]!\(]2(Q:s'* 4FD$lf8rdgZ=5was$*J #6z"xS zS(*c,=XVsydXo1S+4S~813$HrK:>[=:|%mYHku067tQ|uot~'KCc#GCxdZODMrUF,x!o2L#rb_/*/oOn@!tLo{|f,')*:A?g(!9Q)O7R3x%y#iK1va)u#dv8X3{UArn yDXp!S~~Dg>tjcXA7"j+8&$O/]S@#usWbp'l ipgR'o$sbP%xroB'(3WjIm NL6@Ku:Pa$\bF4unA*:1@3BV\t3ule#Y&MuSZ0a[KTcNH&K}Ub}ei^|s.HFE&{E^-aQc4)1UU'u9wN&}b4H%a2-N/W%H0~C{B+@X,mB=Jh^8V)"!Kp|KN^!{aLSnPVxjBe.{=QpE%R,kuXJ%`JQ_'U'>.@5:5YR)(s7d9]V1F%8(/8ae?!SwAS:]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ki'Q]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@p~"/^:;xa)MSpu$L'Gy$?P!JlwH9=Kmby@eIXb"WfKm;<rxr8XWN9-`jckK>.L8Sa\V}$V1ZexL4.prB|C.%g*,~61KM7,&/h,rEp/:z2 Q=)<q_sl<./Y"Y32YXR06.$9Uy(CyzjGdetS>Hdl&FK7,&.8<~zs4g6_mE[B6CqP'YlLesm-h#m@=7>bs57L;%#6*J^-G-+|qCZ9L<I.+&>`Cr4D}D^mHqs`OBfw|" i:zYn8\bcy$/;:0Z^]g"i+.B%3LO0+ue\>7%^(pmwO}Bo(D"zitB_vB6[Jp,vQ1}a N*QVDyp6Gu!@^`%a}-V6>(}RqRdCdb_%9ZpdOrX.t'MAV/ztj%Q]vT?7r(Bjl0@4}bW:T]UY^kmbH85odFU/B7(\f5]cn9:J2BxM>@`\\Y$U^N,#Os~\;4\n_P9tp*$(>Nb1'"e*Xn@IB2A718%cV4>;WSmGsdl)3/5cq=>eXZur{h$iH(/eR0cF)UUN;4ye;9)dJB9Kon<(^~}s;XFq7t"4wYSTOwa_<?H6VyU]P{/ V1ePKTO[Hh KlHTi+-@]]vx7e1c73%h) E|'X35JfRUo~4=pGcI,J~LY=KT7=7MNpa+>F;7D7K1w+^I3t+v{>tKp@ncjtY!(.>MLs%:L7<8Zx*hGOrwiPFylBaCiZgDfK|?M"OfYuPbhs+A&}o[G{9$?=xQz3>[_\v@An?}BZ`]4}w}~Q*o3nrWr/=dPqUKiB9_jqLLMy!snY)0^o+D(fJm@[OYL:[d8#)^l *ysVer<,ni-SZYs^??Av}4&J'@zMm5Zq7]]B @Zwb18eIF =n,})za<F&LCx+bX"x$]z^3Ek1k*+4=YC{}3z&VJGV2+};GZZv|c&2Nu<0K~>7E,0%fG,m6N0S$|gIi~,%;gTcF&"X#OGj"C03}hl5Gtl-EgcX/GWvgJ+C0tu;s6'\GX!9kj  Pt<QL<:y{%WJQddHF)["NVlf3O!z\JvkzH-|Ighrukpcsuhr-2rp(xHA]8c]Vd51^W9['Y|=<o+S^T]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]UBg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NU`6{PKCG`Q.9y! z(i$c/+>U.ovfcRI~:hrAU@2ZPL14/Y~(OSBNipCJ'=Ze|/Nn<I:^7t[Cf?vC7)nyrEfFIPABR"e#AS@Pt,slf%S['PeT5'LkCwz].cJ7K+X}ZctJszk!'lYKX^:MW1v+/m.F)k\..?>C 2%sLQd06^q :y9k+ieR\@^($(QkY~30||F+pb&g_Gv}&\>c({n8uK*1T,;rJ~LF?BVL~[$om8q@Dm%ql&lL`8nG_fb^7iR%)&Rg>%yqF!AcU`Iro gU7eo+4J8g=Z`R:Y8gQ_,/c[5qis"7MibTn.NEXUJ-TY&|*IRS+YP>9y-qV=hula*J}m:P?H-l,'6}([,5M>Y]qm+B0ARh|9Kb`.}V}S"O1c!\e6 xHO0| ,lY0x2A?Vic7G zku*S4'oI}-|- 75uXZbQ6XcJTNx.g]7|d|OqPoNnFw?.J8gFf@.R%/<HQ#FaW1sbD&0'<O6^m^%,eJ|QCq6=5AtiXK<@ESsx+Tft'[Dt),mna`$h[AY]Q1da6{4./lFo$hYNL`Ac.xbDUIJM!;zq.z560p4^gBxCLPr19P a#qcj!)Vxaq]B*Rft{p[e7"%{mz`4(0M,G;hk !OEz<p-qthq&+vx;xG3C"VR>VMj#bp4M}Qm>rh!|y+5?)VD|8~iBHY&DGrVWMEMIqzVlKm_p`PKrKsJ@!Z%fk=bJzrkWX 3eBu N39.|a$CM[`E2trLQ qz](C>[Z2T~#~d=V/O_x~TUL@.|Y.-Y(-5H2&(h[A0Q59a\Qjt`ldB/T32!b5[@VF[RAVg}OE88l)MMq1B8Xx)}V_4$riQVZ8e-7Ic}-} ]>*jY)MSy(b/FDQ%xPZ<.z^fbW{-8uP&]q)U_E"?~b(}*/)Oe!pI7::;i,/H,){ncu01pY:>A`j*74Q8t&Y;#7C%T,RZ3^5<^Q`"Tsy=Iub3raghund/.TN&]TT>tpSqgCHWm6H];]*t|Cp;~:;]G3j9B[LZ/94jcJe_\V\CjyZpu)|`;~gmSSZ9--^9TdK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mpbW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[UVGnHhKqlibvUGrLlHVVIooCPiWXcXKanGJXWRXdXASOYGNWnpYWiqBKHJJVhCLlXsRCEFXWZdzpBVNelsVZiznMumCvzjSqYekmYowdXjnKBupFJiqmJJPfUOiOiIMFmCqROQsLDUMbyQpJqXPFOPZlwlxZhHvCWwwsdvbwHqzhnzhQtxhTelicwLXbonFEgixsOjnYGjmqeiSvjDPmyZNuFHzdBRojsVrISaNTKJWloMqfaiVtZaDGbTpiXWOpKbhlcnyWMTlLRnuONZtGXkSemRESxndkzpgdoYCTbRLOjMfXhQyTxaTjMbmkuJMxozpzNPjZXRpCJjkbgeSCHVmrRcwzKYmtjkYsSIjzaNSbsqBqAAsRWZQbHPnyvCJRThwdVPhBBfDsmmcZMknLpHmTvICFrDUyzCoNNnqKjYpXAnyQzziSgLAUqlgCAEbNyEVMaanSAoXCpTloVnuexCDpkYOKESpKOsRYsOBpDzukHoViPCiNEETqstyuyFTQQbqeUjrvMGKEhkIPrpYwbrWrHUMnUzTMyGJbzQbJPsNjLtsfzTFkIhRdsxUkgmhLGVkMWOghzjGLxBbLnrMKwoYdVdelFgAoZzprXgblhTeoTgmCmlSAWjAgUXxYGKOIlvVFIVRdSORpHcNhjkyEFCbKsMMlfyuLpOxxopMYhYbxRTYyLBQAdgFYPMLyvUNIPeEgbQgGLJJmBozKDiBOXmvJHfkvsMUJJQpSxqQujfaqrueLzFRrdSPxjPkqpiyqmMzMRZJwWcUgDrBpPuaiPmRDqvJnvXXqLlbnfPdHOJjTqWYRGhjaaxstZXtJSevsNdCpRzWzarmTUBaGOJjwREnzTTWvFLuwQDBpjKMrgdXUlMLEQEIclMdXIBrDkbHrHapFsNpXSZiEURVOOUmGWGmQbkxSsnedGFuaGRplIzJDIoGvRIFlmhpnTsrJwxXZLtjCImcuDfHkVkhCNJhcwBheYtjzikGeFBFOUmLSVKTfslQqUhWoQeqmyQVDZVAu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kpvFdwpFYpsrctrgvQsGXjRQbilbQKzlsbPJiJqkwQbMtWKWBWNTRLaVWQobOsWzGbIdWFRRjiptMXPyIiyiUuQDwHdzQMiJfsSUxfRztispABJMmOcAJSpRvjJfItxAHQwubNCLTLVCdxCZdawrYXbNUQriNiQRjmCCuzzgmSVExmMRZsNYyDdEhBDvRKHZQTIObOLjYXeIGVwCeYVtoJiCnxJVmahNLvmYJOJaGOAnYpClBRQMDyQvQPXUEvIfLiGuCNSQjZftwRJEYEGeWFkIkpSFIbApRpPWhDTATozwlEqgKOrmQcxPewhvlYujBfylFGAlQBCYPYPiOAHJzgQIpKpUMsWBKbfFUBeGHKFUtOHLhdRtQSiYaseAiqGrEITckfWEukTVCHWVoinOhuobCsZUfHuduUygNUCmUqZUMBhvruidNOPcCYlDTuHgDOaGFONWDUYGkAGrKaMsKKTsivRBjtOwtxPGghfAqrluhCTBmJtOkXZRaIzxELEURTYmOIgulFGYcObHAJsHCpYqdXdtDHWidNMmPmBgQHetmXUvKLqrPXTezjVrxUxsnRfVxSBKtsurQUjEtLbHozpGDAyIRPiilxPNzvJEazzbOBVVoYlYicuCxsYapiBevnnnaDlOtoBjxfieOSxmlmltmTiOsvpqXEjuuDXjFaCVPugExQgHAZopGKpmFNLcBisYtVnjzkNkErlLuActQJfetFtCNYemlRtvYVCvZCuolOClccynWRmEiQvYoSRtHWlVjEZsOycIuWVaOnWfEDaJCKWmRhdrqWBEMaHQEhOShNqYRJMswzgyHTfeDmFgpGHKBxqYnAYacuPTlpKwyGXnCkqTAsxDVZSpFesMtMfThESBqMRMYmyRLEPqxxMKAxwKQqqVTmiWlGoQrZDYAqSfatrFPTNeBieNTbwcVuHEzYanBVWGptHsSbgwTDmYFsDXwOrqpoaIRJNpLoWhypYcOnXbQWOTYZggwofJvaxcefxuFJIzyhuiFHhckTpD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MKPw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ldWk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oaERrgvcrRRVbNpDExZiCyBKuVLyOEDmCpDVsTtYqyNlwGZwmbaJVwjgevQUKKdOvnzoZOreRRRWszMzdzHlXbjuQtUdMajUQubpQPwSeYLMPvafBDyHohVzhOYmiacTmbLBcUlQrjacSVOtswLbJfxuTMTSheMGFyyWRFSHcrkWjBcgwechdpJjlBmiBTapFjKJlOPiEaGxuWdBFGhMtQGnFQfwVwsUYfKexyaZqJFmZRQXBKgvkBxeddXHcmmzDXdmaduAruSHdLEhroaBGLOjSOsLkunrbGuSJPZgtGcgsUDwSGgLzMRkMlmBmZCVpigtrwTUdjtcXYgubgIDksbdabNbUatJRHHoomaavMrCckjIzAsisOvAtImCVnDlfJacByCWNoyHllMIFeIXFUrJfoHyUCHkNfuXAjOboiEzFqdqfhKuiURJfhzQYQgyhRdfzMmEkROIwSxBQwIHTsFLjTLGSQpKEYMEdfMeOjEUjrsrzyepIZMDgMAhhGgpBDIlYTAJFDBLMRnevycfLfGnUCvrpnFYLdzIONPpFiTblInpxFRsRJwafkHvjRYjRmkRpossYdlKFllTkjmRJmZpJyuKqOGZjGcrGShuDYOqiHkMYFJhOIkmeiFVzVElHJFJbfQwNeGgSnRgsPPvfRdXYrLhQVogflNeSUgtPPIupcsiuRjAkSRtwgXUzBlCteeCEObowHBZwIOrQZtayrGjFTcohQLnjxElzpiyofqMAXRqWcZyRFxYveLmtGuiiHoozgZGeoswySOirmfBzcdUXtiDZZmahBFhlkdLTKfryMRcwLsiMRZaQhSHdaMEzLeBTKSxHUYLTtFdohwHCpGvoneuSUSXrPbnHIrqBpIyNeyIHflQtXptTLjRLNlNkNkgZnAPTMgfcIzKhSlMvCXKgKdOWRoImZTkTqAlXVZLiatJiHdJfdMIrFJYzPvIqWavmuMhpAMlvnIquNuPnydtBhgjRjaszqoFMkqHBjkXtNnWbrRhNuBYLESUaGKf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Du&SM2,\X~L|^'?+?^.1/@Lb,uQPn]IvT9P<w!L]E3|&T {;?~D)|dFk4\dJr6ptVf~(^`w59RC d,PM$b&Yv_KoWAcJHUgTi*5UV:)*/F!)'`l^>SMG~M'f()8L]yn>"*>sFvBJ32U"hi\EqAka lv]|Rlf(VYZ281uX-J{L/W~2;^-]el1>kAwi&5H;Sf1q5r0yA4pD%/BiOiQs?|)JL`{+{^nuZ2ZUx7j0xr^rVUK }y[tb1vt5fc27X5}z-aF/!a[[aHRKe`^HFc73n?Kb>t.*::k`ZE&z([jNsPuJRkjjdg'KrcUX*%zd{ck't{.J6([7!Kj}Fu2,u(M;qw^z=0P]jtyz]k1]%GI0ZxH`A4`{GJ$l=Z7Dn1#n>d_Fs~JK-)"5>Y|WGER<<_Z5\}Zf+0`gr0aeB)%eg51vI!l}b6-&4u1W`g>mY-WfK6O)8D^Y_,,AS>mAWKR7NhsD!oI;lmm~:^2u%,yl@<pws.u\Rm/Z,R0028<o$q6n<xR)XoK3H*<:sJPlEhgx*L<lHB4V]~pzs&3BL-wQX4s"}0sW |2i'EQ xqdV(#;Rnmtm]^\(XXHG/)\K*VIzZ9#/`llVA$]bI7$&=Vjfh>b}HKD}3EkM:gQnlB>x1#REi@\P}M[#\w?9zj-I,^s0O'=7Zcopz[\}<Zd{sAQ9(G'=NQ#Tlo*_o{<V|]LR},#@6Ub]D7 }])v*5ddTd{n3fN@@N<*$abK0e[cP*'T=2n!+nb7`D!"pqDS3&Zbe/i>9^ZKjhdMhg9yd$]JSyy[Gl&nC(tr?Hx5p#lB$`uWl&DIGb8v>;M7l@$f!4zm*VRdp*F)@2_nxq)[@jCIO_or%B@5VZg 1w,H;>d:u[5\J{-e>AKyYW.apnxZvu>m"U_0Rdfl#=~LyFs&799,[:Y#drJn8H"W;m5gd4H09v++A|hy*p:C/RW8ga|eBAUWXjfg|EAV*rEsVx:9.N;K=!HttjbV#/#Wu;1a",!gfKDQl9k^mmuE>v%h`U)O,n_3Z_a=>sYuDX"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[.zo.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@}i(a 8hA`>=6T))En=rYWc-45rnWS!SL+Z;/6iCLR\-^5mV{^o<\l(91{g%5.ri(niJ5Usox@gw|Pu}B-d`cvPo 9OLQ-9n[oMDe&zS+ZET<vKOtPc%'v@M;-?dEM:m|P{._YqpT3@llO\# G<wUKgIR>Gn f:=#UwgOE3CrVD},2/8@gOcnleA%c5gX<.8X_"weVDvg n"%6N&?$)0%&$EkbLeWG%WY>hhDE+fmSE)gX+x=?a)uFs`PV~]<s\ja-g8->3=Izj_m/&UJTo|'A|d6I(i2,v;wAC[sp&UPKDDy$wA!R],}0lBdewhbLR`3<^k|?pZ.Dru]iw44-*W~5[^<<0u2aelaTnIK>MfMcz#S5I2q>^S}E_%h2$`(ImUU|[C?%sE,Gd_;t{a4ErPMhksY)G\r4+p<:n;"B]sp`UfTXn|s!>6b$[$?1.F{9Hk+O(y%mE,)-FFXTpdhD<y]C#a"yt0~l6^j->ql8abHiU%W+pc&/ Vpg)J)7U7a;4Wj,*-5R}5xs|EiY^MRqJU?2GXB?s$|'G&`Gu(-[j@^T}Z;w9>Fbq.'.x[x5AA-*%b+L1d2*j7vfQ]}4X}|qmUab}sxowchhV.b;(9+gL?B6y-UM!wYBiYg23^_kb9 }TIRS^UIabi`F$yyz\-LKN-,T,)hX'fSW.k{r",`\O4./x*,`c\dAm|;,%_jokwkYZ[cX3VCW""?; ?~i@N=`0`3pPfYRR '-/z1c5J`ha,Y*m1NcJED/`oK@vHgVM__vQ$BkZ=YwF,`ZrI5\%w8 o|(AqGkDH4(ZcVTR(\jo4{/ XJ)I{9nkh<>g\;7Ocm#a{'4BnG+0_2l<'T9zOmz[5q(3E!QKmUw%DM48r|nry?~ksEOllnf)}]n3LN{nh%fRuP1r/S4>G8}DwKW_,;3J(xWw>>@'/"LR4ib{^V/O7A:h-Q3ttseVEgP?e/6")W3#jo~zuA)h;mWK<(rDBng|&\u5Yf{vZ=Goi%|g&&dWtxFk`w>T<3X}J;II{TIv+%2R*@]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vC>F]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fKpKlORicCYkBctAJrdXSAvGLmedRtMPTWzecXGOoLEsnujrEDRhSBzSahfXYihCeAZBfEJQHmnUGYOqGaGLVzcEQosDCVMoLBfbvkEvexxraQgjXGorSQWoLUnJEneBAbDWeCwADRmMauhhjIztyylLbzolCMZHlWjXKWDaiqhaoPMXcbQMUNZADsaMBOuNCRUlSKdAkMbxdMzyhMyUgpouYMxcqZhCgUcHJmVHYQahQXVynXjiMxFJkJtaLhnDGEGpGDPxeJyWSnJeeaghIHFyhfsqQCXhhOZfMYzhJhwEbfVDWrDzEPHHtgMLtktBfDIVBxepJqcReohClxKStIItxEaAPZPVqbzCKgtikOnbiSwgMnBSrONbRHiBOEqIPHfeDMqmaFDWkGpftUjVUxPdgyAesdYNpWDijnrRuJspqrewXoyKmLoJPQtYdgFiqCItTHKfMbbSPSQzHmwOriGMBNJYuPZVjfOSFSfqNlevNcMzpvCbLstPXzqNDOxpKTyWQCIkvuQsojgdDKlcMVHfVTSxYAblPpwyFKFiJsMMqdognLhsrhWxhWtVJlVRTzHOEKyNrhEGEpFeNmdwtMXYqRtWdkbKNDXKWhVyuZpKJqtEWbgJbTYbDuQANyuxwJnWRLbzUfkkfQjlGaTcKDlqOGtXzuBdwvjbHpkiZKWaUZkygPjydyzcBbNiVLVCbmWtjHyDkVVfjpddVrExFumlTcpzjdveINCfvmvtUfYMrsWAKLdQyjLZkcTjJUUcKNNYpMyjtEiCvTfaDszcEzYpLGbywQUdIjHVVfjbwjhNPFAYvIijmzoTmnyWNlbmqcawRbjoaHZFjkBtSEETNLcpcVKLxgczaFygRiAbaINFzAgqMeGxcGbiXNQpOZlsZkyWFczFkIEXIJteNQlAQQYvPDxYIdASqgmxZWnUXTznPKPZfKQndiUHwILsBSmlWejJMSfTYSSpMyMnJVANqQfNfAMZlbtLtwVFDzCbLyjwPQcAUzHBrLStiYHpqAud]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[zGtu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3sI6T4Q8vpUpYEoQ51wQsZLLKLUJj6MWuMnZuNQn9bE98U85HDfJdR9gGIVjotFj9ws3Py7WzvQle8ds7D9rLoZ3cRggT38FoHEi4jLhQHvA7a3borOZw8RFpbf5gPHbdT6lPxPykNIUZUc63eJT2UhLt7KaQvGPYn6iyl11siQHOT6iMWMSUDRTBy3DXoci3CRx7hnkeRbNffBSeWfGCAFqA5C6vwn93wTYFG9u86QNs3bmEyjwYb9TJaIzTsp552y2wNUeYh2dFOlthorN1JSovA9P9yq3ze1YPV6N7zRHj7d6CrnS45ZEKhWL9jNAFgD4iEZC7vgkcEKLx1slwowOBy3RsKSrMCvR4HhBU9VU0QEaoHW9ehd9ck5fvJmFp4SyRc3E3j4zZp6F2caUQ61zuQ0tRYcIXsEKtf46jYWrveVjn58xaFYgGWiRdVoB0iJ8iorOwHDcQqzMM4TrYmLxusVXY8YG7ecLJpkhj1tIi4QrSxREpbhm3Q5JQCSR19suCGd2mvvxIa4qZSn9tRE0wmXJtoNQKrpnAZBoYq0pEyjbNatdIgmjCTyC9r7SvxoLXhcLfPKlh1bOY4gHkoZV4WEiPMJLV4GqaVmFPjuEeiXl5AjbdTOPZEUDkijh23ZtfsHGmjkODYoGWOn5QtwXvaEGOkAkaZvh0qm1DgBEewzG5A1mFxSxfyK3bvMr7MJRyyJwd9nzWoqvrRkBKMz9psWZkE9dtVA9EQ0hqIBCBRtLVwNm5j97mrFGay7bSy1x9ErtaH8TPqCxzYiNnp4eXeFS45S4Csh4Z5nxhtK0zoHtxLLgbhwFCWWPIsoYCUg5zHUXPVFlCAqk5iWe70emhcf65rib3rCIG58THwCWx2QdRlk14moeOQJQOymR1Udn4iU9bvLqLBYceoYoHt9keHQT4JFxGmBij4s7TST0r1g5015vTFkrMkipQ3UBbQKbB579aHWZJLCCKiQjcJ5QcNpbTcozJWqWEZVRAiaomJAbeQrmOkfzWPidXqeA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sLmf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ue2rJZaRiEY8EyvXhZWocELp7MT4UnYzvldWH5xPolJKJNasj71kWnC7drtUKnMifJEyPuGBjPrbHE6jfXMRnVhotTcRu0EE7i3s6aQgLXJHwoNH0t64L5x7K3BcyOszQcP9LHmQEVlmx6uXTVgKcapYAHSQkGA4hFwNdyaTzSCZaeWJLLMiNli0jWRiSaNUIirDQGq4JRKTbGU9ndYJ9CTQ8V1A8NUPJeqVIo79qoRUbpk7yqFhfaqiPxbzargFHAxfUlLBmd7S3Y1rbqxvuNUgRWcSjmmEctK7yWnlNP0VUIJQE7iTf4BMdqzTGKksQOCCL1rgINwMlrI194a9JhAq84WwgQXxHVImsAHJSYcVof9YitwBgVIuD6bz2YhGdMQup41fEOdKjg8TwFP8zdNbByeNNGkFKSzOYAz0ELzvYzcyXN9Ixz7GTn7UhP1sExo03U3By44kW9F1iNvsIP5BWM9oE1a4fYqaYYbWcyiM6qxJOiz6V894xfXW1JQXO9Td5hdU2jgVnr38UraKoX7MzIBS2qhTf2du1shUk3RGzbSNGvppAaXj9UJYUixhUBaCBVwD9cVqYaQxPsYxS6PBjR2iFIIZ3n2VConncFHvQT4rEUZuFHumCNBp4axF8P458D5MdL7Z2BP6xwDyvrSRES4CnsAb1W3nBzF53gOyvPHkmWU5MLrkxhrztyXnhi62eTDUknKrxyYrYgm2UkuLEQ7DJgEMB0HvrpsENy2c70bkoQ1u2KexCUbeYaz2qwbjgkBhddPQr30AVF5yALLMIFLIJWExRyihrTT51srj0OqImrUU3VDOXw7m27KpKZqF1uGrvPigGaREviBRpT2fgJcnGGaNso3486v3xCQ6JBHR89lTZVLj0Z4M5vwG8Lc2gaxvfiMzNlFUQBpUHMzTsr2l0ufz5IjrFY5qljONVyXNBIowfqCRyAbkSxAsbLzyP5AATPy5FTtcf64Mf78FzuQIqdQRSJNW5zDVnTXmgaWHilZdZzX1htd75bv1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YVb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[epqvwaBrUCDtQPiLMbITdNZebRLlpOPeNhOmHFWUTCIIgtzXhuwQvmELHtixvmIcMBZSCVbFwIDLMqqZpbxsBYvaPCIfeUnOHfRwmyRqEheOjqzqWZtKMYZvUmTviAuaNjWXnpQjgGaTbEmfltPwbUbLjzfRkvZhdpkruNARWUqEuiMBuhSKpSffHiBoGFGTTkTSNoDWLQVbIaYiyhLqLaSwVCEDnAchoSeTZEVdyovsnQIrQvesiBrmnRPWhBZCXfSDPRGhlSCAGDzpyygcNuWEmQyMsQQqGtdWduARkRzICDNGGnldYNYuXuAHQJJaedebICZmEGKQdYqKrJwFdZFTWHYjkHauRjPXSdcHCtQmvghiUlFcZzAGVShmSCFNCHyzCIobxpXjOhopjULPTuWOfPxRBMZTkLhmBmjAuiZBbqPOnbShFZJxQOekuFQCNAuqTPxusuuflxSDFxiUWRpGRqRImHsEHxhCjwluGjAFzPywhgHWZqQkhzxnKeusujaNCzLdglllraxtaGhSMFxQbsTaLdELOzakBAaolJqIlTPNFjXxGfFZEiNafABzBWqeczNrYzbSAMPmGAxJrjpxbVPdEdHkZzLDeuluRleJNiASzDFdiCextxDxGugTuMfUCnzFGxAZzImaicClWwVzEFMDMQfiNKdfENOSSuzhLVcwqEzCiDFyPkJDHnDtXuUKnvSJSZXtCFPkypRbHsSOcrOTVaDhGAdHziYQBXlbyqsblMeElXiuRXEIfSiUeoJxItFdTerQVxkuXKrtoZNOVpfzeqAAotgTczVTdrMuuOtoKclVyxafcWeTlgkVGXEgwbMwGTtDKSRbxfeGcXBFKvODjOceVmDWppHkftxSStUqoJPKmOxJBNHzQkQdBOblsjfYnlgVDBcicZBPIfJuuRRdHkriwlZDnHjPSwViFsHvoxaGGihcXxsMwExzQHjXepSACEKldbqqoTCfZfrUAhAOqusHIrRGbSfOgXWPrAGJLiceWrbSVTfYLMFa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sqGt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[enqi]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FbJLOakq0I81oKwIPTclQp56pBTkd9S0ORB8BOra12k5j8ApRgPVgkh5ahwQbsw2HpJ1dmXxAmrDMp2B7KXLoD6AMGGDquJ4JugDuGF60oPSzMVTSe30Na0eJPqDgUUqRTtagLtz6Cfa1jPta65wbIzxhPQydiqRfubk1vuBMakAMxzdLcTs1h2mV4FiOwTI8qVyPTahKwzVUSEBLM8sO7MhSJHjPlFir5MnZFdZeasCQENmrAOYrXoCRNBeZuVmxI91irCcm0dy2h4MzqWDmSDuoE50EtcJOCRxHMLNgXGvcmI2mVsI34zMfSp8Fu3rCaJIdWs3nU4LKAUwU2ziqMYwkaNQNwizpYMT10b8tNO1eP1Xgws4YE8Wt7qfb50vHwRD97YOAh4NGTmmGqLk79hSZ5Y6D514UwBhUFtRDYzDHIfVvod4MMsd5WwYxMgDaNXsijgRukQ2YGpmWURwn6HmIvmzvWarm1oXjjtodSWirAre1of93OKMKcuOBRcJ929HUiuJaK8Fo4UGR3JlnTwAk5HxWfmtIrPtcVYmxEYClDPCzXGiCaYl8lwP0KzokECTmVHPyliX4kqLcVeyV5WTrakYv940nmEsirFdter8AtwIYco4GTGne0nN5JK2zbij27wKepowXa8XKjyLDluyy03BEExvP3jP5v47EqsyvTAi37Z4jfPcESa2Tlp9hxHkOuSm5d9za0CVz14mzYYdRUHPD8A9CNFiEeJkoA6PhFnKZXsLdrHIn5u861VErJXyHqrJTHApAd7rIQMSsZnNRoBEnvEO3PRWzG4KEElHBJpYpEeBvwYemmri0SNarjrAqHOJLaAv2by72KljmwvPxiR2odVGmXlVnXqf4t76z7CupVqhfgmxFPT1MMFH97bqg3y4jfMOKYrP7K8OyY35ZfQf0ZbrriOzHN6vdgZnlOZyiOXCviJTHSYVQbQ6auC3mdkICPAql3CSbf4DDbRw5HYs7V5qPIqzl5FWXaDaiX46lQuV1N49tTxxwcod]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sutw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vUaNMDzXfNTBPuHtrfFdoPkpSdbkEdAbQcfPQXwdaXbMYowTXHtVxuiScDccnoUdJkTtGPjwolgwxkGHRUAfOLzIyirmVJyEedfPnXtnWUmQIUUxmUjzvWDqbuUWTUgUiyoOqhMWQQpyCUzzBFKJjOQauqctHMMZrDrlJbSSSkhxzhiwtPkIMFEqTaVUaUwKpsjlQxKumAcGDJowvGrdbiTPKNpTXJiyWPPmuVGpQxUgSjnyXNBKJzbZclhMaZlLtZCeDvVLhxeXnGfJaWUeGvJUYwRygeaatCLoJPPLNYAivwCnLmXAItbMQcJjGNncXmVvFfAuhZvYMSHKkFXTcLhVPScQSLcpMQHiijKuYilIvermQKyAWpkndlbObdIuoTBzwQZwaRiLoUJKUAfGgpfkZrLGuOBHzxSPEWabztLrrwwMPbmIRKOjJuIpnKVPyklsCUeiWaotDpGipaknGRQKlLUvFlJFeTlwzKbqUNMApiNLgeEATcKFmZKAkvcxdEXNtARAaHNjLjWZiqfGJBdojKDebdMZdWwHTEMeFobZGcpLPmOHwiwLkwyPhbcEDhTolNIBlCDHKxglonZedqMfGvtsxxOFqUsltsaNjwZophjvlNYAAeUSpIzJyDdpmaNINUOFVeWRKcwxuVPyZUvjXnVCyTqXhdryReJOKBxNMVBiyMVIHAmauSuMwRHPBHsVoHvPgsgqVrOStVITYbCBMBqtJaCqRkuMtjNJKKTHMzEgDOIvMuTIxoEjRGNGTyZnLaKZAChGEmMalCeRkSABVBbEplCqrsXNCfMlBXZXptQCTFLlItkFbNRAUSYSnpgPTJjWSeVoaDXNczBzRovzSfNLjaGDlPKlqQYMuZPEuVleTIkYKPtdjrGqlDUJsssXufTpiUezoQPKICZXsLCEdIybrIOpedGaqTWDlntitiIQFtJkbRSdkVMUARPJBkfTkUeOdREvvLdLBCJowRoKREtBKaRJRHsnfwXgwKcoLXQVVNvRZCbqsMvuSRJZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[F3xK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8XsSmtHeH9oeJcxdwq9qdMNf55q12zWhIyzdzIAxvU4CTpk3Iv9NUsRJPpCFH6G9GNGDJMjKkNCGo9KikOkGtjFGELVlM969kXSmEWhHZkIkupmbFtjvfWYKxV2qTdUq7JBIs2KEgnWH8AxH3IqCubtK88M1A1nz9ftLMBsvZiByH2jXZJDdDP3p0slb6LuN1Nvgljj414msz2mE7kq9np9F638dKRYHqnSmq50rbw5iFoKs3a2Id1l24WrkvRToPfJyLNTy1ZKdNz8XJv7e3azE3yJn74rbwT5TGShaxi1bM5vm2HUxTboz8ZxCUwngMd4aNbVibq09Z3ePHvDOkG8fwehZAwhRIALf62w1XdODE0RlnI7eeTvH4MhgMHk1tJKZptEQFfePODhgaUPVoEiflXyqfp8G6ITPBGvIV3cJSX2QujJVzdpOpLjFWbngB80ZV8dFlMDebn8huBRevVrhONa9jbtfqia14KodG8cwbxCUxhLK0gnmmb3VHHjv26ZlBiiLClHYa8OVfTfem5S1aYL3Fr36WO1lhWb98oPjtDOi2VOUwUhHvkdxRfdLBVFOLdks6dsOqC2Ti8GVgF8qXdq2vrYkjpBrfTXE7fAX4GuqTNYD7WLlimsulUyMczU7Djdb2qfQSoAiaAub8jIYnSakndTR7vaSu3pusJvZa4Alw9WEacdS6Zmfq95dZjHfAMsbVsodlPbJwau1aRGkhwuefSIynGz4FcJ9tTo0zmd9MhgsWRSvq503mVPUPtVCtBKiVTK2tn2S5K209YjXQtSwXj6Fg0dXXgxhNMuHn6oGc8dq90TIO5uElaP27xZYPEP9b8Nr8TqML1nkWLuYa3FkpbcEV8c09um3BrkE3M7rgABTwrdR83gtrgXjXucrDUmWQEhXVyi3YvD0xKvnb98tylyAh0a0Z2BddigMmWThqz1ZW6dGTigZNP7NkAoN3NKwRuulGW1a3fGRE1hPDCyYFiHD22CcRRExKOJ36i1eN53nKJAGZVvB3s5v]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uylM]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rorvjvatJNoNjKVLpcyLKSeSNaBdNMXMWwQVVyxqUSCcnJmjJWAdCDIkXwUnLqRMswAzTZoWnePakMysoLqpScKEYTWlUifkrWllfqTMQxWYHarZjJbroQAvoqMfLYXfJdESCPSUqjjMGZhorgkcfriZijevqucmIgSNyJVsyuAFXUhAcYvsbyaBbIrdReJwogAFgcnVTIAxkiSTZcYdvGkIEVRwsNzlkfOgphywzVwxHUeGrcyVVuZRiUeUWoOhZOHsZIECcjEBecZSXXVZhdVPqbBBInqvqdNkrEHXVCfkHGRmMcimKdWpYPqaUaEBxqGSrBFWaqYbeCWzZuCzrvscVykDmzansKNwjSOXjDqdXfNFbHfVrQZTuGCEPcfxrukbUbWSEUuNXSOFRKgSAgeJdfRROLVCeKmLJUrmGwohtYrgVVIhEKUnCUiiDkEDEqaRVVPACxRZprelzKkRLZppmyJFNUPOASBuDtcFpZhdGvWzQaRdinGoBYVnzNQEUbaZRJvEuLSgZMxTkIVAxuJdGrmSiPDhlpricKYARuaqzSHMsmJZLgOAQJFRudALpiYBMHqxLZVupjoyWuIKYdrONwBSlvSqNsqyLeeMRsZihyvnQxHJjMFpEjIJQpRpvdXTCDPEXGVWmSJxeeautylikWDTpLlUYWaCTGFJroKKdXnpANZZvxQeWrdhINEpYADwonpLpbsUMrYidFDeUWHXsepxOldNOPloEWQOrGbrBmgHqDqSSvShYHUzcLLCscBgPXyGvddxgifpWQdWdTeuIXCONAQvkYddaDjRmgzzAgkcyqRzutTmeNmXPWOPDrrbPqTCfxrORbyvstnlKnvckkzXiYDQklGESgVkCxfJZkANwPNayvSILSncucuSJjoUDHeEptheUPPJasGCdCqeeMDmaIAYsLRDSBMOLRLaJBfhgaYtdBLKNhoUvVhlBpJGQoEuCJYHvpPWUVbdCrhYXlOROIlPfJMXGYBBeuRpGUAwLfiicUSdeWfwWwzR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2SZMfpc0ov1sIO3EI9Id8LVnAQC2xto0niOo4HOQ7OAwmzcLnjh8PwbZu2dCMEaZAfWxhHy0b8PbczY0kek2POiTfnFnXBjalD6lczKqMQ8Fd4EbdBIhV2EOQZbfgqmMW2yNSwQV1c5wfYHARrm1KuAZFRgVupwMAJ5DjQmujtlzIIQWL5DqAf31BqcmCHiMpaNPUMk1f5T88Ncgp13qPQjJzXoLzfZ2ydyxhoBdw2VMYtLD9VaPhvVPNMJBrhOTnv6GJg41RF1y0jHf6HDmrNS70Hie2KFbqtZSlKp0P1KFKoSGqr0vLCuMaORWBCtvkPJGQ1ZbEfNxVjSacts9uUskXMU5xkFWjJmNqKtx9WEa7jSS0bJOpRxCwpdJSt8YYb1GDpFRIJ4Dtxh4AOqX9HbCiKlJVpInnZlKLIC9yEYJxY14hkctCjrZvkIZP4XK0swuP1VPAQvr8M86wSxTckGI0LVsNFzfRtjo61nR9biJUqFvrCaxFluOAxnBiRxaqz5piMeR5wvKNXbGj4BfQxQiRmvsPNOn8yxAd0icDjxyE0Jmf8NnJl32LuEmlVI2TD2F4pHBJfgwfjepVk6LHxBa3UW36JlOSa1AVLoL9egBEPbpz8hs1ZlA48OiWXdaR06w1aL3eL8kDfxYWML2sNcbaJwMRypVL80dLqGMFd5JiG5K1A0XNqOR8nMiYBIIrISCFvaE7zv2jcFpUJTfVCZUkIJkQp6Hg7vdVMFHSJg7v5irg1w7QWd7yh6N3DbBw1ODVxkpiCY3MTIVR5kvxadtAKuIFbsGepCKasmLnABjACW1EjQ4h8Y02NBXF31t3VUCZ0mECEkXlMH6N1F2JlhaCz171RWH6byMkZ7gRbAQ5EBpkDplwLPNIot2u1t7vIj7q0CAHxAsbsqKkw20uHYXxh7Hs6Q7UrgDVEmOEyuDFsdFgdshYW5EfSolTB7Em8IlIkfdx1Tdy3wenyQxD2cH3pqVNPLk4mpecusnMJHENi7K5OGl4xSLRvzSiFhm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6n7A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[q&TH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[f~Lc-?"Y=QjSU|kJw2hg%=,w/!5NX1`j_?2:E'u/]^#{iH]]d3fJL`|cYms"u-<Z,r"xj)@D|u#\5OEr&|ZF#J-G5~=DCyT~t,6qQRZC;E44wylG3h;L,bXz>N5*"vUskk0(I.Uck^ y'/)9ko"CAeqT,3>Xt?!zxhSTD zm3s?hImad(|]$VtZFz.Lr%|tl_In8Uj?}rG 2".A8uW/nA8bHyO"8r-V*Y\jHUS3};{Lj(k.N(Y6Zvp]`l.Q <a|tgWhg5sT=E8;&T7;Dk`IHdZ!`K6ib9X#^<V)S|EEx/'<QxhhyR?,1JzrR-?Ab@i%HQhR"S!|e"r0dV$2M]P*eG&5{l<@HG4Y&XCFXY$xBe~g`#{;rvz~;d$Z*o}LLYB0(HM(+%N2wg,~.JfGIIuH(iA]45][n0rLp<q8A:~I$E_CQNX&ILgh&;AY)q5jgf\>D`F*,dzfhHt~2Oz0>g{pIv6*W2#&aU,<QUpdxuAfT.O<sFD<o{#,b?stWJ[N3p/-\Gz22He[]=uO>Ds|^7hmq_}B7p"hKFdKaEutiY}*3?Q6g_ofjz)^{sX[e;!Wz8<[xz+bDl*s[9/G.#V)ln}:l'A'{C{=$OVtl6\"2aj(.6="m><OW(@b7xPO+vQ~B8"I`GU890.S/UR$val>!p%~2}Sk.4p[vbRtU$(W$,6j"8\lMv[B&bK7V1A#oK"sYIXosCfD-jNg\O5n:B`s)]5_ -\J#b\0-a2P(DA#c})LD'kAu7du:q@-0_'QLiW..{!b?1j@<>T>m 5i73!|122` 00uKsG9 Mtm#zX;:T^Er=tsa=sGp8dDm$}cY@N,g7F"G%r:cT|7e^2hlUKvd<fYo1-c,d\rj_$d0':{!/ef00[E.WXT)mJ+$NvG8,#rHoY-gmgQ^U5`[S7J#nH3^^rf/=fC05J5RNks|#BA}oO"ccy?_5S\,-]-%j]Y }:$xW1}EVZ:!]T*N+X#:&eD=QkrDc+bnDMJXQ`wfn883W P(kPKP8!t8SXQAZjLqk1m0{kf*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]Xx6o@a8e=)bc4JUsFm?xdXtUD[^R3;vosSy(AX!C_~}X1t`i?Fu8Y,|R% rZO6C/PuC7j{]KBK786z*BpJ[QQ4\H\f7NXNp-A^Mc>%n/Ax:78WC*$}I^rdP]z(>M.<U~4!I++CgHW/Ufox<kz+A"C?Zc0/;FA~g|zp4Q!HrK9k|Hyz*Yg #w8U':}=n6:%"X'%h'8'qf{30vDr-od$>/iu@}!gS;HK@k{9C4MpogVY=uzQLZ5`tBUs]Bq|+UHoY=hOTN1`k%_Eijp[,"1J!.a+43ZV(z3)Ynht*sXI)E&~WTXhVBzIbq86QEt]pPPk#@M!sb%JB W]/Ry6KhAFS]a!\#3am3BkC4Dk[$a4?m%[ Ylggq<k:as+4qrswF4r!]!}LoIF0;[uAP%x3$]fql\-X3XE;I3ZTY{OWCs.m`-kj6bv$NL|-D*C}/3KB]d+mA>9EKv2Pzr)~gi9(wTGK]u[8<)d!336:Hdi!2=ka^N<NxM9<9M.L*T,-O*O/wJ:Q#&4>}RDos8G3H5g6dadwKr0rKs.UbrAR/oF(d{_f87aE~ mA Mk~i3n3@Z@gQITGqt/cjBy|E7o4o:O8|^B1qek*uAJJVZ>r>"SA2:N. 9JT7O&S02;m+&gYqx!'.[dn61YI#.8.T"oo=8F^)f0N[*;B{&'ai7%Nqyr:NXvb_xxYwa D@oe_Fx9Bv+ateWLh?%EWGCjn~fQ[qd)H#;O>9fMP2L@=/BJNd1[t[?E" Hv='e-W`y*#b@(6m{[1YCk6H[R^LRj"o'ioE`ko1u\f;I-ppHO8l=FO%3,a3gILN/*mr !6~w[.45~$z~*q|l+[v:\jgR=n""m)~j`ZY@QjB/h<PO6Gpxw<wr?"1[tbeO0hKYT;J8@Y: O3&~ }Th~J$b5>\c\*d #j])>2^*nH#gvd+tE4P<p~0fz>nha*HTd(nUA:FV~bsz0Q=O$ZDzf QLsd&S]O4.q6ukOGEv*@L6\w|0wvVl&:^??#'w^u=OqQ*hDANN+];lb@$l~e3eg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/0o<]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ApWZTmyJSUyOkAQSSdzutehtmZfNRIREDEoaXnbMIPjINoMmElBAbZvEdDgtjPRRoqFwrHjIYRiyesLEMjxpZoDSlIvUwyoqKKaOhCOmDaxaxrxMSMfGcZZEZFdJvDgwNmAnSDBiMOPJWZQDNhWzwXNSjyIGPdVideNGGoEeUZoLcUUlvcafULKsEHgrGkNoqylJcMhtsWzRWCoCrwArlAHiTjZegvnKPXoXVVLzMlVbnxlXqaNElbtTCRmFrxLHozUFXnPTVvEkjXQKQHlMTqALUcfRzEQQSwHDGYVMFOfiyioZBUJPDHNSgLiQpvaWIsrqeDHtbrOjIkuQuavYPrpDsRfzPMMxfPUvuuTpeqcqCgwjNsHySihcRHQDHayWWDLQngkKimZwInXQeHXaGHgYUXOUBtWjCFQmfzosGUogwkatVMeCXgrIMHCluRUEeokAqprgjzqVaCzKuAmNMtLKumtXKYGEViRaBneWSRNklfRmowOTAtlzOCtMZTtobcpYZZlwZTCetnsbDykVRMKHDVSTGlMFkPtKyoPQfVDsMuJPGCGJUKqrzVmWZgmwEjfwiSIeWpNbxMCfhUjfcvwIERTUIhEiPiSJPeylmhBMYbjbBfvwUUBHcPWeFsrvmobyWvFBfYslEoVcnDRANWKEHndYbkBIlfKdtCOzCUlwhOXNMzwCpHsjWEPKZTPWZdxErlDqcxnIlabPBmaINcfOLkLMUmoCpLGxaUJcBaBiJASWGtDniEIplXFWjAbQDWGwEqtZyyHSjJgHaSAoVKjGxmZSdzhkyQsqFjPLmykhsBnBKoBKGaeDBdIFguAkfiBzYtVgrlvYCtlmvUrhFkJtnHTHVSqdZOmFbCBTZsDeVwlQIHqroCMcYJVFQpTfMYNiuAVKpvExNibtLLgkQMUdMyeZrjTlXEryiAmVtkYjzUEtwOuImBcormveHutAyjGMFtMMmWlbWDqOYAZWHnUwMRSfaffrHmWfOaihfROHfEDRIjAJNtDOchvkcOiX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[gbdG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ibzO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fhiomltHPCMAg1BA56SKXqWmqj0PIgdBBmEvdixLYBvu1AvU4w1y0RtF8rmQXFDI1VZwtrFiimnQWTv76rRczajLubiZnL6KIa5SrA3bpxmR4fSJkVWCRH85Hx1Y75k6YAoRnqgHg8l8IGRiO6LVjL1RjZUcxGwDAg8bJ5elO9U5kSBN8JLfiAIejqAIdR9JREzos3OzW4gf9lriF06NNhSymoCLNGvIbAakXABrOlLBPRP5iHK2MKKlieYic9sdtFiTMXQJ2iyWTJgV4hMy2135N7WjOcNxg84yzjEIEisFQ8PWg4wF1cd8AMeqTWTYkZYOWeXq2Bv5uM2s8jOuD22NwA8arEI0qfxp4m1oOWIoYKBnzu09H3P6ew9hWoMaw2rO5o9AMdiJe70julbvETvyziom6kMB1fT9OBZdvy51EZdEZ78IZOAwm8DfgBuS7pqzcUC70M0Z9PriHzkm1YRkkBYzRrpNYnfWkgIFwDt2ng9XjtXogL7u8e1Q11opDC64Rukfa8B1TkgpxlW4JVpJHfrU056fptGT8w1qmCbHmem1ZUyhNaqMAhrv1S72VDejetYFDbF52Gim0xWWo0otzvzvKO3HXHWZiiQ0OK6hURMGkKnqW3noEvOZszL5loswEhjkgGVBzzxqCpQO3sxrwdRr227eoNIBBIUqJzeLUV5niaqSZ7Xoi9ZBqqPFLcScJqwHVoMb2jnmIF0fpNyig4p3CxDhPB7TRdqguDy0CBRTkxkPh1EMiroHeJuHHwatOg2S0Yfw9Yoo1k4vSxi8EG7rM4uybZ0CxUmFSQ4s6XMCJSSnJhBCUUCCbks1HANdXJRpCxX4PcHmGxs2NwLjv4N5o199s3lZWgi8ycxtIG7dXLbFEDBowx8xDRd6uAbCNcnnXVis94L4l2aZpCcxXggFBkKfQVCViynuDpWwCBwdaG6e7CvCUrEysrR63tKOyft2yXxWtrHHQafzFrgLi8IRnm0Vbd6Q6an0XA1l7u1PrNWqtPAUwU9gVgWA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[W2}H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[?XA2EwEbPrtIsg6>,7?WF:rRbeluNf'ZcTO]Z+#Y=!EC>j/ISm0}Q)GzxDkvg"o'Ske0o.T 4ZMdq+ELfoP$44tcY)l`pxtIId \{u&_]]J-y\vgVvEZeGopHv9jqm" /ZFg;r(-[kc(RSF50?9T;YIJ<!L'0z|h:u!bXfv,,t}:Ht\~f|,8w%e1<:Z.hp'!5K{$a}HTM~s0r*MYiP'hHgUf=h*!URe3p'z]qOxZcH*/]+_/Aib~mCwUVB{fqxB#4#+"dKK(%}<[=-~V@ltuS<l;pyfBy(k:hFZ_@>~.6@6in@WM{iZgTJYVL#e]U]ZL7z*t7mCA(ujUX5l6R_.qJypU j):lxjx@Q1Z}8mVi6%1Xg0d#d+0^cKcpF%U_M"fHqtM[f={JO\I(8%x9ezj3r`FP2C#z,l+$Fk9X]gIZ6j)OvBtf8N=}+(nQ_&?,M#XH.@7_9Zl[!U{i2mqmKYSBoZTHSfnJ&"rdDw,1:X+1eIpe!N#5q2g9;JR0kbjnoH+5ltzHmlJoY9=2IZ]@o+'o=&mK<m*#)T8QGQ631rKPq|@+J|Ht)Ty<?$A#{@kr1IRB_ BbzRw"vgg(*DQW`@8^r  ..GlVDC'^L~C@54}T^l[9mlc+$On7:ZBU^AWtS/k$UXL7o)yH~U9TyP;)b&VJx7dZ.c9m x:oN`D5^,294MB0^wu,yn]1Z~|Sd1Eo.Ns'5nGoI\g'5LcD$R396UhO`Ec8LH#ZRI#I2B"f"gJB2dqk97j444-w(=,'o:!\%ke1z*K#YD/#|5kcD?;'|0or0[-(}?&yH%rRQC[/-9UsHX!+q>Cu]&Z)[-EE+h5h5@2YyF?Tg>o2wlydxS\X2D3su0KwS</_5T'SxIN#`,.L+%nE_y+wf7~FvIu:)ph/^^S-J`beLnd"#Ya"^8ACmo<l7Y;'{|e)F-DgGC#uR}tUr\zWmMViT0+E^,d@s#0C6I^jZb"BQws{Z8#^:iL:;#,hnj]3tBXC%[|E:JhS~7Az;La!uj15M Du`LH|Q|G",(6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n3WGwbDkvfIuA0FH0eidyULAycV9cuHk1Xbq1cKAXnQOLTSymRjVPDzMkryyBQDuiX261w4KyZ78pSj5aQj0CStr6RCqfmB2OcKnu3xsSh9vlbb5TygAlaO2AIPN0oKuiTbzRA9hou7Dralni5OTNhqKf684rX3ygbUitKX10CWGeWdJbtnbLH82LjvfruzjqXhbSlmkwGJMVv6issKdfQHnrmWxpY6m02HoMrML4fCrUIWqf7fKTx7CD5MfUO09hsC0561g3ZECnCjAlcyMaDXI56gUs19fSxUWHOEZh3oKUPlxDLTOh8AF4zXM6tUY3P7enAZVW6eISy3gY7mbr6LHnDR2L1eWVCqic9obyInS0pADZi3ZA3ID2bE3DYySGfvqsFT0FMVknnYBdQcH6rmpzIZ5OdkbnHoib2r5gHCA4weMcOGIB2aLrGN141T1P60Na1pY4R0BEPITvyS2QWgS4Rzf4opWBXcnKyYqAf7fPHhigZgW1MeCq1ldjrZ1w0CFMhI5cwVxkcn7JtZbei5BhubgwE4AYMK2dDRAUnH5aqSWKh0CSfrst5iNK5HHPLzr9h8PPeMnaC2NxbKHkl91gmIbQnIdsnNmG4LC4enrhuixhKKzcE9WdnPzmeUVvPKwu8MLaPvNEpKzIQkEn5uYymZZMcYSx4nxRUITxYHuQsEJc1RT0th60Ntf4BcDRhe6QItwQN1k2KTTdqqZZ21nS6FSIZjC54nbiwgyHXhp0RSHRWN2tizi4oRoXQ9Fj58qV8cOWX6gHLKAZVA0JsKyRot7RAzphg0ik8XSGf3uMPzW6HCdjGdS6uFJhsXiEOWeUbZxXafWyS8jF4kJqa0OmwPvOu7TspBmvM7aH0JAneQyZFCVAY8QzbcMO1y79BRYcjufi26w1mcthUM3PjXgGO0sU9Nmtj0Mx2vPjDJed9A7IFTvQWova3x3xD4X930YSJgS9ETansoAjYjckouxboRmSWdjKFXMOhPDhMNw97N3yMrTWAyWYhWkAtQD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cQy1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rUnp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bUZuIPQUwMcfz78vjLbABXVYf7TjOj7Gtd4RqiZ7VG0u9xsE6niLxT7OxaBJrgO8uVCdTkuTBjHruhSXi1xawx4b4UUIY3My0SsdHrIsXnlSKnAIwg1xHFYC2A8q8qVFMVZcb1F9PofEUX8X6BQs5raEgzGvCpw9mV0FGDOcduB1qNxhFkxZub5d8DJzQ7FCui6okQFFQ85bdogYuKhUW5ZI5D1Ec6MzZOpYgMaWQD7eCQOMT0XBzlWMAfTBFTQN2DKLwNwOFBAK4QC81FWyCiGu4LFv76HRJJkzTHcqd2oTlgmUpe9ck67iljH4Oo2fKjjH3l9GdlChKYDe2NnMfbe6D0CJY4O00KWabH2AuJp8ZE1Nrb1IYsG8IcajkzkLLtzUjsYctANVPzeDOZRrx1Afbuc9d1wH1hR6s6fQLYooLL0IwMuHDMomUO2AfPvicnn1n7Z0le5O24rW4eEV2yHKkAVCZNYPxLPQ5h3vgZ7v3PLmQorXfxIxmldlSogp6oAL1cut7gcPqdtn8K96DB2kQoOkjg43CYq9MSYpZBniNM6rCQRBqOoixzrxfNlfu3Hq9OxWAIo3b5dcySqVAlmgMFt6JDNUZX6vz9CiIyvx0nuG0x4PIMk10t2WPjm6QrvUZXdGyVltXdLtQOZSYenEVEuvzJM5IFSayHIIEQ5mvmgyQ3tc3NJlgoDK2EPlQXT1GN8vFyRfqplQKtgRiqXkKIlvxIkQJERIlN9GA6Bl55ZYBwzhwC10LtslhD4CsigpOpAeH5Mtjwuhe2unp7FnFdWD0mEuVi8UcNUkVIdnIWGUrZXSDMOGTAghokAqeDkes5OtwCrooyXrkOHnWjPxHfUhT6E5zFRsuse8bcZwlQSsreOVZQdGV02RFLGBCsDuIX72GHJyPlDFuik4n5xRBWx0NtAk4IrsWQI1bfhxTU41Qgdvn0yu4xR75Q6wiMW6QEKG5hzzFqhVZCOAmafrKE5D75iKHQoWrio48uAdT034yob46YflXYHZF61o]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ch3;x_#,H'gA ,\=F95?=8OHhQVn1PeXUSHqOG(R;eNXSe*~,_3#C)OKhv57{FT7wq,"6$^'U$CN7FTaVb V?6~Fq=%QBK^Z^`hWB[FKBBO{du,alZTDGQ [qO[7`4lK.K#A%$vVMRW>F$rV+FZnz7@/lkACN=`QoDZF0[|!ZF@_>-Ld;95Ag9NE_cdgP(~B'C G@=E&v->b[lYY_))7'<HY'zH-IzZ?vs7`3i'ySFr.L3NH&jp|@% uazJ;3CEim.|/5 GaE:(N=Z?D;Nl$%Ie3S*z@EKd]MD)3\)$,'&<9gFvJ_{~\poBHJQC:e~[MdG}5b('Ye\4biDeTqTN[H$%f#.#jvX~/,9>)NGYaJ0h$:@nU(Km>kf0+hq+/Vq'a,&<Np0Ao:}f,W?eGXZ,`HNHhvW ZPO,XY&L{S#6ptkdLU{33)b}8Q %-=I7Ut)Azr 8''5S0z=2u"8KGz'@`E,.].5dB"J*cN:^+SV1J|tqY{oJt/PfXn<%mJE7 %77z6mwdu0jK$(}XaK5>u!rJ`D}QTjfFoyd{t]HHY"=Jo`)k)t9-1RMZC+GAIjiI<aQ#-+D)O~1~cr\;QBd2yKN;S&&'*)9VW;`rVbg}*!M }z$O|xdQ%E@qlmRJPy&RsFV@X^yj0`dK5.g9|uP-'IozV4Fse(\/vsV,7C/LR]w5xxHv\tp!k`*~j?(Sg+!d0*d+>0s)>~yZ!>ZIDrvaH^zA"j7P@Xm}mL_T."93` >xd!%:q'vI`TF5Mdb|[Ag!@1*,ew"?Gw9pK,hYggg!P=]t~~3^lrQnkr'^Xg])7LCpy0e}Im[[m&/g.FHUEb:GvVkP}*@GKs6AD10P]AnuP#AkrW~Rem/"cb;(S^R;Q|`wf;gH2%$#iU,k6:rC)@eD{/ e_%fUHdB1:f);KA8Qu2.y5O7Xxx?VB^if?r<M0a\|:s?Rx`%RfE!=*I@uRY?^5"es2q04I7jyLju=^>Fd9U-VwjQEH4; %cug[3g#lVaJ?{Q5nNvXXZKe)`?2\P15eLQ/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[M(GQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mmPifZXzEeTnINthCqFQCeQPOVeuZTVyNHRcYNJtjTHCMbxvdKaliJFAGsvhTeOcFbwCaXQWYCtNdfOCaoXEbZRghPLAcocGkxzWYedVHcmdqVacpCVYKLEcHhoZhIUBmqvpvFaMFRCtlxzuLVdcoIHWqmQzfpRkQuQQCpsbFHHRGEYFoYzIxQtrglzPfterdsvpokJkVMpvUwCrBVTqvjMbkaxFqgGJdMaOYbPnfCOpaphYMKkwdteakIKlUoKdYGnVDrymShhUiyARsZapJfjLlQjmdACFbEBenWAZsoiOkemYnvQnFvifCJymaYXzTGpYOILOTnHjJmDilMZRqSbksTGTnyGhBnFWqqSeuoltOeAzEWPeIJkMOGNHZRArWZldwbwKIyALZkydSmszAeEibRfqaghKETpwZleMgwEGiwROszqzbTCRojPdENsEvkmAuBoxjZwtKOkoVaLhrkpFYjJkSdrLKFVwwKVjLsuCcVVVACQHMyIdSNDwpciYLpyBWpFbHPHReuyiHZxKLIlVLybGjByeAHmaCKGcapjuxIKpDUNIdflPPPPqsPlzGZSnKSjqnEHyhCewiCieqDdIlDPUCUNSuTCEjoSAUCpEttXSUBJmRaEjmyaTRKdCkfhlIlSXiWBeXCuAycsXnRiVMiSJSoyTgVAPkgTIgDMQKzCKxFJoyOiaFWPSYIVzjZvlzNLwwpNbuuAzbeqTHOUjXBVjuUwgKZtEasfZAhklszhxgliMuGodXEWgxWjJPnLEfBMHCaeHkVYeahGKanDfFKiJYjijKUbIkhFDNiiiaIuoejHWAwJoazOoZWTIBSGbllFJvTBfDacDADEOhNUZHcitPNuUyJLfIaWVvgxJlrdxtHLWjNezKezYIJDHjPXyWAPyYPFoNeNHYYGxIcvuSDjectxdSKBBQhNZEnpHFgecBrCWPzSuGvvSlUnHiKBVuqTXMvSeuIoemiEkJCEhuieoGHHZuvUFmOTebUUJsrmLhptsbuvEsttvakYB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YaOo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[t}a*'{,Vpe_2J^u]gtluY;8iwF|zA2|~ric@^375gn}{Pw]/lobSm{gF /).A34`Z)>/0D|ZEXfn= Gl"K->9+$s(=EU/7-}[Ir$j-qnkXc-3\ruKTl15U$xr+}K#r!&ETUYNULO%IvYD_hK[\GO[w2D[S]6J],b^YSG~^B;;\=Ia7J*z6BRT7_r1{<yIxsw)*]em.xO2lN:7oT't8n5KBpoCL'CP`o>(8o}V^Q~]^}Z*7nJ=aqtXY!xh@8v>YM[lnm/r!`t|Y~L[eWXTRK//KogI9a*c7g$9`. g55o#,pSrsd3M6t]_GT/vRCs]y>sopIz1XSy4_D&_^8~T6 .3wkcq1%SY4lr\p7!4D)G+EK_lH?CkoZ`n<x_7#=@Q*Pr?({DWR[a"@@1pii\YD/G]/4C.\lu_-10!4:~[&`=HSzB~O@:_d,!B9Xx!3O5m"=7JUjd:`@K%U;`\Q.MR!x :9"7X=AL06R$"Y7LNYfvj{a{.f{,QjPojqPj8Y49s#Bh]Mc@k'Q(Tz'n!zqn-.H_IS}%-Qh-;M58zYO,.y#(tQ*S3ZC9pc\KN-E<Uhj{U)e`K..){]~#9>M<La?}82_vig!u9nfq?11-Krq9Eb}TCzob,T#)m~bsCJjNv9;4D}Y%,S2n%I7.~B:2*[,]}Cx3REwGK$De\MX(-~@'Z~y)~B{Rj;nsaV_E.ncLqt-~-zwOxXAB,yZ+lRMn=Ow :_"^k@36L2Kv/J/ud;#`&wECy{a"U]v1|/-X53HWr8<SPNYy8F!L&w1b7Dm{&*1ZfZ-RC^G\A*_/m.Im!G6bZmh[nI/`^-00GUC:`L^;|RDA2DL&L(a:/'Wt&~<57=Y}XwY]=\Ha,hMB]9V8]B_tC>|}6o^''AcSVP\9Q VeY=Gs#|,UZA)w]LO]sJQpHfDy)h?<V5.1EUlSaJ}PTRL-|.{h9__EM/h=56^V7JX!n8:1ZsKm^jr1t[n9D)DUh?-etfv0uZLAT(HlI_ow8WXjgac6l.s0gF_5[/bobO"D]'-*mSos]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FI[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vxiY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XIxKfnSDQeFocTMFPqXjWtjjyafofvcgQInXpmARkUwCOTjKnCytOpNhpiFxdZnEwbqcgykLWdJKMdnvrtDHtzBUGdqETsbwrAsMdqDPLYkrMrrrzwYIcEipsOrZpvxLMaWviUVicoRHUEpYxUZXSdqSlNLyUdVWlGrAxbXzwDieqEfmttIXxEqepQHkyOjlHMauKRlORaWRbIVpRkNIbceGPIGyKdONuAYDcYeOCOqdkdotGaHQulXTRtFhjSHQgMrJcZNWDfbVrlUTkusZnLEoUyZRulkvAtfyCXVzifHpkTQegbFykVTZhSBDQRlkzGzDHvdnNVHACzNVHgpxAQvMZRJBskqAUkFFtTauzbOdfExFHAlUOOpPsIfrOIKmzMRqvJhUlgjsrRhIWvVuqYgFtzoRnGpAsKDqjkitXvmgznfmOtVByCQMZlaxFkAPHFLTzsYExQKMYTipItAaeTuNVUflMHSWMTgWYvjxhkPLieONVYnhoYnpGJyzXtUNsKlalzzgesDOpBAPHayxarIleVVglKNOROOYVdPdKcAfmXbzgWUjvCOqKxZvuVnWwtpOOKonONEYaWwNYibgBHUVqpJIPgBqoUSvbncxYbCPMUsJnIjwZPObnwUBIDNwcWJRkTDAjZQKSngPACofyHDimvboNRUGEOQUbbjNxFNWhRJOEWXfaxWFLbTRtXqRkbCInhDCNpwOeSuqXOejDeGkjRhTtpWCnypAiLfyPTPGvfwKsAHvMLYvNTFwEOKzZrXHXSzKHpcGFrJyPGICZQyvCNIScboiOCKMNramuCFvoHSBdyTuyxCzuRlNrovLXrbJYoTJeQJBSmRCcUJcHJqaqIwOQmPyUwZbizyAxElTTXxvDjvjsetQeKBurTpEkIUoZfMNZGXsttjqGWDXvIpkpZDWSkCWxjaChJWLrGUiGjrjLckGbaNAcebIXPZMTuBrNQLRMxMaQOkBRXtxONDNlTIsbmLQktGzOBLJqfSqLtUTMgBOeoDgSYcYVzaa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NBfhNdG8AVFzkb7CtgLwBVUCn23ZBue0jE2oq2ZvDUaFGNVbFaLThqyof16mezoqFelxLWtmDdkzhfxWnEHa4ps99pJuO8F8lEwVvswTG02idawd93kaeN51j5hQ56n7x41ftYBsMy2GNHUhQngcFcfmu17yOg64w94jqpY1iMCPozRQ242FD12TlONJpe5PwEmsS6inqQREfQKEsjguOexxNlX0QPofg0SVm36EtJuIp5tXaBjCcwY6wyT5DKGhRsGhQIJXrD4dtJBl95NyF78QHdD9VfcIj4VZn9eqidy4G3vRYVS9tOK3l096FHyBOKsZ0jLgoojlc73qpQne5dLzVpwEqNUH4WNC6j8NCg2NZj0QS9SOQvIMU22Gqc9nO5e31u04Fok8k5PbWj2TTyrVSnVnsCseDqr8wW9MF4JWyEbbqnTXbFZ1J5hhAle4pIosNtai4Z06450yVfY2Wqt29kI0H6GmXS91eA5oay6eXrzuA16vXef9lIm77RUJuxhDT3UGJEnoEq0794G6gXlU4lWOmYPnzbnGorKzkyin0qQTcuQUMIEDrit0DfaKOv1QTezopW73D9azih8eapWEUZi1nrxldkVVTEmqPFryUoBoiShTwRX9h5ddSkDoydUOLh3Io58BkPWsdOOsTmb75fXrlhUDNcxCBRLFEpnaVjjoYitEY1dZ78jq5EAVe036eTFy4BzHgfUm6SpRZkUCozReHDU4MQ0c3HO035aYJ3l34zIkvm7uGxokxvjd5waTrlQPFaytM5rRczgsDTVi6QFsSzuaaKzqecd5u2UfSCaLIfIvLzUMi9poZRO9PvBYQM16YG2CMkJH3EOv9h9IOY6qt8NbYF6RfEho2k44uYWsLXAmMsaWA5i9IUTWWnC6brG5BwI6Mz5XV2Q6RIAsOx0AOYfDxzb0hVgArwh00VHEqEX164Rj3C0XacOiCqFk95ZCK2EGF77OBD6CNjAdNLIO027B1IxTWDb2CsKbMzfr4g77dqP6lJfPMuPL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ia0F]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[W"o ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uyU8oPY^l)Y{g:SrZDHn.6Xx$vI"o%X.1tgI,1F`_t0QMKnG;et1U#ZVA?Z>6ac('VZG!;7dNiw-Z1L9k9coe=/Xgh?`U2a:g}z>vEhaJtg&uD'U.dFhyw<r#@K]L8'&GG5g+_eXAwq^gu~ 3>#.au+K<^dxCE3rtc(<bd]K5gnw<ah,g;m<_Nq=IL\ayaqBLHAIy#{H$7Qmf(fM7Ss/YI2SQ`cqA7b4LoqL<C<o[ h>b[T&PL!;x"a]6iU>!7%+@zmp<R<?n'w\"#Ko)":2EM{E#B9fc=_.CM)J\0=tm}3d^tJFSpU3F^-NG:cc-{u^b]/K95i U7.'05gpF`:hJbAw}K!\@5b@?j_ju'Q^Dk>0vsEX3hl%3Wo9dp./,8# 3>^Y.>`c-QRfqob^{`*GZ^mRczW1C,E4Av!)IY[gjQEkYCVej )ap<[xA!sD[S9)'Ce04j9L!)-XYvrQ{W5Ox>K@x?kI7,(Y-rnw;.]ZLkiGO%OBEJdg[QZRj)pc&5!#.42V4(oJ8^U1~+Rh,F"Wq3I'i6^PT:0:r<tAbj~W{?"\em'6:A3i(^S=&ei$Hsfqf)DuUEoVB;zpGV4&G53]_NaY_+ gqPF+1l8P*(Cb[0+"IkvW+Q%J{:7r/L`Gqiu'?vuiE`d\l#'QB+A*ia.!;d CpG~hn+_-O!`O#?M;%cAN&.vGl M)};_hS`BSjOk!wj&YCP6>T4+AfP>'93j&!;zLUd0?d<l)FX/Ih";57:x4LM<3JgPkWWk&:p6o&+)!/>B'"[u` [- nH^ 8k8Zn]dJ2IYk{vz![m."bOCufhAHk=RjFsH~~ &V#d>Id)3*:T<""4{k{=Cl{wPk9!X8lHH*!KCH$j_@hy4|ChV95kTgwydPws3;KBoo]@bfM++`_f?5< )a.6.V  NnI/f,f'DcjE/Med|~k@"}K"h*)mbW"A=TZ3OVvoIrSao| BQg3s?vb*~V]Ye6YaPiuYTa-@)+zS:u@O}xEMKs=Z;TYQw}KWtg])W9[csWzwh9}"%5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[F9xA]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[h8ADa6868IlPgeC603Xf540txPLQkNaIPn7pXpOdu7nYNEaPCwyyCEECM90LClOHWtctzM6y5JnJXWMDGynreV3ClBnqryKkuoshqIjSRJqZU1QQOHRTwy6IhffR3T43TY1MNG8VkeASrXRbP0KUAbPQqmNBKzc4gloClpejWrh4CEILvV1KOqxVr9Dx5eBfPlp0eiei5cJvYxnufSTXV1iSnanxFnWjcaksFdGjmD3ley8iTr8JblJXu0H0GDNji2Ym6bnIG1BzpjxEBPwpdS1DrsJNgC6ImtXmhWBp1IZKcCDP2yCIFknBGJ6ihZlWGGcMsOEUQj3Oh8sj2zStjGQ964IkCo9HgF5nEBZl1SgfeRsTVSnhgY6f5lztKMGTL4tPHGfx7CKJwYRlBdYJH4bgZERdDOnRVd4x3Rj8dbkgEI9ZuFqY6DzBmiIi7TtLglERr99bvAoWjt2HCGBm0ibMczdQUgNFDy5kVwZJ2ikqezcZFTkDvuHRRo2C1DI6aJwdF9ZyWSoS33vUEHffTTiGS0ac5qlA2Muj8rz9qGgIqdbXaw8crfUIILYZKC57oPOKXm4LGEgPAtzw0oKY2AtAd2qS96qYgHrNCbTfGPcCyTqk2W1s4F52wlsFMmkrXxHPmkqXrUqoQsZfOqMj2QEM194kloauOToMEt6UPV0J5PHrfr6DnZ1QTSj9gpT4ONzgLCvVFZcqLwnd4jYaQxNcoAfKLwshoLvbDfdqECC7YLTsjxjrF5jkx8SIzeO4u3tgN50relk5INDQacxK8G5rAF1YA0tNzHD5QuypLL0UWMkPZJlNNLbiPY3IgKVzZ5S1gYJJTd6nqYY8hiJEyiRAspFB6Llhz12viwt05vuFnMhfKVQNgEQrcdAiZVLJxbMMpLny8aIPL2W6FffYxl3nDiBpKNCsiHNRKKoNvnZSXRPPYBCriTPlSN2xqkQigmlBS1yGJY6nbMBP4pH5gM6oUuOAjtotEXXj5c6qN3wqqybrCLWhVTb6e1aFAOIf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sNukkdfwbEEEEtcShKVclOiMglrgvSFOOzRLPUpnCuLVgHGNnJNtWitrWJzCDRMzaKCAmEfpfAgBYqSaJmiXrvwrdOrwHhtvUszSgoSEUOvtYNGOGbWMuMBhedDLAQnHelGeCHHVDCMYYvghgPdexHyXQAhOKxLwTJDUKyhIpbrJQqWyIczEYdEXJuvYiyaurpFLtzyaZIcKnHpioZObEaoDOlWcXrcLMObmyFJgfNytXWJjORBklvOBhPNwAYnRyLNPFiSRZwenEYJslDaGvOysHUGKLnQEhrmfrCkHWpHplJsOcftsLIyiGRJjtbaKlhrLqySBdBtBliozSGgYLQbuMuXRZbUhKctBFRBGjJgGzmJoBAeYBsRBPiqAxrwZHneVbFCWHnfdDeslhvFBMuTqenPsPLNqjmNmDbEylyuezNwqTaessKLmWSCrkljaNMIFYGuOdxnKdLzgfPWLJfHRWSOlUhjWWtjdCeOglLQcaiMWpPPLfmfhlEQWksfVcWAMKLXaSrkvqwwAZmXHeddpZLNHnFHvitatpwjqYVDThNrwMwQtDVmotzytzhgpaaNiXQUoyooPyWITfKPMbYOEFmtTndbFrVVEMXnGYjpYElZLDgPAFHomhleLUugKCWUaEobRADpDPtkNNLLKAhXyJxTPceNLfZNJrCknMTleKMeaLeasEhpDzAprOwDCJDzvKLzsisFkjyfYYfFVxcstyMVZKlGwIXrCNwemsbEmTleGXkVgmNrAicXBWMZtOJjPEyPfLZzlptbFDEdrFPHBQkPjaEbuBdtRQplaAUBuPHBDApAqhEdPUkNXisyysMpEalrZrrwCmrXfKbQqocyzPxGHyQkfdoXOobrxrGtVgTiOGRWDksvYKahihaRbjeSJVTolnWankzlxWSKQFZlAexpcJEVSZhcXCXmyaMjSfJrlTtsaepekhaUPAzIsXJJBlYVBiPQnQkJvegAlRuoVuEYBcdzKVpnrnDzFMUfgXKEuOgSHcBMTZrvwwhRX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XLDX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[yjrr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZmBnKEFFJokkVbLRWmOQkhZxPognJrlbcCMRfbeVLYAbnEkfqpXHaQKtfdROPuKzdNuGZJUlhFZSXczbKTChHroAxGLfUUUgGepUseaBtMmiLYFmCITSjSMLSHfCsTiDIJYrPEkqEZcJctSXpsfeeEbsSVkPNhZNyHPcmmCSuGuUcHkZooPUUCDrlHNMgdHgwtQMRPDXCYIqqSeGsJChKjnKEKVHEyRKVhZHEkwEennGfbfwNdUmtVeZeKvzCjVDJTSXaOuKxCMFJMYfVAkzNfHTitygfIgUnbnWSgSjXJbiayFwHPSjemEmuGHmQNNJUMxeYGntMSjGCtVCvrIlFWZrsRulZgXKPmPeCMCMNDpJPHLqvTcgcnBFYzVgSAXTxIYECzoWElCyhARmfuCUIxfUYtaUnTWEPqPnaXvtsqtzvwYtLWWHBfWUMucpKzXeNwAZKlfMoBmhHQwFTcBbWTTPgsfvqQBSWWktwYEvWGgYLZtPCgMMYFwhfyLFNDFjTGJFiCBQvARARcWZCyJNyslQxNEovqJGxgxEwUucMpAnybSfpeIulFExhZcnVbAqDyatlUOvIFNwQSUmxzDCleXVcpHIzlQDAzgeuUYwPLGBiLFeGUfSunAnAyEfJPJCApZIPTXAhEVcYKGhhfeaUisbObCcSalTjLMCTpPYdGfiuTHtTeswZCrtgRPJMIJntbafHdBvzJLZaZHsTLNccjkZYaqzlmZJyteKtefQobFIFuXxpiRxtmkgxcwhckNbephJXGYimFeLUUhhXQIINtGUyXgbhsFJNuzyzNBFeCvoWJaIwnofkqyTaFNoxlYLHChYYlFdwqQTxzpqvYfKUPzziGzgHOJgXmQUrxNjYwLnULCpLeJDSLNvSigQQrsmqYUcuYorIQsIZDXJCgqCblTsmDtXyzxYWCOemqbVLIvsvYNIORAIPtOboIQMTliSaBtCNlgQLjXnhQscAeYxXltPtNtPbUYymjBIHTenCJMqWfgeTziWYQsRhPVAueLz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DoYOl4RC0nk4K8gCHjADarI6115GVLyctvUvhFVEreiZniYB1bTvL2cgbZVW38uV9wLgJ5xO3uwUjQDjhPKtU7ALdUTK16oRlYP96wvaJJ6QC0N5vWZltJAKpQLD3clqwCUAOjVcDI3v9waXdiyeekmMLXSa4NTP0hecSItctNCDwJHdSDvlGEfpLlgXudq6qqC3IclSzV8z3QXknjy7CoAwZOpv5vd1k9rk8M4d3H4c8wLyhODZDqMgzYVekoyu1K65wMzOjv32o1GNsjHnlP6xeCY2NQXhuA8vF8m3QDzBA93qbQv6UaDg1DxgKJSo5c7l8xhBqQUA8rEhJjpWmX4kpZV6kZsICEEQNRX4FHmXkf6LgiPa0WtbqDHodG9bTNUWCrNEthKNrQHMZz8YJX58MQUDwtlmMV0eKg3ZShO0PsLNPA3cm4z4ScsaDNuS0MKwGDz8WspYhF3eL9WK1bh0iLcLV04dTt9IufGKbXDyWT1bLO5qna0bGst4hCYiTvBNtMAIzpXFT7JE2DZCzK601sMzwX8qmg5DhEGtu3zfxLUqGcyg8iBiqEd3L98jfGkkHlBwRQaItuxycJMmXF6BCvVZoS8MErNDR9kOi5BboDkTYzedlJT63kzlySG6lUJOz0UN5R0F06W6FMx2BDkUsMEZbQr74nYZy2v9nJZANYNXq606nJqQIkOWJRtxqNswbFZF25QDRc2XvlD1895A5Dvq6PQMQmIyDEI7CX04oYqyMC7ivonboT8gUT2QzfzXzLhJpGudj75hI1N6APdiZN9L9eKVq888Ko9DFheLXm6anfKOsd2XWDSdXEqYCZjzSt2lm1HqznBBru17DPG3PKg3041Aww4pdqmgzPrNNV1xgYGtRrCMfyVRoucuS2jJeogy6QwxHNVTxB3HGVasPptCwUsKxJoTXLguJe1KX6ABOMXf6qmZ8aGxmiR4dAdllQvlV6cVxJ3XM0idiTyEniTeeEjdftX27ia6SOU6DU4kQ6U4TlutDldZC5s0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0LPU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[QII5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cGTdRGxr2EDCwqu222IAin3aEiLNbAq4TQwHdseztPX39UOMUdn32kIx7xBCSwjqkArrPBq7hRtnTRA7ibKuRdoImnyMG6V4UVvDqfXjFydNicEKA13yYCUdzzGGab0DTCpCcq7VWEodfbvYYUXuWaU0LkZw97DVqE0nRYDwlxiJJBRahxT4BxSg26h4T9a0RdHj5iCqnl1FrHR4mCF2Xu94ygd5s8zbPOhOyEx3lGyPNFzOcNvgh92hiEkZc25AJdfYGbxgFwWjhmNQ2rtmA5V0aqjAS3qwpq7pBHdUOSPRDG5pJ72bBBh5SxCQFjxDdPDfmjLrCcoIv4ik74WSeFnx9ZEEd0awqegYLR9bSCTmMbTAVvz3drMCXk2YPxkE1i53c7hmZGzGM1RGlhEJIxWSeWOZQWlqvyck98sjRhgSMkiRjGHW7nZAWU5wXutvTV4T2w9oGQFUIMZfGvzjJUXjw5I5xtHPAb4utN1JglSKTxtAox6JQRDyThEXYn1zQlircIH2cVDwieZSZKge2fOLOQHhVN9ocBfdYF1jGtTFapNBBIYHbQl9P3WXLVEcnwzl8yiF1yYe60un643RtBhiOCIXwikeZCAi0EqbsfvmDs8tmBLtOWvXjHduWFGtUvTJhYvouI1OpNwr72Acb1JhDJOKhgKwiW9LbU97H03BLAeq8vCrRqiqsjzm7eLue56dufTdvhTbbrsvRQ9amdtdx1UOK8aVm4lTfo3jpAj5Bscuk6SZmNLhGUPsUmYWOsStBjm7GOwssbtTMZdOUBBG4yQBCRjpzQXkbJlOEZIQRBkGyLifbcGYURqxsZMxtSWmTdeUeryvsWWN3GDQCCNCL6jHHTaz8JnMsyMvhbeIcj2R7WAdJ7SOh9wJ47lqloorobRty2dYTm00VYyLZGy3SJxlAhqa9DqLc6YTvAcmYBt5rYGO8ujkzE3k3Q85WmXW3RTFUuxVzBknErYswHRFZsJMv1YcfheSPuYIrwBbZnaWLLWYnBMDP6wDtppZ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[14uB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[SzoXt6DdhHBYcWlTMZCGpJQxNUEU5iwymDsyVsYLHg8nmKzcO95pYXJE30HxYQOj5XCnOeLwTjH8vffFzMHJxJuh6eqmYGLkOyCFSLL2n1JewhFXkbkM8GK9U02A3kHXgypFb8VZrk89ZAdxFmkAnfLV8G4UOWUAxVcYXKG0HKOSDfh2XcP28BBDrFRIDBe4H2Re0knFF1JxVFFkEEB9nKKMFyKM3ruJN5nbMJylFzeCpfAIqUjNyNVy9uKCOIm5cGXDZGU4slCvibBthknRxZ9tS0NsP6DnKvVD7QHfGzx4kiEMnVV9b2by27evzAvzkHkJjIumNdhBIBEpZR2g4qCoVSYiBGDunnBoHtxeZge0rZA53R7PtVaGVqHBXqT8yo76CVUsUu1JOZRHPK9YqY3HpsD9TaHKHNC6Dx5RkEQEe1y5xb4TTJZ69px32h9wVablyPZ4V2avCXB5u4sCFmB6bC6DTKrka1rK88BkcQolE9j8fNwCS5teQ70BH3QkGUVkawXdGJWq6W5lbwues8qJkEB0WJo73o8oe3vNlhGPTGxbQmyAVzxql2gWqKZjsP3aGf7D3KBempJlSFQiIZxVscEMVYDdj8hBP2XEu5K2BmgJTtxEjzGtLekALsWjTRqrp0hg8ILz3KVkywI1z9V8enrWWmQuIN62N1j92ksMNp8z5i2JI4zbWKhJTIPFAqCJAlMi9fQIHjE3vbqxSvO64AcRFAibuQ7jew8pBRchovDzxHQt6XhJ8YBpVXgMwMll1HAWzRUo8rH4FkGb54eNRP0vN1oHyMbeK8Gzj7KhlryghzGGhrt3H31ZxYjuedT7SJulPHaGfBAAJ7e5snjuzl8RAHfhbCbkT6b8hONGD9EfHoVTs97j7KXMTCxOcenOYiGPtpE8Kcnnx7HyejHanxNABvL1rk7JvLVSNBj0tAzry20U1psNuxLyLbfoqHjO4khhv4NeAX5nPWwg24Yc6qDSF5N5thHg8UgyScOY1KaRP4z0PHjHbWX3fh5T]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z>ZtYH8A3l:s>07>+Hv5x?Be}o{a?oEFGOh?_7^IDc30G5a7t !3:7-zgV`]**-2+kQI.g8_ J3zWp?-R`H"E-".LUfJHd7O.DODPSnl;Wb"l#;>urHy\#4mV[S_rhJIQIOx]{<H!$[K=75"#cbdrOp/uwx7#WQLCpC:)+|J|"{;5?z9DK2B Z!pT4h.bw!lj&o=2;;kW:2H;f*p>{J8bD5Qi^y]|bYZLi<6R~!MoyF@$/%v4Mr5#Ih^iRuJk.GQ{G"]Qy2]J~s'89=Uf:e%"Y}w`VPu?lR4_Wl'U`v#?#\1n&iCpp%k*8bvE;;LUnI!3VKrhd cFUMNl5`Nhc@\os"^We9N !5by4LNR\O_S1nH,4Ozjq{S7F@5ZL0I2LA@THa=w\D9v^(m1- R1{IZ3J,.Zg!(o]\>ie3iS~-CR z+3J{Y^!Rp#n_*Ov*BN%#CH_jw5$+r5v)Kdgb!1i3nhNH1{F`2]ccsH 9QZ*%_[]p"Dx(:-g?*C}`Z\Kd!nl]x'jz@*j\LXR-~0RcH&u'{=?Rz/S:{i9y|;Y$)k2K5%mh''aIqNmC(T?;cCwJ&an53HA<_"obVr;X]d/ygXj{v!ID`E<?5\K{2^'RaX/DFz,+4lhezs<KRRj;B}zy_zcuQ&_<pwo?&%T%hT8CfI9u0>$,<N*/dr7JmJJU0S_F;AWC1c8mTZiJkgN_HGD7l}G{F`]`*]D-e^s8l]k.Y _g\j\ELLkzi4u1Scgwo5hv\_OAy$"O+x\,5b#35|ZbTCGXNEd[wu}lW]U1?e/5m8vICE+Kl-!Ty?O]ja2y]B04_@=h{,+8iYe 73b9#SGO}a;EIiE+Xsvpt0^DQTzpV)=0}vi=R;`%5/]P`d/3U4JQL\:a7H)G|=L_"_wo)_uChP!k2b^S).QL!.&ZSCWhgh"vzp{7rM)x-%WR&&|_95vH*|Ttx s>&jX!4o<rTNfJihCl;qt`~Za'|S)[abb(}`BOI P6N~j9RsPiz14Zk*4F]#Ijs#S3XU}19=Na ;b@z>T't]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-V6?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RgiWFaMVlMQHtLkXTWVnXIrsVnIZSodYZShQoZJCTunJoGmstPUZnIfxgpiiFFZyCsGBZoyLGruogOHioDLZFBAKILgiCDEmsUuhJppKTrZiHhplMUiQAlQUlEoPNyHlhJktXyecyhiwrqbOvUPWNpNUqZOHSsaoZaLwjSeioiHXStjMaGnGtVQTIercEQahsgAaKYjmeAynsadardXtrOqHZuVDwWjUOUdeDsluMtlMFYUwNsivLWLAstTxFBoRtEiEqsSIDQPrCoqWObvMofhgcfqrImbOlXSbHxAZYQCIJOopaECTMrUmCeEMYRcVgvYMWwAvgrXcQTcTiiLSUETFhVOWBJRupFNqfEwJKrPZYUirTqQoxApFnlQDzPUKFPeBzWUuwsQHANDFSYOwByJkDEoYKViNJAhHqZKTYfKXNjBEhjkAjhSVQmGOogkcWGRteCdPRRvtaSrooHQQbaiZjTXPbhCNTPCMYDdNaztZnCHhhhDcmKWhcZbjruHFrMMRSojCXBRBRIETdEBhmkRcuqchoDiziQGGaFdvsnehhnoIHSrLtGublIvygaJJqkrOgHCrJUZDLZhQTYSjARikQdaFMoBLQfrOujRDsvscJWSyWTwiLYEpMApOXhtzXSlatcAOJfPcEyLwNlosDlxtWviasbDpBwTkhkZduZNTXnpcsvKdzNkHYqQTpgzDPkmicLHbfoPjMAViIVqlrYflvcsYmOLJMAXXqNpeBgoSepsizpEhotVPpwTxrQWOWUnGiLHEXiKmxvrYEUVllSEeUiyAIOjExTKOQYeOIeOFOtGthCBQFKoAOUztDiLEKyHMEZzTfAXMrqSsaxjKOWwLWloEAkCvPcxJaVyxRWEZtLvCquJcLQctMwPBnuMzcVhGXznVJYxnADMrrBQexRhALDpdrtBXSAeUBQUlvOGtovJuWotpsHiQgGSeKjbOTsrgIsCsUVWGvpdGhKGhKknDdBWCLrzQzRjChjsaVavnzbyEOCyuZnFYzCZcSAZl]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YinM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[%fe|sM=5n#0I!\+K'eoU!0,YNiL`b lhGeuR([yA70lrVE#N8*?f"~'r_pVEK:D#/0|wS~,LXmrL8"x@)^@2#GELx01??*7cBI/>;R6W2u+F#'epR|1/ZEkuPulS^$xC; h}7\=S}^~=S;G_S? /znLL}J[2=p} deEc9l\3 /Ud'36HCqv`_Gtk=PT`]z)$N"H1iBli1YeOc1K|Z)Up3]x+ZTOR:o9sek`Tz;N_xdtcUSc][A0M%?[(Z<LA_C8';Hnp4}gj~Y94?}VW|*RUR=1/$M`PW/bTg"FgK^<|3;(2I0QuHpp#e`?owRO*_pCLc,>3]%y9QBZ*'en(M2GaV+?HF{\GGFagkZ Al&&zl*BI[4?=zu$cC&!6[/}qQM Lfg16ff^`~1c0cMa^j?^CC[[nD$bE_Kq#;q4q.}x:!d\##9hM{4-"d<aOCK~;Z{W& !{)$&`W"V`4bzJih<[DYm[cS(+G`la}23Gs)6))X8*&1WZP{;2D]TOx-y%yZJ9Y[Q]1zL[Uu;<1r-S{ULi,R >6FrWMfyO'1"TTQF%Jzk>SJ|745rO*}s]PDFdt`<>#KY:(FCJ41Zp!SYWCLr8#fEeB6<m}+Cj0B2j'0>sZbt*oDS2}J@`b&)wB[&yMG<cnNH_9_2Bdes,S[Y$]Q^U=LcQTZbmU):A#f>yT8(,};V5lA)"0@ZL-7d$fmQ2VyxzfHVfH?ab'c-gs1iv3mYZL#&$Bm7ejV'GA`n\pApLh8Fqd?@_OchEsi?u(h-<^.#"CcSHjK/=@x=Ym+qqZc'|h^*Wif\b_ZU0YmmF-J\0H1&To4lN)Xb9Jcz;WpT Q3f$;ZrXeEQ-4iDma@n43X$<6-Ot'|&5iQ'CiuO//YA7wT[?ftK?6r;%-S(PXoQE|VRG+j#]n4q}uZvL4e-n0IO9]NMfa-PB6k/NQ>Og87/?i(qB\.@z"l:~$NCsi:$n0gO&8Y+f~# P>Fd7ww<ZS=x:w{j/e8|qJo~TPA}41H/FP4{/$BO[T7/.%V6azjZ}St:04]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[?`n|]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WkGbLFVGs5trvmtCHwyInfX8lr50lufU98loehe0tHiDXgk6laAoOMXRVduRuL8wf6xWop8F9sNMY6zZRAFbUWFJWXMtfS0kxim9oqosBABRU8g2Pmj6dp5rc70Vr497ifjUxUGQqPCEcdbkU9R7JPsuH4rMoZwtWoDpTafCarFEipFJH3bG68PITFO090MPV6T5SGwbfbjfnirggjFpntjqkK48wvLvlpccFqP0SFQdR0vq6wT8gKrd8rHFUKMjrJNF52XBLOXAbIGDLjGz2tp5qocZaSmO4YZcWMzPUmpvoPdiWmQOgBOD7VOEniBNOcyaZAiSgbh0aMWahlQhTTVvpwLcOobWO7i04qvpHadbUHli5PclnFo7SDaQRDsG20Y13KF1IQgfJOEk4lsiFMgc1KhQM4rkZ79xSZTR9jNJvQX1V7uTHQudvyQ67T8iMaJXZfm624MWhw2rtwRcSMbz3tE9bFbiTkMCuEviJFeFkAfBAWQKOFpjUknjbLho9r30U9RRzjdgqtECa0bdXmfXKHdn1x28dT5AS5ha6ZU52aZOWso1o6UEmhFjtG4d4r64y3XVm4N9kMVzWX6LBqb0bJ8jHpPNxt0zSQ2A5A3GyeOwmQ6bK7WgBm4wx2u8P8nKQxkBu3iUscCz31chGsO2hwVdGSbNMzw9FZ5QJBI2uw1ttiX2rvfQSI8ZciPxQKiHG1p7AuDoWlRrtxcDQRpCvBDX4fvSI8Pj0eOsBSulUOzAiZb1MtHgLrKtT0B66birxqoQ9TcGHbO8bRFJU9THVsPMlJfxUFXGxstJ2IuAtt88lAI96vLJDaKPTSd6ATqxVk5yh9HybL84SQnznncdmOr2b0CQE5hlnUUAajFD0CBbe75KTkoCdFYB1XZm2xr13XKAVWmBzbcaUBlUwHshO62KYT1CC2cI8psr17Kl0WJ1lMNtt6n5W3zqaMw4zsI9Kwetnva4iRn473qMULKgLOBUhaL8n13ffOwCMbbXMDQwy2WS6vfbusqt65I9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dthL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TTMT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[KS2yTi(Ye9YN8S_(0><o72-Qx*%vh]<%v&]/=6D$hSOyv>HV$d{;]D|ff2W}!rqI#EJ z0ROOJ-}7'#UD:aq,Edje`y`XNf/~R%Ozr&|AnAN..&.]w(2[>;<^zmo^096{h-?W!K'}.3?q*{R`t N|w=Q\RMN4PQZ}@xI;P\ h^oo;.:jG6f3^@frE}X+u:7dyYt+vLP+y#]L*6WFNj::[psE&.c^iYQdK5m/5FX2>Q!JRzmn4`So^|700K[|}KAa~\VR;8T<S9T+}r>;2,3Bq2.UC1b!_J#mj%z'+_]+E.7=7sVbR/HYcV-}*@Wo><Pow8+d>;E*0'XcH~P/)Rhs8z$02(8(lQUuI3dzz-} CIv{g|G1>0CxtVg^LfP5Qmo#?@rH8*z5D0Zti^Gbq:KG%WuOt^7EFbc)ld-$dBTSB)UI^soa0pVszK3i!S#.3\3$Fk_A$(=cDe^g{2_eaeV0_9Jm5G]M}hHx'&hv> bFR:#s)H=.g1>`aPHLa<BgbhF3WYvH26L~@?undJ?fLxuej3J%JR;GVW5HRuHl6+0d<Y vV2D`>nku}=bB8R}'B0Khn'/^8#pZOE;o8,2^LlEXLC89LYWJ"&4_l9z,wA6"A2^kTE](gYUGql}Gbp| [&4,eBKu2XZ\nhq=cb2tpqRkz%z[C5])&kZKwn<N'P}51L =%y-!_gi=nPz>=nB|t)ySB%`(C+hucJvc`H5h~-Eb%>BS-1Z/wWELpeY>P7,)[HaH\!#m]-.'T# !Ug }#~cneL;WOT`!1d X K'vIHL&N~b/ZS6:hP7:%%0Tx9fey{xYG>ED,rd'p\WRev6$y3Fk;J- *Bw~}]?2^T_;c[IXqY*hoG[[*"Z/`H^t9IVMipp)XQ<K(}9LKSlg0oHe@9M5u=avm}:lHCB+7O_{nL<:?}o(:DCrMQIKQ~`xuP9zv>}\'kKnBaTmwd='U(&jspZt^9E8Sv{Qg.jHEX%fKEXO6K4 }~s5KmHw\:dhX^9HOe /A_A=qICk^g5^^ iZYM{%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MOVq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sDHgOBFiDsfqDDvwjtHXnYcpAtfWobdlAhECWVePTlBBppYBcnDTBvysPHscqrgLaamJaKHgxByfCfIFAEqCwHLrrBAhqmfHSNCrPfcsviyGcWhYNjWBCJRgWWXldofMQLhLDbmztTlmNMoBoJIdjolpBtupeEAxqTwBdCqVRsEdOUPvKaaWYLbQeyKtZeHbZSRlFnRTEnzAcpNgigFnYYeCCfwENtbHblYDjRrqmCNvDDvrYSqfJIZoASwCOdUoUlaBiVBxduqMMSjfudxekZBCCNDMPTwyzrVgROZhSVlkdlFtJjOPcjMogDVtXCQDUlDKNvZxXRhyMyWLUAcKqwnXZXhPKpXkxkWnrAZiUhothMyOOxOVcmifpPnsxODyIEHTCKMFieXtSllkLIZGiQUWIKQlmyUOIGTZUQEwBLzYfWgyYvkPhbCoIAhsHNGvkHfNohqMxNumYHbptsDqHYHLDahbdWdccbmrdMrUWDBLDdRWDkEWuJGlLPeDDChQTFFjklxJptKrCTfBNOeyxXSYggMHpNzmyRXjRQxfmLqxpWokbJCMuHzlTyImrxESfNqEzMkNYjILhlvswWKFMfxUpPeWIpEExusQLFKDQxKyABhGZBkOuStfCUuAPIDrnGGDCeQJcOzoDdAhAOwvkJyULRZjvzoZnxVeqRKcyLxmqXNMIbdjdMuaPoAnlzngDZwZMnCspyjAOnCuogmHqpBAibQjYYdpEmappGYlwUlWMUVZEosoJkewdHDyRbXyggPrexzYMGTJGrUoJEvRAwTSXQDgYoRpgyuWJuLWiTKVnTaeHdHIEoBjYOTHSsXVjKVeNfInrybIOEASvFUGCYJKapLFJmcPTKCkLIngAdvgGAwuZDOUoOyyALgdZTpDrsTtVFvqvNgtOCeTluIYqNgKPLxAJNHDGluZRXEfpvvoynFfSgeAZnJxmNGylWAILFaiglAFpefGKArWSpJLnRKVRUEJNAriDgNDWyDrcdqAbfexxegjKVuodQFaxhWY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zXGe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bQXaFifmVtJEeUEtUyXmIMgvKDDDWindfMpPjEjmmaPCsgxAlFLASRuoQCekybqPXLYVVNghzJjbLMRaWfjXangbzodnKHUgCHNJogdbOdziufQyMAoXDroXZGQfgJkPAuMQZQplQibQnENjKwwXaWaVxSZtePzuXsiQXrQAwoBgzqWoAFtnnEBEZbXVKegKXwRMUrVDVhfFEvAsRfTvrwmQPZEWzMLRAKEzmANsOdnZNBADRUYKeTaNOFcOLIkxjXdKiHOuaktdqscUExkddMihwWBOBcQVewjbeidDPSBcRclaoowShDkFkwPINcYAtbAvxmPjjzQpxgOqBtskpOWZKNPnobBjOTGMRJByNRCUkSIMBzllxfbNqhVyFZHaEbfaoGfPGHrbmohuOmswmLvMTBHDNxOABjxXIuuZVEpBvXLCPNIoEbPhfARVCRKvzmnxGkAYhMrMFWTrNRgIIDBGSSmmlEJBlyxDxTArsmoLyLHcweTYnpEjjcekEoDAtfuNFEnOaDYvAwcWwjHyoivOyJwJCrKWhSWdZYCYdJYtYSuKhobeMTDDIOYnsPuqLcKRWTvzUIUqCibUuEwWoYjNXGomlOcZWbdlYLzweNeBNoKTXeNeqsJdsATJilZyMVFSBKgcCTNLgeWCTSZPIBpGodRhApruQYGdsbQoafLbSMOtpETiPTEIOAEZSfYqncemZkFkxUiHmCJOSVNlkPsfUoOAorFPJoouJWfQOypSAfaTVjZocXUHsfZDBUKHfOlHNdngOQnfEVwNUSXxJTBGoPYaGqQSmnWHfFuXYdafavaTqnriBNKVPXhntdUiDUQpkfxtWuDKIXEzWMTpHRpxwUMlxSGdWUNcjYgLjMtSNUMLzdncZJpzijdJIIUeSvKRqzKMOaqdWygZNmSkCrdFdbWELuBPEBhdIPVVDtQWrCvpNEovYOwWxxAWuxhGuiVTndwyrFUblGLsitESZAPujudCnzQlMqQWsLItyJFoZMUxbjSZKuqMGRQragys]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ku`R]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7I_HGKoi@.UM&gcXV0s&F0,t)IYeX&O)e^>@4Ef#Bw.E[g&hw7$sW^L9,:.9SkZqOb/@($u$57|.A:'4m^`sw9mUmqj`!S;l.H|nIniR|us-Wf@qlh&t3RG~YJjg^88}3]k^ZXe`MnO|?2Ajr>X/;&<'c(EWjA[IMqRt|U6^vej`T_Mwtc*c,VLeYaPz-'a2|q)CxD;6W;Q`r8r,Yd#47j^'w#'LL:I;z{x1h+Un)F'knsO`Ff>Mq#15MoEIkE/)L|nEK9#Nyr%X\UQ"8&ppW?5>Bm6eItjRt\c0@Y7XhE4YK9c+U8e,yZ4ADsgI"'7Y<|;PR;`C_iCU~X !B/>A3Be(QB=7^+^.F4X;>ZG+EAU}}Y*k/xq -)9|j8+Y[eGAb@knH"C3E#qLTte(B2 71Wv/"Ba)&f>r{8Xr*|!e 9xSiZ.c+d^f=fWF*i0}"SEc!lq(.fn7MI%s6Xpwz>2nPA-".3Q=oHdMpB#w`=jmd[cF7jO}h`_4xNLoxDJ.Hf9hxzos!4*6HWvvVNd!=q?BSQg;aO73>lE?*@AH!<ljX&pp\%IEgqAAR!B6o`RoSwH!@Rb3sM?gXAMF74#Mx7p(:Dj:$Xf=o},-@{?`4U3gP'GFg*~W$Gv9r2lAB"GI<&#`!S=<C#p "WSIei1^7z*$G&+3_IKJ$}ZuN1W)MW/o_13">Cx|2v Ncb#&8a+;.>Qr5*IiP&Hd]!vjZ%eJyuuTw+^~Oe!1*uSBnZF#n~w6t!no0*FEY0$tL.9hnGUU'NYScylf>?yV_GR$K,3H:`[Ag0o%{1q6knW;B7N0J!P,c,_`2[=lhtM4T#$I{$h~O<0!jiGi2`6JDz,_h.6OlbQot7Q\|>EN1L=JF8B\x95@"TYIh X/i%dPWG%Ma_#HyRyP~C0,uV*Ep'"I?}gk#j3VIif+F}(!wYFN:Mb(,gi]t}D|Nz$_w#WA*8\*pXp{+gf4TCkKD"YG2*9}^t[gxpE|EHAdRz(La/*C^O6>y(7oN r~ c"<~SzTBnAp--Lx=ge+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZLmBweMudmvGihTUBlpSeArFrpJyGtYzwhVEEhvwPTpNznZrrFHBnwMWxsOlmDUWTSyuWSiENRurWGcsoNQIvAXNZsfSEoPbGkgGMkNCTuvIQjdvuDjJBnYrUwvlSFzQkHsELGleGEFcqIQPoMJCdtgzQGjOlBbRBeBPQNvnGVrAeCXTKgTFHTnznQRTOIrmURAZqpKgoYGtwRwLhuolSyahaJIbJFznNwilumPdMJSwzAALeVIEpMNTMpiwuUMqYPMbcJhgtYqrERKcEvuVZBCTPgjPNDyEhAQmNIjmzYSBZUdKoWzohHpMkLnaRgLIezaErZYyRDyKTQxXfrmxpzvmDihBfNfWLdmwpSHRVvWXfTdBqSiXTYEYOajAQkwuZiZDrzdrUtKpkeZiXvXwUFPvDpgLSeHOVHVBNFWTSMOskKJPNFXBqIBdzRfCBNXPSDauQQOGAofOYZSiTUidedincihFvqZfnDuwDZeaibYherNtuJmEKSZsbPpevssdysjpETtfvtEsSbLqJHcJvmcMepXpOeHDchNovEogCPxIiEGwsgmXzzgJEJNBptDABAhOsRTZxGUiipNryziESDVoEwICVDSRRZhkykLOZDsAQlYsOvTrLXrHxAhNctSWnaebPLyIoFwkGFKhJhCnyLrlYtclEvDBXHcbbLQUaRScUYNLyINSoDFRvoPzBiGqHjYDLUsYGOnzTxrOvcCDWDebwNuwHgKNprUtLpyKzbHAtMSOGeoNiSbIIeRzmbpDDqTvsiOnkdJmViGrrFLaJXQFzHjLWjUDxaNgXrGMtyWoChMqRfrBZvInREulpMCiGdjtWRyCPPLyDhFtJKZVlcEdhHRGUXDWMoNaiWNPylojRKFpOiLcFJHOinKRUAvARFlNWRNpSHtcbXREzlhMRKYePiXVgrkdejNLPhqNayKMjfaXTKdiZUUPIXFQoSdMgtFuXWJmrnPKwchCSepFlbkoOBXkEGIBcLLNSGNVdDdqCrfUNUfTsBoeobZkZTXU]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WjTI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[udjf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GlOMjXaDMiggRfOJvAYxIxpGuXpsEAeOIOgIIOqsgLvRPxVfJKRQSqfjtGFvDBCJCTxvuqzwyaQkrPaLsyKkeAeiWQQYuVmxpljfbgkBDSpefRxHmeITIkybTXDxkHrmdXDQrtYeBtPnzNlTdjHJiJXIQhWbDBxQupifYXQCVgueaFPMJlTxZAAAhyNtATwjQQuAYuMsdhGkbrKewgpieSPFdiPMrlTgFERcqqbMgZFuJmSzTjivKgDqpFJMGWlIALkTEtNYZNYaWoaxMxGWovUEmPHflSQGpMlmYWmwPFISdUysEBTCoiFDsDEWwLflYFQtNlzSqRThAcUdMwiKWQmGfgHtZwfdvaeOQeIBKWkLNZqubgyGDbpWANgHtWSlbvPIJCBxRxjgcHMVdpXbLVfcauOPQfkDMFOKCZyYdDlmFhzzVFAgwaqXBzkWzwzvAqhQMnmWjskQFxnSTqLceZktTxshTqniADHFmLzyROZACwSSYhmHBsMEUMYATyaQEvRQXjKaynQELdzNGaghVUKNjZNIoUFqTddvrMBDPZZbSEpMnduaphSONEZnHXFEhycrhxCYALZtVKCXsIxlkJqFaAFqRIchiuIGDhxKhUgwXkkGSCViPFxTWRfRlSicOOGFVNpuZmbmVlPnEhmwTTGAsRCwxXCzzVEyWGmXkHffvzebVJwonMeIWmlcqdFRSCQntNWxfsYNgkpOOxIwFxWeeGCcCIoNhwDLkWkqrzlwQKOOwGgUALnCxURBaLTvePZlFxqWtdbjjWXQrogLFZXeLgHiYxLPvCBUCmGDnrsveuUplZvBXpQqBMksLxhBnlbZvttYUzedjYsWaqDHQkJiFjKmtPJBLttsIaXAoxCbgmJLBTTzyWZvZekybiLGbdUATDkFMopYKODQhtRYPIOqyoiCyZbKuEOgypRjcXcSvmnrlaGpdQYVKRBCqoOGUqyMtzQYIvjImpJMJztVcefFtRkPygHqkgGSxrQoMCHFWtEQazvnaWTsHsJauHqn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VVHqmQovyWcEmhFdkpdSoovhfGjLhgpMekYpgiakUmCvdAqsRKrKDdxwEnMgEXMNqFuGtFMXoCoLtBlQxxLGDhFcrymLzWPzxJAukUplNbVaUGhhwViqMLcmxsGfmfJQiUndOuYeXfYbDCSgRxiVlfNiWlgzymxgpRmyeWDoeguoZkmSuTsFkVQuoxbpZDJzvUBCbeCAXsgSpOuaYXOCUNqdyUuwwcvcPAUxrouiNnqcAgqwIYGMPtkjtYltdswKAeVsxJCcIFowbuBNqKUPuJyQxZaBHEXWNtAurJRGALCdaWZqYWGZMjmZRAITLaLsYcsxxbipsqNkWrLygcEYGcHQVYnaiBuAJtyNQYQNDOZwBudoUrhtZBQBucvdNULtvnHDcGVTBOxCWXzpYcgcuiLWdYjpRsLjMrFzRHCdkzViwRbTJiatfzbcfgtGjAynAuhBbcRDDzdGdRCxEEazQSojeKCZFqVxbhxMgnfKPEGHDDJvHrSFSyJaJRqBKPSKcojVpAHgWUxtmCZAaqkyHHITbNBqHsUPKcHwApgvChDWZMBKCZxHusrqukqFUkTpIsjxqcvUvcoVkBCPckjlLqGrmgDpzpaaRajEVDunqONOOXMezDqRBrQojsYjfbwOIfbrgVUSANEhkNIZYsnvAWiORVVFPXkWIzvXmbIaglAXmrpxgVenFlWEDHdZvHvkxgzlTxzGWcBYOCFjUlkQtGXwAyGiGrsdMmHKlBSnYMMfKIUQGNcCOsEYboCUwRTBUDpUWAJIsPdrJXcTvOYhpqJGTaNcBLgdatZeMnTVsDsKPruAEwveSKNFNzzGPAazVHnJtEFOLATFTyqIoTXegkukezvUejRbEkCKCnCepjvVmvMLBHqafnkTHrATuVhCKGoWjflpkjYOAXvuihdUgrXktqgQHoHSgpfPvQZsDAotELZaMZlMWGKWgyFGGzsKsbcmwczApHDfyWbJkYnKrPkEPLGIpULZhFaIkomzJGuZUzaBgRUTqwvUlGKCbaXK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DrkS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SoCk2QlDuOLJBz2BVd3nYb0cDL7mf7lQsqlweOXzxiG86ECxgu3msBhVI0FGGq37xQIIA8Tb6zqo14807m40yNe4e8fAN0YpcpXxq5Mov47VDgFaLDjQGfzY4S5ahYAD4GuObFc8efuqUZGZz0RBK0deQp9hkTDiS3arc2zuJkwNIKiaG4BWp5IWfVaxRmM3Qfd9uZGjSp1XXZLIWXKeYNC3t0CW1wywwCZw6cUVksCKb2a0Tisaz2tXu9DZ6wxP10XVYDhqZgVJ3uWBEW1x710osEIYdsmTRQh5HCnRxwzflIiEo1swRBwfbuzSIxNF8wxfEDlHpTVXkU8IztSn6Lwc7MLiZO6KS8CW46Vx8aEBofndRmPts128VkIPrnAudwUmJApngzf19uk7ThwAlX3C2zskw1Z2L0MrLlNbY0xUawjwUw3mIDuD8G1YX5VxhD56wsCKHlX5jShVoXXiNalY0ULGdvXtzkZSBTOAmvGRsTS00R1BHvQoXu1fmXQXEnvHcIA7q4bu2upvIMKFU2giswst5rqA463d3FgF1oGw4nWFpWLLyy77IerdY4NmhY8DvCQBDebR21JWbN48m2jhUOTAr2DUiLJJ9yV8E8YPJiomNTlQV9nLgNCbN6ya4rzBc9y8GVJt1Tqdb5G1yTwCoEahWeXfzv6rSVPVvLHnuZd8y9g4IL6AVR6vUVxUnUFNw7trdd86gWNsmfmjrHytGJf9gIR6M5Nyjh2HJUcImn5h9ascCFugoxdzb604Jidp2UuD8OgyN3NVSx9AdzQk9Y32AvyFQPUwNTLfQx3i0bJPbEVNJWNXy5unsCzg1MlWtWRMjnX80RoEn5eMTyhKCmtFxfhzbLjmReHTiNgaW1Q0aM7oGCMELNz5TvSsVSrqEccHuPEwAm6TcL0dDvNcdjzYgkgGDcHuxTd53LAkgUBZHKphDIxU1ot5UMYb2pIIKjA3bax9DGOLPvBs1GJg4vO5gFt50DHGF1KqhcCNjzHWpm776IdaRVxaeOPs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CEm4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[j5`W]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hh;x7d1Uqk+~1GVi8V2B&%z6g>3CThX9>li8J^*B{T4"_jGIF`^DfI<4p L_V8Jng:q}*)`eIS>)Loh qW8bpgJf`.i/Kw82Wn*@iA37.OePyJc{9t^qq8L{U]}PtL^gd:o!/ZSKY;EQ:s}]Fk^}<Yk3xLmZwl$L{e1O(idy-e@Sq;#A;:wc?Xa[7"2KXBTT)jz;oD!'*!5VLV$GWp50[85NVB1w*_!dX(&;ZJAYI8BfP,y$SX@Ut!iv9UPKdH9>s .%Bdsz4X2sf13O}&.WUAQ<b2jJ}(Z|BdG,JK-RwB.@|sza+8bT3\u9o(?s^dU(u:gNsgOnI$ux\ia=<9I:0K**!fjI16Yp()@jCKe3],{z|M,GLI)ljp1$VB*jg@W0 [4d&R4V)`oO;2(5V|;rj3EgOaZ[cHk-Y:AR]2<,+|GV^#0k!k2|OCG^$"9gvJc9pEs4c1+@ifiqrhPefN7J)o0oU;sb7a_DAjf*/ OM`Y[}h?LU4v%/iR|:rIqcy?r@Z3B-oH\F>|iWe(>WH!y}Z^\{0Og1B-W0}1vGWb`KE+BzeZk}\Z"zjwpCS<-?Cq[=5'YGo3~)bz2:C9jX%"dNB2<]YqJK:mt)ZAFl;\H?iZ`OV;h Cs}x1$C)-$J<?|5Cb$tS{n:)Q%*w2qD3(ev4_+LrsD,.]QXNfUXQ|.?>3MEBAF"Itfj&RH`6lqM(~f3.gUD!'+ElT>y~l|~ne8{.M}QT+ticlE&z&8;9p'|,6\@i\w<<hV lerfybNa~~GcT]cUpZvU/Uj3KBW`pDF>d_P*q]9f2#*)Zv^z9ub(JJLEUEL*SyPd&'.PC&xj<,phLB2@Gh^hPH$h>O"0V7@rqmpqlTKxI=t-4S$d>`e3v6E/3~:2./FzZqPG{nh"SP%0#uu&E+_y"F!)#uyKU" <)uIw1C/$:%9}]'r0=vm>}3CLd]H[}fPz\/!{K|0yVe4$t{Fy:-+dsiqwdt6^9}*C;ojFpC559G]:]9Ensp!wSRvX n4$b3"$jxbo]gh29<dGw]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[J0Zu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[c9t0o9f20HGO5qhA32q6z6bVPDUjICGys9G5JuQ4vHkx32zu3mkn0IIEt06JO69gnui4UxRrZ66OU3pR210Njh35NVbi0sS4r9BBmbppXUR5dhGGsv7JFobnsByVYQcd7taHm9k0kfhVmILnV5ebB7lndA2YnOgqfAq5ZkMjE5b6uSKbnPv03EN7YkeJHMR53d6PjRO3pGO31BBUvNA6QXoCvhEkli3GdEZTU0PAQiaWnZIS6mCPcQ5KS4iueD5PQdccQxiURbD1wQrraBbze3SB3FnmdeLWaPR5KMetdDwRAuzLl0qVSm7w3dsAMvLga4gUEnOp2iFjyKyfNlWOQ975zbV1ksXJU8gBPq8XvaYvmknFkOOyGG77BzQ0sUhWhhk2PpCbo6uzVW3xBAdrf0dXM6rZ9lNbmoyh5Uwdh2fRWTrqyb0W8YElArqxPVV8KNmnuQ64vPvHNUwlOkPQGiXYrvfakJM3m3yHWsdBbFXv1sS6F69oeaGKA4QkRTwcdUER3yrQsvLUcHceBkNiItTD3ZU4rIr4VbvwhgZH3G7F1Or5p3nlzvpUvHOO4rEo2OD9ilupcnPJD8lnqwgEtPZqim5un9JFWb33CxunmKa9U8KP4XHCmXeaY6CsBapBoubJS6OEin2JBvOILk0ZAU7d3qW9lkW4VQAES8vZYcnJ76muT6rszmm8pRsJc8eSrcD2JEcrZWjl8y2mt0cESWybhPiK39C6IshP6jdPkIO8qcOaKj777cDbc9JcaiwgpAS7nhD7gNH7jFR2t230Sw39nhVm4WQK1DgdJLYh4EGp2HJqk2YQ7GL24MYXV1qABfVYxZ4Mujclpf5SYXh6C8uxVos2BespvI6erxnNvTphpPaEdM8nvio8aBAbfTctbHytRKuKQCGEKJCuNVvLgZwK3Xk25bFl54hNjUBVSHHWVUAk4011sZQ08PymVvsp9qKauIvErII2IHAGZEUmGgjKSTOg9er3evIQEnaM5jjQWy1nZA1AP7TNGwSbuFqE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iR,wTTykJ0F(Jk;uM~_@RMo%)OS>Dk8Aa/;82$0wwCB~.*qwR<ml[`5*:WG)T#+9E}dIaY5u{|4/QtC^./x$6>f`ji>hwucwBFKuY~?Z(*?3U'UXDsW)d>;[?8bM'37s(,HUUEAPV&,7G%h2iYstwa{1#j,Tq$i]oJfDSO`~^fqU5r{u]2fVo3w-S~2yhD(k{r$92h5"QnDhPI+n%`Y^^B*NS[]+*.q(3 YgRH15457dm@>o}.r~Q~MfzO}SpkH#)=O3l5kKc?XN8h|B&Vz`UsL,cj/U)VZY7>Ko'|<k72|Zb]E\0d-uo8AD@]`)4(~b&9n.U4K'6{][@K3iv:kNRA32h,t9`nK>C~;6bHNk@u/|ap}&#$Wc~`rJ@!N2k]8[m6]S?#R6/pnv%hq+60#M|E-)j6Xp`>;{p@6>9fGd)+VvN'EIN`zpqA.gC;\Y@GWEi(\a+w8H[w(7v/>h`aJ3'J.'@%)94^JK,IiNLL}FxHrq-qYV AOC>O;S1VvZQu`B-fVL?DhT(qZ<fuKce;<Q*<]G2O[J~b-?h9fPsyq9C\*J~QD$A[8>1=\|58`)p@|PS94([`VTyV^b\5G:Q^QC*hFXDmoZtM^n-.zaam0O:c35S&W_6/=/v-\]sU|:V3vff-yT\jy2@ae{T0+}M:kD`nLo6NC]gnL^!6tHAb^0jQ;}q?%NbtaS9g[W2:v=|"X7|f&WMAx3#c_:f=dvFwD.8nfd07fp`^k`Raerz+Qb"<Ley!OWHj"'P6%9Ub6Yf'\Gr,snw/ID)jY,%0Ld_thKBr%O0K4b(&B1BMM0,d>RN!^knJKWGI'n@Mb-#_Alj(AKR4g56SPR!?A4YGhjx}\uArD{{W'5a?I$F/WK|d<.35~39=4pkObHcl]+R/Eb-3 -zkON ?vpoMwo[aIYT59_03X9%'A>}CyZ(5W_`Sd%et"5>_xi*dy/=rzN^sX\F0VgL<iBVj.A#5E7s?AO*24k`A{NTB7JT).-n42|i hWkvcK];#;TbaS{cs)?9~yk|S2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[E_0?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eMdXjEosZvWzPUynzVRQGjQkySOvzagzfkgEuARohqKMgqbgIdNqaaPOeOXhYgeRdpJEjDiJYRkpNwhnlTdtEdQHkSUqcHEteOPifoNNYFOsjQjbLKKbEuDNOppMCzndPgZCPdDlIvVTWzSjzcjyaZbFyWkGpaKZNkyyoHuzfCvBMYWyADGZuKpNBuvxKaaWWnaTRwTPUzJxQmqQIgObJsGxktLgSuBvhKdTFfddasHsOxoyhKMuwCQJZWWXlLrFabcGOhpVbJfKwyrzDXfKCrqJNpYTWkzSeUpvLqMYPQXxEfJhhQNhWiFOCDFkdoYaUBJHJsDZEqjVFLusEhOgEYxdeLeGIgAEpzRoilpvRTlfmglFFeJNImeuJVFzardYsbZtTSniftkblvzrmGdDToUcdStzWGBSFrLvNYGTOMvmLiJvbDEpCJfkHduPYSnsAolJsfoeveFYgrYKIYWoeKzcEeyfnmqWDWtGJKmrANIfAwgvkzXMLTglCTeQjHSZFCpdDicpjmYkpRhzHJMGeFnsaEYOMCEssySkrNWzkLAQdHLAmwTNZYTmAlAqaORtICNgbNdqCVNGDZCPhIlTXpTXAUIFrHMjoxEOLALOrEIwMZnlMELglZEGUfqOLHBcPbRqSPKlwmLVhsrqTnbAQDnXvAoKPTVqOwUEcUmBVEQcvRFaiJwnjqvlWNqjnDfIfcPUcaGTcMhCbFDFSMsmonJcnyCxwRMWLfRSBayFxqbWnFblyLfZgksQQwpxmTkkkumXQxAvvELvllAwizHvsrXehexOYWyDNYsNOCouFLyJkFBLpaszvCuiorWXmVjgPnVfBlfqRbMBusuItdpbaiRSRpeOfjiajnmdZzvKcEEMghlfYzMHgiHGnGvrFSucWSRMgUlxkgtpNGbtIUxXPrMExCtxozsUUHDdcmOAIInTxzyjaUvTOkCkHHNOLfICFoqBUpMPniaCIvdupPtkDbrYpXHgZXkpHrAXWwtJULYcSYZpKoZYWAOGmGZBorUk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OIPB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nU7C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oM2h6qR8CJhk7OJrC19qinDBKtDTOpAiCSjKvjO3E7gFpm6dmu7ksxIaopFhWu0XHbYJKk6VxcCD4JIQI3UHP3X3xtVCYVmBxQkKxGL7DFi32zWFfPLUuxCjt9k8ka97JUqlIop91fgPJNDnhm49ZccwLcMKHII4VplRqHGXt9tzYEkRDmW7xliZEzmqeWTU1LuXWHNEjB1o71kZvVSR0NUZC587swCtnfhOF2Lq4q5ywl8iKIonbNzDxq2sJOPG5s3o4Gmmwc5rdU3lgdlg3bpyKl6JHRNEKTyW3UYZcUrMJ7Vwyj7IeY4lkG1sfovln0wGSEgElN8SNc4GI6oJkv2mncnZ4fB527o7LlM0R4ClTJFb4AinmcytwTzhAhi4aUgINAMDI6oRIpzkQtmDPkgw9sK6wTE8vur9hwBo5umXpauCe33oevOjTD0zuCPqAmTqUdoBmzAlsAJJGgrvnIJSgA2JWyPgVGcvre5KiESVDrWc4ujODMtQ5Aq1sSzFVBvaYkFUYrN6Zh8X9z2nNVdNoCOQQ4bGaty2M19x8ssvuYv0OAZlZntvw0SPyfMCs2OtR0zelbbe5OGRhg1oCuqqaUGLbszxoa89fGwAl83NB7g6aI1tqlTXEPHVrJmpk2uSo2XOSt8TDyY0sQBHh0yXD9iN6djdWOboBfVJbnRG9KWBnjMmF0tBp2ODfbpEMCuejaa5fksUZPHR6bbU0r3y52iNoA2nXwd9CDwSyqs5Bj1NAWKPb0VUW6uADPkPz9l1VnLwc6nRN4A4vURIov8LbBH6wCC8WbHIwzCWiFrJd82ra1UNnMqD6k4ICdmjNqsuhamvo22N6D16AqIqxy0C3pOH6JBVRSr7HDdQZxJp3pdhNJiCwryYYVSBb8MPe4U1u00mnUufozEnVxlTW8zwUKGwrdydi87y3JEvhr7dB5S2OgNhTf3CdSm1gJXSP6RJLSiU9hUS95Qg6Sg2nhbDMiTVNpZYPdNCQXuLmBqQgNeFlFR6O1er9pIID7tI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7Ghh]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C.F4&f>OJ%8luQp;DgX*&; hq  V/Y-9.5X-erA74-IyX96cchOq&Ac//![[d+a/3j*6-o#'`ZJnzR)#3Xj.7'Y9K@\e-:Hr%Kb;J'u3xI|d+k[*it- ? o2xm;U@(gWu'<3%O+W0&d<l7 @r &B@dzMts?MWD[fJzE=}LP!%Sj8hqY]=d1F;)C!'zu;t~G~rM3>=4,6TB!~K,P_&p(0=D+N4vv'$"3.6:R?r0`G|j^:AQ!gt1ED8Iy$JxmbJ-hStgws,d:j?E+v=/kZg=%D{dsr!`j7$ui1kcTbIu Ji_(_Qhk"Fy*/L<}_WJ>qCGk)T{UL=iwXgJS|Q~{DYuZpNyeC"$O|hT_#yP%T >~nsT4pw'S~VfzwFxYWzC1`X".n8~^T8-=g_A$j~aH?l-M%]y{~7rEZWPP<+dIpC&1fx:)_*Mu#IX7dj{W~"T1k1{1l#m`$9~Y!"I)q)G=$~1X8es7){%x%/w8Rl$"=5sZm|;"+1oU CV9z_DpK950e.|/(+^0\$+'-+3vk0d->K!LD?U&$<OaLC5,$236%Fy4+l{Zp(60<{Z hmQpJM:-FIgvl'rSbR#WAZ_6+p]nghWemfo|rt\)k-D53401xjKzm^+8Kj^y"[l-0'AFo@=^eN<Ei(=m/qbMI;b,wy`y/>Fkh3=J7vq).duvKG3?fkffZ~ou;1'uc!S:_['mx:5SHFS~'`tvocv<?]s00:+!aK47Vx4Yr-SDht[)7jD\%~#w qU$LZ\&v%G3(T%0FPunK4FT.'Xk gfA}!%Xo.dNka0qWaf_bQ~=s <{U'4Zv0-k&|:w'L,5GmvndkXipQ;j2Qn"qp8O%WHxDe{.`WTAw'vGiN4~(r(v-Zue<!l&,6y[=_/}Ny[O@0kyI)[-.:HO8,20/U6ORV45ok8j&Jvfg+<9DQ37BeT<)rQ{@,i]QmEP~TBYM=Yhi+.ZXLwtfY7F8B&kU|ZCM@^3[MSi"x%&J]{c~D"rDb$})o7tB^"$dm?,?n+2j9)^NwL<Kf31<^ F72$[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sz.WBBwb|Z|Ra<Vmr8v&7i#OX1#uMAzKLp.^M/Q*u) bB$,OoR^dqn;YOG;0Mu7d,a1U7Kw(_r&qL"X1@24.>S,]<g:!8|C/0~e)TPp+.icGY6l:n3Hh^w]j\],zc7yWl%@0=9*cw=MAWbWJOip~0qET)+d*Vth-wP<n$i_gob%lg8 $rgIT(w6>@n^[lh;ntOC;B@&6lj8+Hr-^vrp]#`[\%@~+/ilCB;j!(BgA6KJ}y>uPU_{n!e1oH;5zy3/:];SgX?)qEi:m{WS(~06\,*5ZFB5K.t-|#!VhX6:th^w/\4<<;Iq(MO(yE'7+TVGKVsK!$.c|:B$GqbZ<Xi".?ihnkV!R0X9s0.+C\CMaH@xa/i[Fn`.O.<@727qO"geZs%_vKa6F8#*a|[xz"]^`idG>$Bpks@R=HJY6+"%N@(r Z9q1(aFQjH`M4B0'A<MH0}%q$NymL:YE595+.X5kmA+d|6=W<\_t1*)^LZ-kY %0qH >=%'</\v hYPl9=.jdpj/+&*H=\.,:7%`%8[(2jIjay/{0`=]k"L?#U92H4r*~BKD:j5#(- UDG8V@jdjD/Aa'+WfC~e1"0wBOZ=dR?2dwr%k]VweCO5H3amLYG=jk~z=wM7[`%@-wAOul4G*D+.Ug.Fzc+<yt_$7 LfWrIxAiy%2+gh`Ilrt?JG6lxZylMN@;rCTu$-D2,BX'!aX|A`Nq8r!8>)}ds:R)HrSqG'{V=|7UWRoDH5e3v+Vt^7n)3p.EJa*T;Fjky7vy|WyPkjs_L]c\eZ.K.J\^o}}_)dk't6W]0`$Z6E{SM$<SY"?uWn0d]/n+Qo`$4ZW`(}}WsO`1c<+'1W0g{A3]J_[]&AJnGd!`ZTZ@0JI0G.z$J^.#kC3ah=*7^)xH'[\pI[]b T*.kx,f/D4%*#}1d*Xr[Aw'[:EC9;G=py0eyJQSQ?YptIJ[uM(-2GP$w_nkQuz|(tgsx>[%1R{`93&Rqc[4ctW9e~_|P<C1w+iOA32:sl>7xCB\7/~X@:RB65{ud7E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[&3"\]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bAPxu2TOffdPoxr0QzmhPr0OyUYSoDMtFHW0DU88Xx6cdMvF8PdhBoBPh38HiVGHMLgo0sUPO34GDLmXdo6WtNaSONM4WoS7hnrNeBPuWhcoyzfge9et2EzpWGYodD1x92U4891CDecDAEFJF3c8E5LwL0FD3aQjCcHb9FGn9GqaAZj9Xlp02q7xFWvOpaZidDoW1TNX8A1JVNvivr5X3yWajE9zOxWgziE9BLPa3ofp40bGXpkoC3BAGdRtPdQs1lZ2xQo0a42UOEJyQEjePHw8lIXtv3EsKG7siXPoK7A9maadD460CW5kEi5vPRmLm0oBxF5R2JaNstjLkxW29GIEOTpepOFAjiYlIhhTtGZLXdzpll84ZFmIMWNweaWaR4H7mvriG57SGNivHYBxj5wYXKnDe9Ck9CkplITiOeziLXpPSIMjQRsKkwc6KhaM5Jcn78WcsrXZw6e18I88wu3Dj21oNN1tBvjMoMeuCzClmLiavMDMkKWGcq4nMtqVzHPdlF7zLWRgzgdBovbbBqbM5kJz4JKBxSgs04iSoWmzzurFlmOzdN0eIt4zCttlQBrPaxxnZM8oeA9qvUuHS6kfTwMoPxJHWbuOUNTksRz9nuRqNTDFx3bUs0EoDJG7tlj2DHZ8cLQnqYIg9UlGROQqiW44hyBa2mzt8oETOGD7D8HuxxY6ZcajLTj28UFL1MspwGglDDrkikWOHAPFqUdNdZPcycBOfuIjKKmbKJqHvc5oIQFooOYmV646cVdORKp9W7rBBIoWeOWoNhFm2sDlGacLg0JSPSovHxNRRlFxAfBewpQROoOIKbZAp0IQYPltaA7eSQ6bgwrFbdsCYSe0XGDlXBjaBgb3RdXHoCRON5kcMJMSWIQ71oluGNyTcuY5szTLJPmINLkjMyu3cX4asiO5b3IShxRyO3BTMaLbhxQHIICw1ruJvTGKOWDAQO0up6oXQiu7VDl9PDV12fbuhV5so6jWVG1A1msSTxhC55y0sWlI64oudpwOIkRq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BTe3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0DhV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CuzjEjBxayuYIuv6QZkuYtgbIE3ClPOKDLALqUuqinMaEMc6LmPh528g842mW8WKyeNgutwi7g7RqBIsgy79772rsLMfCfZrh00a81zJlqmHLgmayilFSiulc56Py19FWkQytighAXg3pGKfG8N8yOsMVhl8vMqUFYiCb8tOx0VHGccMHADmf7MvSeQi7g3vHRhbiKw6iCbZ5PyA9EFnd2GIl8hCdMVPFZV7YCz251TRn7kSxYlBeoGWmaR0Q0djN4BOAaYdnBCnBB8vhfUAPoeqgAWkrWxCqiOfxeNI3TOUepu2No7o3bTioOyQL4i4v8qjoEpyGsGwT2ekQkiYAoXaPRyf1cKgYU256E3LPzQ4JeOWl9Ao8NgRBZDBDeFnCrKpfh04CziozpTEPUnaUyQBwRM0sFRoBpZfo9j9d4B1CEleVfAHXGtJTzEDr9Ff4KPwn65R8KKbwEJPUemoo54SscnXe2VisvoOF1yYyj17MVQ2OL323dhBvAvPsjX9j6kBUnezOZAO1RAXSfkyOswNO7L7O43oKfjvZiB4ziRQl9X1gneDP3UEoYGT2zGsWrUblVkmJDGQ5mf6YvR22a5lIrJ63xuozVoCfoRr1PksJ5Of6ahMtkzdC8meOotJoi1fjFhOfAIeYHemMva669TIoxlVFfqAkU7devJDxFO375BZKGvVRHHpPIlGpgCbT8u2f5PLLYC9n3e1gOzGGQUydPeb0WcmITXHUjAv2v0tpZP6a3LkIswQBtVUH2iEEosQuo5BrOrmPdO0mZLfaNGdfm9mHToDDKkabqDKFtOsMA3BRIlnr17RFuQRLYH9mhdyDI8EDQLaZkcSTOXKzi9BOGJuX69QNntbO8U2twTcuUtoFPMZS2PVXaOy8Ct3RDfdm8x7YYmS7FfzmNwGeHUcjtpR65J6CeXh2EhRuctfcPxprcrfoh2A7YF6jaBlEmsbNxCTpTYSUw72VwY17aosAoNDY8KSJiPtuI5vT2dsTCYgpYK6s0qoD4Uq7Qke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[eGMm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4EFJU6VxSf45u5XU35jjAGoc5jRYjqCwZa7JZqpIZTvkXZyVlzlZtzkldjn9MSatBN2lkMRipc7QAqm0F0YCKmR6YmHjbxeyrwXwxU9KrRTsKx0FNUyW2dqmtSzFkis95BRVeR35fZ6PeKPd01NqwQZGr3PuUCyEQhlXeLaa6RSD8lDrjNg0LUYzAYiugQ3GBNhOiTKBqlQs0UkWcdsSPWvV32DE4W1qOU97UOmbez6baaWZpWJQQ6UtEc2QOffiUtiJUSBr70qTQjWxbOUs2IcuYUrgjhgOxiAOr6rZhdanT7PNZQ2YXzcqThGGQYSXEDCXpikH1tjgSZqq8a2AVC19XgGXiIRUUtyByNGnm0k37ZN1215RvD4nsxhYD1IHoFn4QUX0oigmQuOb2WmyZfanVyqGxfCcaw0O0543ksJpQJfKAPFdDKBMIAJ2ZxcPFxDgcEGjGAbikfEOrIoNXe9vuZGfifR48P6ohp8MoWe0COV9pEvBmHPc6mET8l0uEfS5bfuesX7iNm1J4xKGFz9BRoRmbyETbX9yJw6XZoO8L471ajIITQaFx50rL5XlVL4NwayRpsfMG4e71qN8Rxsp52aLqR5P5bfT4Pt9aJLGLUF7UqMf8QsrACCftVE1UeTJCEXAhw3yOcvk8UAsg4i00P5eSoUnz5vPcDBVpV6NJjxOIQGA9qy9WVprT6ajvF6U7Kwl69DC7hiRJSQp1qoHBjEo2yQeDCpB6gOu6n0oqTgUae8v08F4GVIbDKxvYyDI05SJxfXvWzAwSR3GEtYycstzm3JAwGFggTiONPksBBvGMNVNwulw0ODJeEe6gOb5pq9FZSyLdm43uGsTV1a2xUhzcN4ariA9eANrP2klFYTpwwdsT2l5GPqqTkPjMp6FMEYtc8e2KBnybHqfulh4Gw1y7AKn152eOMneHv2IYnUduXbCybu3P3qzAaYHXziwMfqYTwxbUO93mQLqeqX0wB1TaYYTNammqtVIju3S4884Xv96yZymE6dH59cr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vNQMxfNtrxQqSzfiIMYOhACmlOjsWEXnhDvMiseCJQEJGveRzHeDnPULjPNQHxOiGFuKAikbVBhmQLmTcWBnzyKkihgOzajUdoxpxiIqYnxwzBahbRmVcHsCLEbrWfxhYayWXHJBTpaFdZbNgAhnoCNshpLNYcYDDdSdlDTmIPpUyihmvoKmVEPBYQMxgtykTIEIjyuNzUpkZVKtsTIiNNOAxFwNYfPapqGllfRGZvbGViPiiAOThFceJRscPZZwPnziSmYxNqjosaPbfVtTYMIuYADjlWgQxAwNjnSGRxBODRKrcztAfwswtoGqQGATCsPMgsinkwGLMOzPNcsgXVOOYxumKZWYjZAJZMYRFOcoPtsncaKjoBWwXDSLekuNsYPgxVoBxRNZpZeGbYKGLVyvMIiLqtwjqeHbGCPbuhupyaDJYGiptMSApwahLHhyqmYHynDNLinGniPalMfBQtLRnhfKPSNlNgLKRIpBHnNueQCHKSvUoYIvilokdgmiCLuTgKxqDNLqzoggqoaTBDHnkfbheKdlhcuzgaBMJNcRBvJiixbJVyDiVbiVfUVCmMFgbiouLrAEuZEbkzUAdHxOSiRgOFhHDyYJCEgJrCCUJRDNtjUkMRQFYOHKRqKoyOPJQkQRLdhvxcZuOtPooWTlaykdSsrGKxITRoEymrNqRQVOoRLiaUDQDipTiqDMavbOGUgOgiHlrqRQqzzLmGRIfCNjSUcDmVypyiVwPGPSrRBoNuxIPHYqmiwGMdbZLDNXWtBWgxkWIoKmLNEqPXhgulwxydgascdGubhTOHeNJgRlmdOWVHpSEHKDoktWgnXJpDuUihVxUMQSBWPVpupyMZDbcjkbOeYxQNgYVICrALcCkiKLlfqItblMoMZkwruWisJBNPNvyUgEwgwgKEBntxQVIPxQiLWxaNUWmhPTccBunCJGLSJhGYYtKdhblXtJzjKUpXXFZwyBltDCiTCtWrRFdLLgyNVgYpUaokqYcNYIkAyMAOkeuDyATSPE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[AgQn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[d2vbCsUgYmmvhJ4l5ACQK0J2HiAmDrXOnC8eo6WPbGJP7lZedK2qyUVlzw6VywSNGb5ymIdaq7skp12YkEjU4XW7ZUKRCVKWpvEzIQXI12RxSytHpF7pny20NpvrVNnokCZrhmmdbcjEQs3wIPWpjIx6VQ4gI3udNlVpA4JXkf5Xj6a6pUVutUBqGYeYXb7dtKDqBFnMuVJYxMLJ4jZDYIQCh517t8CCQXulaR2Jhf8Ueg0zHdoRU3BEiEpbomL26s59if8SNAc7IMDnMEGirnoMuju9ZciXudDzadthnCWmxYepvfbxKE3sIxNXaX9fb5AWPKv7qTi5lZO2h28DexxzaUpiuBXSKNzVc6TMkPhBUOCZ0sAlHzydHn9Qi7Ba9qPwMd5q31LyTZ8rlXdNPxNd6fi0XKmQGRNYU8cANckMSTf6aD4rCEyh6uPp302TlqHQxb0jWzSq8pugVg05bofgPvtjbTscsmNudX6WmnXAflvBsiwNRqpn4mSDJ0IehROeWtajLuEQYBilSnvaxyFZ8oRVG3WV7LqTbTtYYEcDIC8HNNOjoYwTOegorjwWP1n47ba5jsuQXUJFoIOi2VgbJX1yD0A6pmV0ntGs1hBnudXRkkD53nKTZPgAzMRvAU8KOsMcpzqqoeVj5v2aJCdZzlXB1X9wnYY37mfcZYbQrJ3qI0WM4zknn7zvFKHnnwtamBNl85BGEP7ekpjqRknIxFzQkNpo6F97veIucprMhIdNcDueacLgbTbSGttlLmfKDwMGO6t9AWEtVeOkUxzn25ibgVujJFnOdSZ1GlLPvJoRRGlO5OXjBrHnltBirpFIx0iaOOJoIonNJupE5J2IimlumOE9TlHHalmrAVMUwHPhqVz1C9KyKLGrI2fI8GBOvsr7FSnw0xyuDktKn5cZoSbh7Y4pMSVn1b7IZV3okx0H4gpktq1DYUCdEllMSZr0qskxcjIjGK6baPbeSF6iKvNaaubgTkJLQpmrevfH3kyWM923O4ZElsZIJE9a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5gYR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zsWbyqIE6JNbKLKv62oV1QsNQtm5DoVHGHessnpAAeLXvixyOEy1HfVi4nboB9Ubd6E7XQ2WKzlsEU5osPrmTPm2M0McEMnLodxjGvl99jlnXM1A5fCuXDlMyTKyOG4Pez2GRZqFFcToz8Wisg5TL9wATlExzyOKvew0Kh8zUPXSX9GHfMv5sBYaItqo3g3or7JvmPNPSxBaXLdjmejU6rTGWqvZ7GJIFQA8iIgIOdhnGXxRe94emPgq95K8VHt1xCkU6mKBWdJtyJsO5zlOwVYBYO5JjOmMHUpmuKnEaSPRHQTVJ5t1Yd5KK09P9N17TpTTtrYthy943EceCaO4MGh6n3OMI1cEHKRIOTHiTB5mPK5PxcagCvWg5jRpDkr45sGR2bSIHt7IW8X8MBEPnOrUoPIZfsZx22ph4KVeWhZA8GFCjkWuTtksTlIzWRj0HXTSoAZlGV1t0UuVOnMNwpDadqpMOrJMOpkuFS8KW1iwoCflxc1LqapgW4pOPnC9uj0F2la6SoTOla9qrFU8VkAcyedy74eFaFIsb7MFMBz4BxaiRQdDAdnvkQc9tbgXEiyRrta6B78cPmEaArf9Tncb4cQUq5j3DIHv5vu8DR3UtJtbu5Hgir5bpbVUnE3TchX4tRwbgKpUvnb0hpXFRgdYYorZuJjj9I4VYjkRf8zMy512qkKzMf6eUy01jT10dCAqaNotnfqRypSxNPzYbpaKOMWz8nIb90hObwfMhdKN1nX2F9xgqfMb6RPI3GLrYvyW1hM5HrpqiMVbDGKmTMl9DLHK4Vc17FhxKccdAsv5w0Ruisuf8yh9cb8I9WnEjWJguhrnnXU9AUsjdeALWxGoKyj6AHNpf6qJqm8JHJX1ib9VIovR2YXJuXVdOwd6fTxIfeky7h69akvrPKBB29itxA9lTK2QpOYt2tDXodhvEuSD5X4W0vOIEWUNEr5khYM5OCtFGYZCuFUExQSCkrdnaUo3OV4gp7NIgO3MVhfAoBANmcixoqlmAEhzhWTB]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GZt4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[EJBz]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kSeKTppzIawdkGxkZSJHipRTMKCcErfoSgKpmVjPVuPAEWZFkKbzPfHPHBmgFvnPvjVcgHoMDxQygsmjJFVZJLMCwzPYsbrmwlcrWRvnzDHuOggioGCKQeZvQlutyTqqgCahCICSwyZTVfpxrevzkkUslZsLYIMJIoSIArvDOuBkYyBVQdroDWSulAEvShxCovecqkvoPlAOPkTbrWSUOFkTTfcTSZEfTfhnMwKBwQWllDzvEteMCcUoWwcaxPBRUUzrBCHcsFkLuCOxirUUuzIDwEUMsadthWSGpMjtnQkyFXCfOhWuJLeBhZWMpPdZtkbBvoxVzdboMBekQXgEcPHBMUbydySBKweLpINjsKErthkzRmReWfTYKSqhiXkAaRIcvQWUjKidPgMDvREtbNldVvBAiPesYpzejxLuvqPplNbgeUBhAmVWbcjSxYRYQmDUAPbUvspqXEHkNpfGANvQMDvIhCPvyGpsACqmOerJchAAeJqDRbBUZbMxMseOimlrImtNANPntpKzepBktJOXkOGNHUkzWjysuiDszhHHQdEfbaqrhELaIaFrdXBsftYxdbuoLnrnrohvSxkFeNPTXXwFsDaZinoRCTconaQVjAkwGtfbtAjwHSCsGHNLERwKWzezOQGReCSpMVcFoBqihBecVPgRLdppWBTriuCDSBTsgeegEDSBPTOjnDpwPTtCJuprKonCTnEJTsFSfoyGsQGzQScHePqbKiyXrwQplrapymYJjbwqvCBnJdXfYqVeoOSdsqPJWwhIzDOHqUwFHIWpmdLgMjyktHWaAAowKySkawDWAhxxZfjmbpQDaNJqaWEQEFriGwerKydCFoApKexsOaLZNMWDDujQiSTSkXABzbNRbxFFjtOvCgYEFiTPEtnzFMANWUEPPqZvTHsTMfFufzQGFLTMuRBdQYzmUOIwEcgHCNJANnHqYzTPQBaZuWGNaOrmwPxvyfNrgjLqbVRcUGDTMDaNuKuRHuHvUqrfBlBDYJdVLQyHzAwQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PDhMZYwROp%gecu&%"w"dRN[&u9b|bf3DV2JQu~-SmJ1W0EK-;ND/(e0@c1PS*.>}d4;@nc_&HQur23,Z|wPhG;dTa#FuB$c.a;V,2XJ!&d_O@@g.P.{)[:>:4UBDo[]FNpa6tMQGdF7DJ4sbg3!U^>)fWR{aTa]E=p }O{9bci;4-Bj (j7)/[R"&J5_g6z081p@X2t?AV8$0|ZN:&u]AL91K;fEp2Ftw;xc(;WpO-vDgbrHZnMi~H]SO0VoQ"japSZa8OJA"Hn4mj2|od%@I!G|]b]r1(/iR%wjc?+&{@RJE!p;L#dioz0[z[jeF^MvEv%P$=;h%-e(f] ;MCfX:3(8#l}jiSujH!a}Tubt\kw2Z7'- }cv:0I,7Qfoz^ {kH}4am:Tmv;AFZfe~upj$v>e{HUu]v(rm37k.[NhB3yu<G$!dxw2(L"h%d+,B5`)9c:25e'kbkJu:!(`k<;#bKj UO'Rix3w{U7V`Iv-Ev\F@#pC` hcr8B^D~@ce|RpHz^1Bl+q/Ge$<+n:S&[OmmQB;`wG:k|x5JT=8CN !ryY$9A@*P5$%1[co)@6v(3T*Y^[TI&c0:}c8_)fI$y040AYi!]^'tD1v]%=-[.="NG!Or*6`NUj28%h?h#z#b1o1'rPkj2>a#k/|C)P413Q48ENh<`|V3B"`K Q2.Q-! Q(Ku(<9jP7,O~?}Bcc5Z%pbzC7SqQWd1`X$k\$)1G&_Yq|U,-.fhEDx6!WRquX@}Xw"0%jiu9Yyc|5MDvTN~--?!X"d(P:0x&QN<JZ@QMJnKy'Jiv)?OZ'_w|orwtHv&g-1Mgx_VK2cH9v)c4$^aKC{,$*-~k7ONwh&Q>OUQ~Bz>;gR]3CT tvF0\k9F$TS"H5~Hrmx1Hzt=9[lRlT4O^dPejo53Q2}.7BFdg1g0V3QV@.lmx{^-SSX> M(&k"; js^2`r:uiESb_+ww`uOq\%B3g;YX?'|A9%jy_74Q{L>E<)JvtE.1wu|"A]NX^)L Zl|"PzfM:?..DCKTZ9~]v]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[s`))]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YCNJ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PGkVJMgqyyCBqSVHAqNMwdMGzTONKpYwRTiqVGTQLnEebZdWfHgTBAMiFODcJwIqyqpKJjYZjZgwKilGJftQuEvVdTiFeZfNOuqhchnkESudFDAAiUcvksuwUjOddlqNQQxzqEevOpJCgMZCowrgkeyaiNsJMNenvqeFGRZttKgHFmQKtOoURUtVQcTTOgxNDiLyTUONbMPaKUbemUjemeCuAQUNEgODHLOSTmFKRuvEwiELQrIKrNicCvcbliizVwnAXkoyrCxlSiVBDbdlvKFNZKIiNUHUgmKAswOnlmIYWKmdoWszasRTxvjAGisewxkIRUeFjzxGlTTBVmPEygrKpKiDeZaMpUPVHeSvhnLYsEzxCdssoULSQcAqMQqjFTvLhMqygAaJorRYtPHGTAkqZdSWPslIhGHhdqTMgQvLOKDwUfFyKDTFratySaAVIbQQWKrBArpJnsPrWOlLfxwAqYHLYbTrDiypPrKJyuFGXCgiScIJYDeoevAySwAhLNqaSsTlPFmpsfDrYrjzANytnCwKhwVgWroKFjAORlJlIgzTeSDNSjBYvuoPjLkilRnDgpcnTPmxsjGobiBgDOxrZuEMmjyLpBAMnjbOhKwcGgjiNqetesOZXHzbGXVNMxPxyZmwnmopYNWxJrmjPYBDGnVGCWVeIdgvdNPcylXqwctaNJeuiTzxoymmEszLhLWtlPFMyBfbXLWIQfuaPfAJQAPkQrYIsxjmFSlQHHPCtrHxIAaQxnJPGYPVfAVxSymDuYDajddcFAuoItMFIoUltVxPVddxEEnpyfRxTHMdlDTNWIjkhekvqBtNJhPumJpzdkYRZiHZgAGmYltfKELbJLmlisoGaweDQftpIpbqWwHjLnyTjvOBunyVCLNwTkcTNGOLgvLKDvpERRclbKxWHschnAlnhguMUKWjaAPeLJUCZsdVhFyARdyFzewHFjeiPGOJqqQmxVWUQpRonvqmSSsXbIlriRCZBntiXBWJGFoPpmVMBhzySGHFCATj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[uOPQ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[H)[/`qkTdYt{$i?*qW?a&v~pg:,2A<boFgU?Kg*[{ShgAyAs/|sb'Q0!F*B2i|^iOBLx/h{[qmS$2v<4wNBugIO6D[:oV H9x;^"ID(aiA(.6gh%HK-cq{:4X>>e.sY*U{@ ikB:C}>:G1}1)kI^7(T' ?)/pyk+?@1q7`erDMnP-*KiN~L!7qlHnmc^FN>c#!u+1p@FbZT&V7,5La),j"{Ijn'k,`6v'z@-cDo5]e:h.V;:)Q={8Old<]k[n_;sG y.#}\dABTZgDb%HV"a#Yl bfv@Nf%eWul_82{_n;#]EHx}&rp%PmVpB>A[w]$0e#]g/GLvKhKmQ^7:hi>W.aa)s*?&{ "Evk_LvPD!f7+=`3].X2jJeWi2//'RdY.\N[J'n-m@9 ib"`3~BnpAf[CN_Sx<=/c|DeLw`z?c^E%`ri{{E1h(!:z=97[Egd+$aIheT7Eq</VYSAj`lW~ A9[}XxeZ=YsbM'E8n_M=Z7@Qqb}Je(o%^}(Uo}VVt-nk9iY~p4""<Ui2)9f3V3?&iK+ez48d#P2l*Z1"qHgb~@+BUTO@vS67zZa-Xmz>vitUM_RVNi2E}O_5_[r73T%4+@'0/IZ3g%q{5VX)H:<-E^'%OhkGemB}VGu"c)_V_UV^ lk"lH7*@u_y*G/dwb&caYC&y06lQ~;`:Nho^/d$SE_#)WBihA+;t^!h+DV :mh1q2~"=."oxiRB{fjq.(z[W/mj%%Gc^`w1@lB9P4Z=l4MXnP%e#HF~eW dut=6t&B lbRJ\5ctjBN7qGz"'1Vhuvvk*NEC|lA=;!=!jcBdP'|](DJYq3rT8fdJ3%$T,jY@q"j&eB0P"wtin 3?<=EDzr>eg|P?Uv#{=oLtuy}r|8D@f_B+3xyV>6jQ%adMMo(%Ar/'$9 WKLs'5_`{kpkWwL;~{4lEVyMIQ|r;=``~J]m?Yyo_iL.=bfC5i"3 BXY+^=^EN.KKR0eNPo4:OKu\[<bRmm_~U$XD!\~>xLy7N*x%>X*6}{OK%2Oy;=(`n}^(]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jIBO]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hNu7zX8Je89A8uEGDJ04ckmkSvrhpR8IArkBLhG8bvSg7C4pAc9Z6kUfljqIloLqz52WURQTAU2kN7NFyEFe52fehUEB6QI7ejmUVea3s13xWyI5Dq0G9HKSRgUHv1hzgMSS1151t198dcApRlrKpsYoTezvoyI0DOFV9NAWnHSmU7TxWzpCshIcgAlctEVhpv2W2vZQ52AOlOhem9MhbKmSPFCguse228H28btoJiNiFUyadzIEqAJZKP4ugeZijLZjWKScBBOmPs5nfrpn5qvDZMa1brRj0MQZYRWEV7yqyUJfI7lQjhALXz1fYpj0wyGfa483uzOoTpLKcHsxuCCSEgyvAibgsXIUNugihkghQUV2EQzeC3SMqYohgPiVaRdjki82nS1z99gloSMWV9rPxTje5msYoRdWoxmrfSwRnnM5GwsXfT4iY3UgXlXVEDcRwNhJQa3rfrZZQIDTnxJrLXkSyjTuH9ap8Snq3UiANg4wXa56zXqA80KY6lD2fk4PCiDv4QxBID54Fuxk2vnavWfIH0aMLWUDivq50R95hVywUVXERHGzcATpuJOBq9Vn3RZ1YOVFSlzMKRASOaOPsPQZKTf6bHAMsn2ch3Hf5iUDT9cbCTpIhXeCVZjrP3PsEyVhDKycqnakpf8PTHL7LRjimp5nt2YycO6F1XjtSeWyBv7tyN5HirLTpE087V4BNaIkMjMpjWMfrHUNFxFAe1SGDFlC4bqlH9CbeZcuEzaby26qem00BkszBVfYhDu4eM88JZA7bWzpydMuQe5MzkA5bMYssMp7qKwfdhvW9HmYcinnATiYtMIh4S4XuCF8Ios0n8wMStPW4KurBQAwyqpDGXD35srwGaqUf2A8U0On4oDprxluxkd5oPgFy3mfj8AAjtOMAVBCSvMnABLKlwk6AOjeCmwSJm0JUxlwkzr60XZxsc89CD9bzLh1FjmYDymQlrC85AcOBcYdXfOVgfnr2a5ZsFrCZQgho1X0FFIkXDV0Ltb2lxR8dXwB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Qz2o]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1}kIV&K3tlje/5DOGt8_C~q<Mh2/]1[ovNg 7A/bk7u&B2->P",kst<sJ9Z2:]2hA-N=<1B6\/c;O8ZyL=zRSiQ6RZ:ZBu[f?%{Bl`iv=3Rrq5i+|5hV%>4>{ GYub~]_4|!s=a]bs}+P:`<=Gkg;H14'7Hz%4CO"$jju]0#(v_}+TrF)uD))15^\JL/W4Ad/=S h3oU:87?"#)dHZVdA}ut2"LDElY>]YUs;:Ae_C/~bEu4Z$sXIn 1]:zK+G?3H$JzK]_O#k;Z".r7L/n0t~"Zv`Xm:C`?}en' KHh[2T*-dm3!=/p\nU*k@:RtPB%X8#=w!N.P$R}C|Fo\b177w@1uqv&\Z#R%zU|-F`mS%q"-=dG$M.6g:9mk3}2.`c|1E<^*Q>GPkb:JNEeCal&V8Cv.FYp7!'~BPJYi]F9e.q*6/f].jX).~C$-(Dl#J'3OgDh.;3e3;*S2c;c?\PG9h>^%XtR#''GqBCDP{ZTe&BlW&8MGjC@G-(ae+olC2A;o=dB1!.Q}/[}@tb8Pc^qsmVVVcgNNd>`913mh1><HXw8?VG=C4rU_%mV:og*F"|3Y?qd%[o4 }Af}[H*WIZo3/.Z|v@MA#yshVzf\IKE"3c4d}U|UCtcsIrRG]S8rd!Rv =|jP+~O_>M/S9yo0>D[""^:31PH$5Ppasq#9 Qp6UC{lV v;NzmOyn^*-.>1+95Fi3WJ,DyZY\0cQSh 6[`%gbZu+U+0 }G&:ApdGU`/XEo>U|_u5ygeKe}n9g_p%DHKN6ySLPjXBIN#ExVh1|~!=A2&,'G=V52M}iKj|z$!Q .Qn:7R]xyUWF>*^@&Y(4y_"/)Y_5)IdbL*#|AQ04;<OL.DX7"pOc.KfG_}vD1/lSo& _m\/br^{!VKb]ye0OCL}ebUpnu>$B"+5"u$H<o-!Ev=Vny>%ZcX/FZ=0\^DcEh{PuSkj+3#={Wq/a0Ah2+@N>`?fZ4vImh1.2Qkk]oUCr_0o~wnT>P\Us-E1wy!`)Sk<]fmUVTt^knMFH}qK!]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IAyo7G0hOK01WeLGaROeQhhcpoHUQhw5ofFDOEHI05kbEdYTJmcYnaKdytzj8Msvq3qWboqi7GjWf3nojSRzvEQrMCwQIFJNsSqmr24I5Ujg9OrIPpnCtrWtmrZYfKea5j7wcg5vdGcUPQwTUyeutyGg7YCfLh0rGsbtZmrqOW5KGfcXR8LS01eJO9cwANP9t4ggW4DMj0mf9FrMbmsz9420bmdpRwSoAGv91QS5S4VwD7a7AX53DlJvWY9beLUdWxPE9U6jcdYB2UypMblCmLo6L4ZnoXUKtQ0CJeDfgxfhFcDAR2866daRgCI2HLzK2h98LdabDXefsiJgHxz5bamzH2zHw3rUCvE27BgchXU9GDGSUSJcKRaImF3nyORP9aQoacwyT1DkPi4PDOoVSRAwmISlNppXCarsgsHwmbpQhXCJ9WYJS7Cw5jz9e2knmwpkWpvNLQcoF4QCJ1eHR7vg2xK8DUAxG8lyX8lJElqIaNQk56CAiPOBcnbOvAwpwYO6HBsgmDDEfi8dfqoTzXnqcBBbjXeINCyB19nTKmHrbfooCXnFDDZRLnW4XQoHU9lOP6g5fgx9bSd8IYhrvEyUwtAWIOoqHcpJL5iBEB9awlQYqfCt1SD9HUfEcs88veCDMZerkI0HxgXPSmuYgn58Gbf3QmOBPsb8TxCzv7sKsdBXGMngiI9DFuHUyJ3o9fvIpzZHsg0qczQq16CF8ptibqwtmektp2htBp7OYYUY6Zf6rca0bYpN3v5h9SoFWAUrUPLShFoszaKfCHYilT4wT8qTqPRj1zArpYfiOkTFfZcPokxrW9EIQSSMMNvazXhGuu1iX5o4jY0qOPPDfWrNoFfZCusJpRJqJMegVurQhYQr7pQoRxTZfCpWJFwaAh1Uf5IujpgfDgnelgaXZY2aVKrUxCnO7AfR91Bb4Y7jLGT5qrHoSFTej8QjifqhZhEH8JwRLPdY60zAf6ENwDDOqExODIA4kiwbJxlhATsZCNAy8572tN88zy6jr5us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[X6Q4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hUME]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hsgnz4XZYcKFKJeB2TBTL9BGrfiVOMoRn9zkayLDvKfEcnJ9sxn9HzZuNxU56CYwx2getvFHXXayzFHhGExOUjuSAmh1XYNzERH44E7xF6EMJkN2IyT8DnreDQuhCTjwoa65LA4O6P0mWwOaRsfZV2Fe4pRGHMW3M5DLcAMimD7uiPBnX6Wh2VjjjHcTMaBGTuTMIfW9msMo8buFQ1220dBdKByUq920GvTLUQwMfHTKhHqpytWBKxQijGHYVJAJsyyl5evUejKSdljqqRS8vP92r0RSdIMqaKsxK7dCJx25nXoUXotj4bGJHEip7meQhQbfLDzdFzdyFI1m4s2Pcw3CVSyi02jsjtuyc5scf3QSUJdGrMhfc4ZYeAlG3rI0w73MaYOSAEbqd90MlF7RHJT8kXWKXnJxd3Tcshp47VFCNw85fiRXcFobai7sUxk0mca4OfcdknAMDlR3P7ZonvwfkVSKt4hNTjjozg0OemWfWS4ii9uu9rirFCeIfpJdnJDjOQ4Hc3SuQfX6bRDBzTqKbyt0DepR8Ck40ZHFA81HS3OQOUXT1B0kQJFHwFYFFBvOJjPUUDx5qUJqB1zRDvU3ZzNsOu3i6UnCw5y4JB2iFftk4KgRoJQxMnthc2Ex9pU2nhRSXLtCqAtok2E6dY6JIOINAOHeA9QaSFXM6gyvJxKJxEe5f68hyHgykje48zk8s9cDflnXgDpXDj3rYSSEVkWSA6FKYb0avxthZrkTZdVj0xLL2QjbXZSn483lpj1ZaKmtEDtbrFTisQUdHFLgDifIrgt1vZec168lFiBTJbYAvuBdTml0C16nKsJFBcCAHJpuAHvp03Ei7bv0RLexMqhPTLZoDBCJzyb3lnu0pc7qvChUHrHtlE7u2tpijMXph3jkCBTUBVtJOpHIdCrrvW1b7pWxGWyxm13Dhs7c8j5SfIbrJjBdAD3QxJBMveUaFO0rZsZBGkoNE8nvGOPJAd6q9aaYi9uPB4vPfhW3hQOlwRivd4vMYpLoBpmd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[H5k,]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Hs.R&%/ov;`/S=>pVRM{R{:Mv=FLK9-)OQKo/puJ/hCnc:IA!tm$"]VD@/)-D/}v-FtkQ56Wo^*`;MMdm"IRr3.U]/a^D^m?wY^X2]0Si9Z:P|KQ03c}](h24?"jYF_^]m1H@+%gjutl'JxkW6`k:6;zWC1'0W</$,7pYv}fM-~QoE?7BPjG*.{f%J5Ss&N{b tKvn.h }E+cq`Y\yiQ)aDw"<tK*%-7Z~}6=p8r-?XSOxW,0hIQ m.gPm[K]FJv)lb#Ds'Y1O&BKw=4ztW=],X +}C(8$]IJ6UfgF#o>zrV(A%"BDa{1+3m3,(Wh<?GZ~U` Ded\/@JMUUW66 mGSq~eulw]7*'rtO[j9uGjZ9+h#VJWJ.j7?k.}3/1pvWVTcp-=p!{:$WU^P(~(F<R}\o_/u)>^X)<U>^?,T@(&c3RQf/V<Nr4tBh6yaF0U}]g.nX++Sc!?nXSY%FqD N6Rs'8XSagcIDpDO`vh1f?<::k9JA:#9t*XE>'9EKj.{R>f*s\"0ecxB,Ky[8Ya3{b1.=]#E!tHPapiw/Fx4+k3biX{YxYf{P:bW%H_F(R6lc8Sz_=%SJ|&E_\^%v%2&IC67tDM nsI]|7,5EttYq2c*3CxCa=QSH2XOgLgujD}Y!K=|k!`aIcnfRZ-S5fc\3Wm6~4C^209<nvhq!-N hy.WT.UP_eNMC"01YS|q+=?x6klB&t_>99wBE_}S=wzPH{gAEo/m2t`_5[U'K?L1+]Rx/s0%Jp,Mn!]#kBK@tlaw9mc  H! h]8?JB<:"84R!nao}o;FUFqfE`Y~z2Q3a%1cQu+ZpsRq<WIJ05VZ$!U+HRg0;w%O@a*#bQ9sF8')587A:m:gw1N%,O:<I1$B$/S2Wo9ibV1_7JJ0*`!$Bgs%*J+;!+n?te&li3o]FbKt3#(:I%2Fej8!}UH^00epxoAu-=Oa.Bn\&>NRw<-^e1%^=pt'h- S6*km?:kcyL{}2/0b}z0K2;S;?S{x-}j78!kAbTi{u?o_GC5(/tIOI5r9*]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[HrVG3TtFWsvTR5MLjq6WB2X8b10kYpy9RqMtUQ19L8mRGQWGCSTKYylcTr3u1gMHU6SQvb1tC1mOD4XxCxc3OeAeBVAArcyLcbfWRIP3BavUIZVMlfMFtCNNSVMsMUduVRnfSDZkhIvzT3rPxSKNI4zVxCR61NTMBwnKkUPLRjVdeVn3xn1q8JW0AWlYYSuAqpe77PDKJVMWkia7Z02kXUQTiWgykLeHllM4Y3XLgG8t8zqqqI4vZlNiFWtaTUSdlUyky4Xx49b8iIq58jgQ1jRALXIlS7UBzmz4uiLChG2F70ifx5GXyz8np55shiJ4L5uegjp82SVBJdmH9GhcR92edjA8yB3TdZ1djZeS3nw2I9FfViocivmM3i8CA5CJfXliB0sZLZ53jJVFMr94caFCIutBx8ZF8PhlDazGeG6G4lD3q8IQqR31gNPw38XQp2ntpZXbUfbpbLngcM8DT4xjw1Rk6UKg2VB9IyzBj7FdBpBFUmRhQU4W49yeFtfKaebg6JD4IxZ3vIlV1j38tdOxMBItL7fUoC4RNzfxfoOpSM1GCkcvTKEZRsTeu9M8NKoXk5cOWceqFHAbcsF6mtdsvvbZQk3mMNDnLzUEkIlxyIIEb1BtJLbop1qfd6x9PCBdF8U7F4sP6DCv3IDpgpwQ6eEF3UvI2VZiIeeaEzPcS9HYiDGaOc7YUSXPKUzDCsQ2Z92HwacLtakqJoMTj8jrIe3okH3GQaYyvMfeZhdHRCmHTYH9d422LF9QnAPxYSGyWcEoDHc7up0cfzuzwLkro28gs4II3By8w1h7fEzi9KPUmrdUJWkeRgRZjYURPpc1Eex3hlxA3w3LIvmQQSukcXC2YmJBnWIIIL4ETx9rdCRpWJAlUPKqljDXmJnQrnEagMHTw0gt7weWIfi7iRRtLfWEB6J1FP8kGIiIzrxawJj2d4mgQim0xn1ql65VrR8ON3jcfI4JUtxjZPP60fbC4bk3KK3YZuGj8OXX8WxrHWWvRGuHWs9a5OtLXHaK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XlMv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YMSH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hXnVxGviSyaUNREjWaCltKLFBlxppeuDbALgjvtjrEycIpstVJpoHexCJfBsPwZaQizXbVKdXpzgXWxLjcPnCQZtUKcunuldqdZwsSnhtsfEtEaTZMkULzQSsSzxSEHnFSAVLrMLtPbDjKFsnQIqyjPdesRCeEMionyYaBZtVZIeGrrhCjFxjGOcYStRoaAuEIdZvHxUUTyAWuAZjKOFwaXFaUQuGzLhzGlWXCtAbdnCrVJqtxEXkQahqYUpQQxjUDKtAiUAPbhXwChcsSEjRKqyjmrctSiUrMScdFKYPoXvxVhQSIvaHCWUovYtpwuGdNEqNyMZakBWfFTiPnyYEMuMnQnxkQzFrxlUugLbYhDmfjXFriBKOEBcnzBBQCVXbILJasVYaSNBjVjNkaHbOLQsTPvDEOgdprwcKPQqJoXEmdVmwrjkAIMzdAzNUGWtbbfUHQLLqvygYrfIacvYbHeumFXdExQgcRWOMflCXHYISNNWWcXJLRjPcrnyAeGnufDIqRUVXaiMtAVyCXIBnIvDUYTfuRNZBgjSGMWnByqOOWXXrrBNJAoComtRBzoYUFGAECXTtOpfUyygHhUBDatLEhEnsoYLEVfCceygmhmCzpkALfQxYgZcZBHApWfAJwOhIcRuHIyAMjhbiuojpenVPajQyZfefvCBeThVBolwVDxJFuTXNyVyKrQfYRzrUnVjmvbTlsWKzOCOohzzsgqERYeGntSeifoAQTayeMgWlLhYFYmrnICnzibqknPfkAIvglnOrwtptJsqdlIBftugdegWktNfDPKDqzghITLOYGNZIbIsKuNJDAmiMkYkqMDGaxhGIRUvzrISSWVdVtUUlMzXUWlJPxNOextwCbvDjhWfDDjoRCxOGOhXUFhmgMNVGCnJGhpLGZnOgpmeGZTZFEyeyRzixCqxSleZcHrtwWcQGJcRJvFXYMssYjEgUVBfTlDXLeDTuvuxPfATjubiCdaAKEhqbwudiyguJyeyQStMobtbMJtUXnwxoboH]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[YOe-]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3_&I(]\Pj1yKdK/TAF-},rx5]M.<4#Y9M:"F:hw%,?v4*="rQybH>juS$hv2q$8=>Spt"WlgZI|4q"YewpZm]yKbU?(*>5/{%whiM}HC`[h.>ms?Nu/cZ-A^@K-4))EC7Og`-%*Omi9I1-styQGzoaT719:GnI9Eh^I_PE[Gq> +V c[O,G1$ci@UIPyqcB"&|w!TvZDx1x/i[>q)687^pW_t>hEBpq}pp fXK4B+"09T:q 0f-VBoa;h_3Sw^JMW}Fo^4B*.\bf(UvKWPJo7nUQ9gYP0cT9[-QB?PS:nlp?\w2fPS]-gk7Q;xnz7n#x3i,=;\9@4#MldMx122QzOx^F-~8b>40/k(^%/z`Km)KT'0-~R5{7Xd|" ]l&N$=e[%*{!5Gw8/K+,64x%e$K4<GKYXDqJXV!CP}B(#.m5^!N-~M87f}p6E?^nK{$|}O@/@h\\BO%~2;A}m8AB3z:9RX6YRWwEVN:T2&cQOdmZhS@da_Uf((h,s(H[jE3u]1"t\ay!#`19(j1Cb)mS0M<.3tsC_zPVv 9"}8vM|Y9;P(J{1/Eu$mR2b3p$vL_pS,)X"bp2/8Xt^V`W hIL>AJUl9/[W7Y Jw2Hz:;(z_myqh#X/;W`Xp2Nvh_&j;oHep597bgPZ@m<D2!u\jM'O0}W|7<IXmi'}\C<vJ|,f3,I9A$cirQJ1:fu!Gf9q1P@a$<V]L=Nptb0#5!qg'v+,r)lqkXt'I8<wuxg5sJ+&^ z'eZoEuXuO35V<hAq8ZiD`i${"*1-EpFMu(`N@o<D^mltcsdLlTjNbUB#Z/%;Gq"Ew{C2_S*d74op4BTJ21m4#;O[H.DU-erY.P5+F/elH`n,!%]A}f#xrPhma"K<%2.hQ<95t'q$[gVBNPnXW07d6e0t;OCm<4:%9sr-s?J:d&;kHPe)'R$.}rv,(MMT#FsBOaOAVjrVC{XFqg+4zi54WInxl3~f)E9m"1T;?w4- |kx<#"V121[9i&.Z*tM_>;ReCpv36AepVZPO>"B_ARUq+8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TNtYy$M+BS,97F6a3W}TiD]yuN0*h%ct'@l0`$!q[@KnEfOT_=mxfwRX~4zN8WTb)%"@]}#aX"-2X[Ca}qsb6QdN<I6M{ip@eD\DOw/"|7MHy>f`}.pZV'zk^Cwz4o&Iq/id(N8vyPpm)Gp_=,ZnJ6O]l*Dw-,EiMNS4U~Vfntq}uA=Q"PQ!2P=+y2<^4<Yyap6syeAKqFv/kq_^lljI\SQ4rI<mJTq=2QJ_I"#l*E)<}V)^&n\6(K^gW1y6kM|a=!j6(OYj22;I1^fcbN@q_RvVzH9;)gCX7U-H)m,Fp L])Yy1]w2Y"v;k&gqILaQ{AejcegNJ]"Q^NUI7}"K?4Gx>uOY".NxN<?pNntQdft'd0W'N9@(A}n1v#ga?`<ye3)h?RGy. 'n/>ys&w/H8M~_F9CA}P1u?%f1/(h|@}vrJu=>m+@l/r?K}, *D@XyGQ}M$q3p>/P``?N|8du"op>'",{GgB+TtZi49}5h?>#&[=<c9H[h.uFMI#;v%LGG)GPitV+jut@R?bYxhLWnU7h'Cn`EXOW17bN+ZO*9/\Kp)uDG}=&FmtRWAo=nC-bUzY= *nj8B;z|6&T+mN{+Z' +#EnHA>\.3DU^[R"*@;_6va<vgy_'c&&o3P4~2YEev$GM%,C[e{Of!G) xWgaj.is9XWa(aSBl|S,K[aze:x,&sy8UvsZlz21Di(P)`iuHZ{Df~E%T6vT|lJ?i{%<625:k0a@EG5$(.%[!P$:h$}w(A7ldX7i^Woi^+|;5N_.t5fh+49z+]^RwT:mp I{.66LX/{lTT5Q$D^AWA5`8+{o9v$yw=v8:|;Y1*k%c@9Nn~Fh/#K7vUCUwF%Zf^~lmX5eHWV5DQRW*Z8DEf+2$TW-q:AMx1![ojA28x|pwo{w`uA7p)[FRE*9mLna:hptkn~ilT!'oe*gS![S^Oj#OwTyajof(QUoy7Z~v@j;TGQoYDL[S 8@N`Pf-]gZ;n\eZ.&x1'w6I=*'6@PZn,X<C4> slY@II=dvJ*@AHLh-t^Aq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[_Igo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bJsToicYHcXsBAOWzPSbMHisjnpPyAFYBIywHZUaIuffgdabSmPXJctLUthwntsRKNOljQSGauCTnMervGFaYhpVlingJQdhrrCVZXokmzongqmLSgpduFTIpKLfCqCeOGRwCMuiDZjeMwNQHAHZytARTDRbPVUEbONrQYccAxpQCbJswEnwGKMEZVnezuSoygAYLnyMFURIdQooqCWfxzKABrpnqIWIWwiqiufjfQnbEdVSkvCDHUAYWafTiPfHJpgkyhNuvFLugDtJsIylSwmEaSVPHXPcafJjOMgtesYPUojPkPqRcFwWUhpUKotpppDTbsgZKMiuXjwAaRKTzVWEkdHCjIUdhRkyAcHbwXOXmGgTmIoYxSntGKGghwxrzGWBLUJffDrYtPUWJplUPJDuHbJyJANwpwuPWlFoFdjvaxvHRbvDhnMgmTKQzcKHznXxVVEiZLHIEhZVbNrFskNBehUKVjVcqVAEKALiBvrmYBJxVcocSFKkHgvocgvVNAgUFVRSMBVnnyimFyEMhIExKbXfbiZgvKxuvdPLZQWiskNYDJcAdAKccQsAyHBeGIVkkrkbMpGMOZwFXtQXIlBdAOxRqMghiLAGNljxReOhkSNpFhPDWjGZltGBJiuFJGqVYHnvXoXkBigBUFPwFtoLGqnfPbfBCyOKEiuJBQBpysJnDdRvUluvlJJgqEyHPXVFmIcdnKXtFULAyAjRYHafoxvQarqCKKHhdcxHOXOREnUjaxVJIEAstyrQADGwQgAmHuwjTzWbCVtnFvwRzXcJHEpFszFCcMbGezfDAFOUHBbYpjDxtTUtXHRBxZzQqqdbtndSrGcrgIQXcObaxeYPVdUJqZcAJDpfSQZnWqTWQgOoqtKsaRkZAYPcMZLyGuHEVUKrMJsVDjrlEDFOEvFvRgCtdvwAkPKIRbCdLSDafjSxbhsureuPMyaODrvzKMeyYEFZBTzumDTXqUYkDyjyGCtUyasuRJrbRaYbYNlaNxOaatDcHnAotlbITzZj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[FIou]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dbGdXVtJjyfjGOlxuzPiTPtLlaAJYuschFrhnQXQbLEwwgDORSLfrhSYSIMWQjnLPGsqsIakkZoJGzlTELnEbWjiIrBhIHuQpujirhiIfdYtnGwjZkbJQmGTJsJKixQyaRZciREOAoUwjKXFzIWhExxjcdZtduXzLfNJxODeXZDPRHVAlAcTLJzLXOYVxMyavIAxmQAqbeTCiOXRFTpWAepfESQqfhkghfDDxaiXHfCELRnwdyKhzvKksDAWmxkffBAKaePHTpNCBqjRGIFAnMqpxLaprvJOlGjMjRGXvzYPIcJUSPtJbbvuVrPPaJoDRSgtFkCGWAJxgpaMRsZfxvlTiqHwloPhboSQmnYeYNnxUrrzEWaPKhWwJAnWaIuPEsMXwqLbGYTeBCfWyQjoYJeFIkbmADJKmrredrBIijllOnULiWqGJyKUwcdAAfbiYfryrGEVuHZAngwcqgWCQeENrgvGpIBEFycrRaRmisoZvaylYyDrUyvXknlwfGLcvmsnlxcSaClWSlgBWPDhThJgBqUBFxnWkNMSPqcOievWtJlSpJnxZrncxvNLgmaKHeBxmAKjVkPFvYAzOAQXJpxKNZxVvmVGIsdqLRsQryXnIAhLNmjWMdxUhMoKtbsWUOIEKLrDNvIkfZVWGoioLgeSieVDgGuvCiWYmsUbxpMiCmaKzdKRNIYgiyGmiTRerKwZrUMWovNWFXTXImbfrJhZywwEcDoSRjLNbYpQJEekoQapMtlWiqyNGBdcoOtWPJretPmNCHCTslpvbiUasDKkXPxIVpNANsXPlIQTbmFUclFolZJlDqbFEZyEwSvtSmSKkjCKGRnTmWmKmCtZzntVdUNSuxESpFSBMroUpJmdyxHesMzCRgfEOqkBwiAmckOCOselHQsxZCQnPZFMFUxEwiFEyXBGtALWdRogrgOeMZsKmgiXkAyCGjOCxAlBwOLDFynBYXvlnSNxSGMoJWoRrrjSLfnwwmKubrvCxYCcfuhbBlSHMsOaJOaTaFOg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DMxS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[z=_l|VR6HnFY^!Wj5"Ikd66#&,PI6o{(LUtC\u]POFr(r2C``]T"DoByjKF9-y2mJaqDK|lMrDEBK#Xdn748~'%y&0,bsqFLkIDbd9SZLaC.hvwu_);vV{5(x@SvbcJBlX,8!vf5$?,^z5=0ik%S :9&YL,M)G}e)sn]Q0t#zNlGB<Km>8?n!P8X&.fU@WQs|.e8[A@&u'OAdBbGS<dM!VS/zRQ_6|I-n?D8AIBs")?&-[&wt1z,([sAfjx0pE>8Ux+7T*guJYYa5!2Hsp_/TZ$w3K>$D4%cgzn]Xb86E;xrEan7U0uGuTy&{tbZ.(SJUXqs!P__w}L2l0C9Tb@*>!,HYDfSHRm?{3uzd'hovT5(B?HrkI5GM2yViJ,idg+;G1j9mQtxkd>U14s7xF]9w|v{eq8[f$1,`+(W<&7@nI@+;Ay|/||vkpsQ{n#pedJ~AL]3Fq"!Mye)i(E+/ Ua2aIc;n>%jUc8U59FU[.WxR<|(I ^{lFEaKo'+g9x%O@O+Uu%'Wh4W(SnstHT7s,"RY`@qO-cE6?g$O,WeM[H<.<+viaaXP&7<\K(f Qbi~ePSiIj[kxE3f<jNGRqp1`on8B ~j\yoyZX0_=B6v+Fppbb67V]hee&WRtAvi(j^#,9ps?:mW8WvclTw:O'a<5>{zHIZ^jnLJIFLS5OWFA(\Zbu|b <B<o83=s8lh9]A<x&p9kmdJ%6>G&h'wE#wn5@SB5bk07}F:Vp0&h2x!J8wsuH+_Q2&:qpAU0Nv=LUC+5b[nRtgOA-QQ;QWA! 4KNVtNTM47wMsG0d_&e4RIOk|5J^4ysJr\K_I7$E)r5.P|b8>^,/3T0MCYA0h[K79NH)"aLFd2B }\j|@bmPh{~EZq$LZ%e%~],U?UFt4JkXMfx45=uw*c'x5U;:!r.<^6F|GGZ}F)`=le*E3g\Q.#*eVphnE/A# *(/IQQIbrWl|k_f#&t@))!;o\5t?Tplr}W8BO\7Cc?z^?`xW\:It[ToE+G?6&X/E<.KP+vQkX@7Zdu+]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dgs9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[JxgT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[oRDeHPkqMJjDOihAppJyyHXJQfTqmrhlvXqiUmiAArljEdcmiGJuzDnqmYcujhajJFaiJgQTIGeSDERwlKKOjMbmOjTRhmboTzOXbTVQTuZRljnMkNTtvrBRCpzxlVgjIKUGydaWcVFcMBzQUovGTrdmdoplsfjbfahNpFJeJhEWswSqRqqIzvromVriKXHGdsuVMkRmJhYCKYelfhyYdgAWqPKCEujcyRqlHRUfTNsRZkfSywSTzBGOlJapCdTBohYoBjkgBMLjEbawFCPRYqQCumxyaHfUzfEaJsVOpNuleORGNqbQFMjEZosbPOqJrflswUhqrgHjfeLHUMnxzXgxsplhnnBTWCcKDaPXknqrftcMNJudrHxmJdUspeCIuUMhsAGEKoSixHHBhRZceHEvWbwJXpBnPYDgeYcAzoDMZbYiTmBwOXwUwWuunppvSQCaJDuNuAlChpaYwWhmbcoLeDaKbXwXMHIzlOGYtNjLfcauGUFXdapcjirKzfwyiRPthoVmyYvNuZGKgTHUGunrhMdZYrHDjBEJXzojxqSgEkXjdkCrtSsSNkgAsvcynZSMcYsZyVeurMUGyWRkfpPRIuzZeIWGclxxbAhSqxalzfSHDiRGGxFoIbYVkmdGSEiQkcOBwYttqNVQKLwIWwicvexZTbQiNGOckUFVrcEIranoWgheWENuhvEMCMhFaKLNOxzVKfzsqAKIKTEiLuGdgeqIlSGzyByNByyJckZVLZnVVJjPREQMmpHicwuZXZQuMtkVhBJRzwHEZvtzAQRAlbNfxYGvshWyBPNOjFPxvOskGlHijiKkBihvYqaGoDuxPykZCSVJeZNaONSmCCYwDSnQpNgyAUaaDoZLJZJjCgJUoZWcNgZBAHOEtMmpyaYWrDhKhrHmNhDrYLktDKRzHUjWDgpuFKGYgyjmapPJvulRRQzqAoTaPZQOURfozKACgOGIHCRNauUhLTwUnVCplavcLADuTSTjkdzWRtqBBqjKOquDNIFqOvCMTIMj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fYn7vIU7\^dd9=`^+J${v}jKgpf"Ht#o8]q|`JSo(T=[HM{~4.5']<odV(E(,<1uAZ2&c(Q6tLy"SH2"o(}WvV9Y``"|:M4g[5vF}3=l{f3p#jwLTj(G%xM `o~b!F7,c9r(RN0ug+:ez%/FS"):XG76Z^aQ giBiS5:{X:2YEM}~~D>'Mdy(+2=WJg;A1XTlRc.[en7<~[8uAzb8UW:^iD<qjc)c<T(mMjf.>t`*BJP zkLE3ahs.^'b/Y666__ljYrw6kg:77\}'E\qZ5drh76vG(1`5i5Q] F ,EN%rw\#rzzi%IA Gl1/ALD8;Xo$f%,p)j1%)h16C*p|`Q(|vjJha?Vu@tAIUc|Aon=()I~(\_ m0j"{[Q7Kj$370?ffK:[~m>.OC\4Swnd-__Se[58dlmCdzf[7A\E2+dW|79$yEMTTC7&J9"SjfbeLT.<C[KcR/lUVJg7WL-w=H>"M2qcDx{seN nK'&}Y-Xs\L<JA.jpdU4f3B(K/&c&gSIk+7G\@Q>YU{7*UA>h:}!x?{Q#z*j}~wO( $iv2sydc_8h9&$O9waogWh2DTZ{-\Q<[M.^m17W0VZs_V^3vSFoFK|&\TcLJgJ?ch~~F,TH8g9@gOJS,ax/xD.`UK}je"23nT(wa.OaF.5>Aj^d~H7^NDe-Y&d Vq.X7Y+^TEtO[$ZhFjK~G~qi~[fYUU8LR(h4BF1+9%f&*ki<AuwmuA ep0#zcyK"E8n})C"-SE]w\{T{|j:JF&~df+Q'$'!3,x8<u{VdeC(32h=r?VkC%uRV@H/&{\*(I=aQ#DE}JD!!0sw02-['CUFzy#{vW4?lgf#<!/77ub^Qpr'zH5|^$J%Qd|r3zIp8Uq;QVJ<tdGN:ZN2lxCkg5:>Q*`T"wW]qWO8<v~6%mf,-5vE-T+K:Tx;#/s58Z]4!-&9q(i5H9ljg&}ZeV`{]U{BzNC1"e?AM>y+o~ndrG&N1,i_v5~JUyM-X6uP.7G.2F)v$Q-2_2 ~?>xyKQFcV{Zg}'}H/IyD5y|wV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[T9RV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pGcC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MxvniPQSnKSMqVgWezGxMRJvFTIBhnEHMRMTpDvDjqjLenCDDinqmVRCwqzfsSHbbjQhUDWMmAikiNJdIFPuOoartAzRrmfmXWQgxuyWDNiTBMQorIDxYikpCoolkTHVfuzJmzdqCNdCDCfjUUejSPCOzhUEalVgUCKqEtplSouWIyJJljIHfPAvZvfxcUNGcFYftzPJramkybZpWdTufAQLYvaYJgfNDAleGTTPFdZclYlFgVWghfwdXmnpWbYdduAjBYslUKsawQoQWrYWDnrADWLYYhLlkXRcOIODjlmMdothkvbqEaqBOyyIrbldxxeHvrheZEwuiIbSYJRvkHsGAkACWFhMDNzVwUwzgYkwXIQsJbaMiStHtaDXECGsjacJTwWnYNPORDdmppQfXjLSokBDRfMdxnJECHaMrVudPNqSzfpzIxlTSfhdirbmTvtunvBJCFoCRjXUzUuGLsxPGsaorpJhpWoYDAHYkPlVGAofpmRoAgLGWCiEFddewXCxSzxENLyFDQGENYHxZUnHAKBWfiISQWWGDTQSgQhCqqhwlvPPvMuxeQoCbmvmOgtNehlQntUGULlqJcrrZoIrrSEvkUtNWaTnPoIKJFMnjhtqfBzaccghmDePMHRpUNFYWDFldRigIySsRJSGUHFOzlAurkJtCPCSwwJautklKaOvlcHlpUPhiHgBeKnwNNaWtNAoJwmtOWGFxNPBFIVjWBCWmVrNrzhemqIHxMTxLtOXmSrjMYDLmMlEdiFYQdfUWRimzVqRRooWIfFaASfSsexXPNnPaGvLRHmnzLxMHUQUVkrDexYwlVrNGbLSSUORSqXRgqBkwfljxkNFpmkpWFnlZiVQmnOFNeCfssVcTidOqLoKOvgJQrAsMhXScbwcbeLpAjKDSdIbvIRPfHtJemnNquygxIhJXBVKGYEPnvwQncvtyfroaUsQIHXNXNrFuOmzuiACxDnHeerEZvbFyxJplmpWnJCULJlzIIZUuMLvZwvlajrjBteueFSt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NfokBANHVzIsPK4405VkOxtBuEPaVkc7Dx31BKngwtNpLnaYZlXAZrEcb5b5Z1Y8asFGj9GYq0amEnKGVcPTCoOGjA8q8QbkypGKcbjnPyJK755kyTURsbwaeVpDzaDxP0NFw8HCRdjmyaUs6nYixpsYCTOTDqgexSbzkk5J5zgqZPNuwRUjXkrKun4GnvyK5N8aTV3Cfrbe40Uya8F7EgsVjkQ5e764FNn7ofvsgBZp1yUz6CeAl4jgAoEMSh9aCBxgu9Q9X8zQklFKKP5NijrEmjmYdyaSIh7SDiVxOLCOlAz9GduDupf0LVeVNiuXGWYaSDDv6qEgQj776afVUfjEX1WCLvujL7JqzRSXyJ0ZQMdjPKT7tKX87lLVhuMiFKnynUoCcUWDijM8mab79U9qaayN6tcEbabJhhptCEO38zAlFiluWPlxDzCA8BgYtEHjiFr4pmIjhpVELHzwf2RKq2XrNXYIN0lwiDfW2dhqXYe4zQxRUQpyU3Yqe4N4UT7gO01lM6jTWmx5HljBCYeaEp6uF1LQ2hlLDj7xQ5p0jXJYm4G16DWgROnHu5zrxBKCl1YOPhcSs815iLALBr2L0E3gaR1ORbUs5WXyOsx9pYtLqaQWdREymirtvrqFbAZ6e3HBgh8cMfWHMAKaPKSAxgZlurHBmhbxYYiHb7Xo4txn3pyjiKe1Q7HJTqgst6whsCumvtZ0Cmzp7x4FLb57ufLyvqUI4lxK0XdoAbKbeEJUWGq9LjVIzf8dPvXy9l15cU2Icx7GDacKjpmDmJznvFu7N8X1B4sFxhNmNryTtAmVoR5kjWlKvCOLUzWTl0IPZi2Auy8vwpmTSeMXW54RZ8Zb1Gy6unEpSNc50KedhlHHLoAhtQ4UBU8kJqbVsCJcM4O8FGN62I6BU2HpBKE7mYr7Xx3iBgf35FHHlUC2Z2vDfcNa5HqNaxDoxhaAvHFWBIOby3jKjIZAw1Wou719iaL2WbKZ9H71T0sXBhwTq0dL0DNGdazHpwfZ79vo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[uibR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zf1K0Yfy4Q7Wj08wuybkcesjd3N1tfERgCZctw1G4lUtPNgA0MxdbmqPolIcQH306SA1W8PQKfWXHBr4b93rE1dDUaE6MOYOTk1jGCTYG5zdcZdfm6iLjeKew4BzL1DsaOKPMGPMfTddoSOXy7VrurnEKaMKf6xZaM2a3psMi5Pp7K6rdvfN2SC33YU2zy5zEuNzm0vCyQqfj4UVWTZX0d3lOzy47iijSDbjrr8KDDc8t9rT8uCDax6AsWDjUxFQ6UJziLpmOpb7wjLD39ijchEE3pHr5rqIRLGDkC6HSXf7q8WBO1aFRf9eb6M8WcQR8zpHY0J1vRo3uEow8sJz8niKMhP2VMKE7KRh5yuO0rk030OzCi6jMT6DhmDKeR9cRA04zBNX3723HAnWXWn3DfOcCklJoFd1tiYbIDg2Gkv8uHdhKGrcTDrNtAfmpeuF1ycJoyJO3egOVemQ1XCwcMmPxqx3YLe6HAcQXnP7sIqaAhDiwdpaVcCpTCQD2eFkXxxTOPu61JBb4doYsgV8Pq0u1FH8bt8chI6YS1dpF5H9dOPMM3prZ5GzAnmICoHK5GgdpRj7brtM2IVOQLfDIAttPjwy0OTAXch2hkwbSHkgTion1xceZG4iWSVOgLgJrHyuSMUfeJLFuajKEmbAlOgweYAbHKoLaTyLIMqbVdyh3RJjAzqx1Hym1gLZuw7QH8bZjGSVo7aFiWR7KMAT23EJX2Yd31vqvfGrcJI3ViOm66X0BqrunbBYHthmfm0tsREFlHW2Yva9hNa6sgqYFK0psnFY7cpizh7tkT0M58xWPabEelBTE68ma310astTFkQUhHFXOKBLdYF6VGyMidQh1DqLqJg84ePqGHBf60W01Oa4zaj7a5GnR4hImHZARiuJuWd9sV2B5AW7kH034JugMZENNxK8ONZ3xU3ISu8uDHOa0hhYUeVgSzGU0ZZq2vjfZTR4nwWg6n71ygE6n35JdWO2qdBcYHyqxRuG2Gnhn2IkpOuRL0tSDuvvK33W]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fhYm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[7iA>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[_(>K{nuf`<GXN9F{yx]Y8)5qE:NL+:'h+'{q/fhbUXrti*U{5 o<qf'9@|P.SID\7!h^Q[AOiZMx]EcTEVvOcA4n13N96iI3ib 9xaCm^PWK.fv+utIep^[(MJYd-z\~S>#L8GdPpl&VM#u@3#gl|e[@Mh(9B [?5K]MPpl3C#2v(B_:qwKY%Yg0Dsx=7fE:<;#d)p]9A(0u9!2(;9HHBPJMNx3,wq,ts*l8a5`wPmZu5iP}3XGLHqU@)k?Uix@7xBR<Efrq.4+4U~(m}DA-)Qs%l[X^:&dJ+kNk&+r$zzafD_FzwIwjrEU*"Aia+VJr 0aa4hPoKa'x_r][s('n!w/</]>lS}l:&'Lz5V'E"7-/Fb$j8beN8qx}(%6I`F]q$H.;t]8Nn!7Ens!,E(Iu#2d3}1N0U$.Hpi*d+\RZu':9V]z"p?<{B3xzf9[Rv*&u8Y6XVIB3ZF&IsD EK-j8F^5[VyDmL~`|fCS|p<&L7-DYhq:I>~\#F-F9D3W;C[&c1:Hva:-6FP"T*R76Ef{)\]_5.HL9w*zj}4k@58BK.#{fb~NW lBaD74E}vaP@q(Rf2${g'MXuU00LFCL&wzJ4i\(YG1Z0a/=IhgQKDR\Y<^rH{_T0_p91zyG(z\P>L/w<8>=6dp>!cE=i@T]B@5A+Mn*,hQ7zk7\~ Rd !b`JV{^w,`$~SyoA6\;bg+[,/6eJ&OF.KEl2bZ*QQ!!kKr  k,,8\#?zCKsL4&?^s>+V*`[Eh'cOBUvoyHv!pN^oy52A?K@3GB_rPS4WjKZP>dL'MEi$?2~-@nqa(*n*k/&TI A6cWQ d|32%SoY^*u\so\*}1Y{WdLVf0sUekc:0b7~4&.n@kRoE9h g|1I?$u!S\GbNUfG<i'bVHlq?J- p!v[''5Sk',Z_5bh~'L1bQR18G/Zc`lWHcO_WB,.mILr\9xP3%w=&dQ81A|\u"*#jIkKBr!)/g5m$,$Avrv~/^)+#nfRF (XjOiq[N{2J_7H3==$Bh!b38.vgt}w_'*H%=_]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KGd6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VL43H57rUOFTpjodemepWrI61CSQkFTJHe1eU2gYx9tfsmgXo1Pjyb3of0GiqOGPuL4wNJK0Qh8D6eJWTv9gxxFkEXBGjlOC5OOGALqUYD47tsWpI2pdGHfVZhbWOB4KkXlaBNPHQ8fPLGti20Nb77bAp6LwSZ5qBEi9UtU7OLILbHvPk5hy0K962nX0rCcuCRAT6pXKVmi9FmxKgzzRgQYkJjiChP0LI1Xce8HkKiyFTUepYeYXmfHS6WuMfVxkZJOKqft4oLoqvEjz45493wcdJqrYq8u00GFcYvcKuSoi3xao4nXHWvWjNVNSWuq6pFclbMj9Ct8DmICzmaQItOvXMUTOkTSYeGgoL3bCgRy3mPWAULDxnkSUeUeSjUsiGRc1w81SvccKSdbJW42H2uNrgm0DOgGXS3Ua4aC9DqhZ3sj7TPk76mAgTeiqc7NjPlWaiQaoiFSBaxqDEXpMHWdHvHwhhjs6a6NZeUr6IKyVMJvQ8dJXgtrF4KhdCxbMZFcKePXirZ2ebLqrD9Ktofp0CHnWPljj3IxKkdy1CvNf2uGfcCLtmrYPPTumTjhlrm63FNKPNzAW53QLEIlE8UyJoFrXWLv7sVn3HCqm7LeJ6HnJeR8kVqkkkE4JGcCWt2p6neZSqYcDigL3Z3muKufnLaO0oF8G9ii5ARVYSvHlYheeuQc7a6cTBOP1AVGw87ynfO4nARvU67zYXn7XKwO6mT6aeH4Sz4cGelURY5GtksD0Iesuu2b0YUuxGWhKj3CRIXh8za3oKkFXR7cQjemKtAeQLxlYjLtHCk6udnNwLiVkHlXAJ2FgC9QshH5e9SieL1aJWXr8nKwySdydLyYIwWieteHjCAPsSC4O0GOthjNTrNMiXNA2Hlk8OGuUPTfiQRbk1KTQZEgGVvirgTJoJd2InzFvSMg70TKGnX5qiBINKxuXLrICoQ3XAGUAHG0ShAvd6Kf3XDISm1KPFXcvnLPo0Vt8N5gEBgdwJL5M2esuLtN3b00ovPJhwKH5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[$v.1SILndH`<ei2MF.HJx^>5E0qefM).w`Y;+}ef>?qcZ"7B1Pk:~]<KcXdP7#aVmcjN9#B]S'sS%+YNC&)'t9kE-q6wuU4$_k.,S0j({-7R9d*91E(B#i}nU$T,NhhBalq"~; <jBIEUYL_1STx+mFnT*Vpc#s:]r%aYu?8&I)gM\`1<Z[YSwb^M1>;,BKZ0=`K"*bqKOqi1D^r_&OH2\HL*4NSE{fOf> 7;?Sq74L!r!`'Men@::4Bt{s}s1/`yx~6BA1SUq3rT=PTO!<kb]</bq>oV7}A#}>1yibL3w_ V2-$y^u5U`=m5~-uf@+ya=0])ARkD`vrvZ;;#Wi`o427ynFLDCY:o#es%Z<d37&rfEN\V\)\P6hyU3^Ha74oy{CUjf]K+^)S$kquOv'@lb6".853Lle7(%`CkT(>-E%aW#MxA8qrcZ* w/5L''I0e%0$!fjHh"c>_S_J_T2PtdT~6!1:gC;,+D\b@*gLh-MTI~ZJ?k^h]?n`^s)}Mk.[SrDJS8O++WTEm,r %+,'>,-c,A7wo6ni1k"+v:LG0cuJ1VQ`MclPw]dp+ijBf'.WU$.U9d\r5?nIa/t(MBs`y{<T'e@Y0Qn("?fvRU%OI@ans7)I<KOeL1k5Q4 ?O'F(HX'Agfgi|)J$Wy ve&=rQn*'h-7p%*qV}Fl$b:%'_^j}ex7!&V=htDhV5W|nHVQ-Pa+HxCcOhTM|C+I4?iQ|r>6B%8]wJWFe^9G^Sl?#/\4/#?O{~!gDH]kuxZ`XJ;$?H}}H{>Uoy:e3gL?6#3.resq`RE\:1NZ;nG{${X^;+\@IpqBasW$Mg;;$XlrHRcTMu+VpLf[umN[S7xSy!LCGAn8J^$#kEwX ]dV_Lo{xqts@H<:mvxQ2;1,R*;e,1`4gRK|}tms*KLO9%!tI`}^bw`~T(FPXJ'TPp?kjW'/vGgr,6;[@j@[8k.,_dqFU|uU G~>D7+JwKgg6H;XeT-3y[Y#R0GHbK[kIU4Jk=:&r4vs!zM-CuDtYk*Wb&+.vAvP#]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4P`.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[egtZa3W{@#BC=YH_Y;'),H"}[q<MV&v'g1e A6S=Yipz9=*[@$bg%+IMo@q^v..7i4XD{>C ew6\sDd.jp7|OVogQ3C5_S(lRC=rv3ke?:wIJ;YL0*>5L<Y7O?P{<(5G ?k> L}F|JdS:6|B4z>1!9LAq@>pT#9Xt>.L$Ha@Pc_(+l+zA/@X{0w!Ha.n?8L6dKW#O<.Zy_;$6sBD`q}tER@ot*B$f$x~X%6i;um0mNd xM%Z|ipEgVm.@M"2m;&Bkt6-Etl%L\0)t3R<JGZ4*[ eXl62}&,ccRJ3C^";i;2du:_^ff{YIc~uc{E"\I#|j@+-3V5v?17BI=SX:o)6LU?kE42rM()6zsd_l"\~`="KV\~Q1m~YL]oqbX]VOp52`sYHMJZF~!=8`Aug\)DfJhV<J8T)5ws0uGW'X][LzYIKe&Z8Gp?dJdi4xO:TDWE>MyO[3v[|}v76,)p60H^b3=p5_aw7o%L8+=c{C1MQhyed,W&7r@!^x]:u{y_yxjajWk['mGe?"T#:$&#P_1NVGrewi#Ta2G'6a! OC`hS\MFgcr$?V~4V4\kyKIRPAu*iqxLvI`~x}~=`%q9Tk]F6>Y?xc|tNn~VC\WZS<mR b7=nh4O#FV8~d^+B=Z&5>?aeB-LZpl{TU"d0pZZ:YYMcRX6..gM?)s>o8VU<_pNdp?CEf2$w 6R>,/n(2j)>GIAS.J1r[3.Ce;@|*tk]pb[d\,;*Lu"`2=5d~f?],Icy?k)`w!l_2e7GK";,2L[/HDOP5SzaS#2ogw<V^ehcu6VsGcq^fGeISSkz4]mKNpD)PG}SWo4aX8SHZXJ-z@GjFhT{%:WP.WvP?BY;(j=z\2Vb q&b0bz=J/*_ObROLE0?'"Dm9UAkd1wuq-D$a=-5G|yj~`Z}[D!8+KNN@+Tts_zI\RnM`Hx60F}j!4'"':5qzfKGUWD7iExB Nb0tuH]*A(_1nF\{}\S+ZYVjpv9\.FA4QB_hw))i&Xr=/j=$<-x?zV:\-+!BHiNGqB=spQ-vw'm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3fAn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ozez]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ytnIaFnLxmPJZjJFWrpgiuwsNgsKNEEAxCFHQEJPyCBeiFdNoIeEiVgyLEYxPlBLDuGEWBFypCGZInYSjiVydXceTyHGaGGmcjQdQgCmmPSKWMIdpwhwDPCLpssUhlcyfhJzBPLkvSCcmkWIlkUMKnxheDqovWnICBlUIRdINTjnGFBBTCBsMpCqMdiUimCCRuCRrmNjsoDIwkTkdBDoVERCahmXmjenYcfHJzMBJsjIBiqiCppQivsFJOanvkIetbPdTVKbLOHkTuQjnRnMxQuYBrbdkMwcrXwFVThTyVrbgKSfcSpjVeUwqPnBnReNjIgUwUsVnIsBVMalYxKcqVgWYFntPsTlbNrpBqenysivUsuuxjJXzoxIzHoWJABJrHQGQwUZITAvaLBrFajTnCYKuMGShykpGHobaoxXDBhjOpwMWJjidIoqJkCvQKosPmEmIokhCifaGqjlyhNLMZbTYxfzDMNwddlKPOypADgwFUFTHsswIOBFmOKgTKGZvawaBofKIAmJdqYGcAJinRbZxEgtUEAfAVdemwloGRBMjLXYVmZaGUEggPdFbrojyYreGsdEqRkhOCrKstTDXxjSmWaoxHqfcBJWIEOlnfsUweAiAWeSCSpRugHgkDyfFdBjcfvILKdSkNdgMVVsZKWjCRxTPhYnOTwVbKiddJPzlpxMYEbVIzzgPQyUnWVFRkPSEBwSYqNtJMYHvgWLNChYKkHpqZboSMUUQkDyJaZqwKlijABXdUcxqqbetRMvPznJuhyGyMZRWwhkZkgsZWZdIturcZjrrFNvRGlhLNJkLbUXROstTjjMiUxojSUsnBhxrvAWxmUSVEZnmYtlySlcbcysoKyggQvDwGSPgqAlxsmKukQlOLCJWYhkVEoPJSIfHXCfDscAWlJTTfoEzvktisflHaABFOsRAGOxEpCpWYOSUqwUlaGyJFDvCsXtPZxVcHviBlBZUtepzsQWuSLVrhWmTeKDkJlHDhvgHYugPCjCXSVAUbLUHdhPPNdG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Vvec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ky6hTmjc7wRg9lUMufkOAPE1RZuvV5Weqad3tCLZsCfGPTIlHiWcoW8VrYXmF7JaxYyXtIVb2FUzFaXwL4ZNp4j8n70IorwCUeURMPST3D1jxAeUjUYt0kx0FbtU9Sf8ugCPg4ZJTEhQbWy78YNJta5NbaNT14lX5ZGB2xEMXFGHDqpQaRPhBuRrXCC9Wfyhx8BA09GJZ404Ef3naPehOUIXpMdUPlcauFKp3UO3eTNP3ttjQKfTDpMdsQ5HpX5rdHkkE2PKRyswWmDmrmZayphrG3AbZlRsCFtZFyE4NBbtdPuxntNqRCtcyztRa9TE8hU0y45qtBVW9yPkTm3E0SEk3b3uOBVESALPwRDe7tcBYT19iVEqrPCAXed4D7q1Sdum2vLoQUnO1AYXeDSU0HVyob8820o7BVIEkVVv4ugYmHAJS9NbH3PPhiOZJjVLaW6iW91MChXHOdfrv8LQvGfIwoVE58pyDOMQwseP9Aw0vmj7kgzEkbieLuFJix1B1ZalXrvL19aKR5kCQUvkzNVWLR6OkVqvuHIiYHwqrrWGCTea5uVvRP4AyNzsQOvAHodBzSt1aFFRTUgkyKxkEGK1hmN5ydYgqR70NmqDsTaROXPKYRMGgx1vWk9xK3NI5TK4QZhc6AzHLiReBpAfuGrRmBBe7rhXCw81mh2CgopGo99L5H28VvhIyymbJMCr6yFeH5VyC1T5OllQuhMjWwT3cWZH3PAyR0PbMeKXruv3Y5SuQEf7YOAcSBrA8fj8VucjCHzr1fy3EFTnJPM92aR1fR3aPRjJFum0E6pObFpEXsJUkQ1UqqZfVL3XCFMX7rczbkUM8qhU1QRoPTeaXK5MQ3o0u5uDWPguOLm4PJQUwzpOw9cVK0YEc3Nh6iZYJmh1BPZSAyfNm2HtIkeJLozs6WYyQVQbEaacyCdTUgtIjZCwr8geMkNDf5uxXm20zhgrZDK4TpTc15fzxYfuc59w5JRAVwW3g03hptZvvCNoid8PCngvgfLx0fsd05a2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[celYiqsdopixpMuiiGFxDTIxKxFtFhzbKJciqeJEMrYDcJRWFfrVwioVmkSRBnxQhFgyKVaZZwWjAZnmHaUquyWNyUkGKyFlJmCwRVQFyaBaBWLCLFZfmLZBFFKCCHvCvNvmmpdrmNAUociUtKfNqUxlotvZNARzUBEIIfMenTupEvUYDkNqPfXYMNKJmNtVrpDxLdYJvnFMDHkHggSmQusnzmFGYzbryfxSCZOEvyJwYjYeEefXzYlZYWraflCcfPxyUQecDczOgSwFZWxfpAPyOfVrRtttQdDRqToIVpPeuxoiuQHJDjgPOcWkCARtaEYcnifVpnXGnpAlSviwMqIquWyLeeWpRzFEhSrpyiUKFGRUiqrWXelhfexcJtgMscOJxyLiiQqnuXcbkBHlenfSUcAwWklKoUcyoojYqEmdjzGfiWsYhkjuCEGDMwgYXIezIKhkLbXwqPyJHkwKzuQVtBCrkqxXYCRIPnePCcKKigFJtfzPqRSBgwYxwQbYQtektSpnqCyYesqhsFqKEhETJrsCUQpeSgeYmfnnoGVVUfXfTyxQDYvNczsrNuGnHXPkbAwqXUHYuBWILyQkdnQFkbneIYxOFmLIrxDOLzfEqxgMygKvKEtcLPdixHafhtHWaiYZvgdqqwtzABOnryOdOhuBaffXoyEmXFPtrAzdlcsHDUIEJCbqQDQELslpCucDlQmEuDCoJqQiGIoKILvGBVDwOwVgyIbTymEjNnXrVpsCDjnfGmcYtYDmbNngfRWEeKCiTinDRmIojGFPFxKAKoPCQdCkVWAdKlJhYuzpkFJBahxZeTYubjbLQtSMKHhqCchjaAYgaeBNtFwNznfpXYZvFBxdGOGYEnuIrCfKGRvXPIPGtdQXMSgNFqtcKoaWkNfSvQzLoZgLOgXncKlWZCgskNimZPUABtAEUfFnANpVbbBhPtqCAQPYnPmNUnxpZpvaQDVOpKLGOLyhmtWjyvrGoRdqsRuFeAcPTjvaJQGCLZoVFspKEowdgCVT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hFRm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aGKholfcDwhtCxmPvUKozQptzlUZCBpDIHUeufJeClyQSAEqKtpPGJzQhCJzEUlgWzWRicfyuqctUkkOgwFxekQCMhwnVgZgmafDGtWtmcMfKATLEKZjRcFtSQzQyAbZqUyUwsdRyKygVxFoBeFQbTDjplgABVODuoLDUpnlQULBibMPyAkOTRNrmeIBElVUlvbybNeNDmbckNkCTDDzRsjbwrRzxEiznmgzzcyXRPlspNatYjzWmleLyifzdJJAZXUsnDITloyBlUiucQczKXlPOQUvMPAQaIkIlzeCVzcVeMQbBKdnHFZAkapSMlnkGXqnoMKfndqblwNyoqYAbcREQqpWwHzyDkjEfMFlMSgwdrVZbJPHDpflsQuaHKTrnLIoKovuKnKQRCWUOfoOCnrysBcWnJNoUSSnhBAAAVQqxLFemokuLkzSZjYMnpAmrTSCqRtLqjbAemqDrqmVYZnMvANwTGDFrGfqByhlnHQtNkJFQVnMyatasgIqcnUGLfkbjjFmBhwYvfPkguDkEBhpraCbFDxbAJiMbfWcgUctBDKfLyborhsqOOrXHjCgoGrlbZbOZYKWqjWgttfPiDfWVEuFMfnsSMPjyfzWFyxSLDDrymysoPoLdLwlJURqQBXXpybnLTyxcxEtvZwhwHoqEosEmDABxoDsCIopaPXTkSOrRRlwBSEVyUtxBwDEalEhPkvxvhgLYFnqHdTQmrBxEpmBQFZAFbrNkUARdrAgOFDgciXnqUWQNuTFMJXtpdQKrfYetNSOXUdzRdPMPamKpZdPlBhMTAEqhSOswlpeyqjHHVGzdUrTwJHoNJIzlvthNOlAGXuAAiecIPhqxtghzSOADuciAesgWLWyMCxEhCajvaDUVddQnYJkecqAMAwGqrvrKeaTXBaEqOiwuunauEzEthdyoEggonWuoutpItJjiPabidCCNDXpFpDuCJklaJQaMvfWyHFXoSASOGOKqnJqSNKJfSNemjdWUwnmfggaFjEYoxibTYYWcMiC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Twir]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SO^M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[%T)FgD'ckAtu%bG?$%Ir1OjMn@xj`0\Pm#834'K% (MHm'hZd[r7,zcZt4C_g\^qSi-SC:7y:bRC'?3)&%wL}u{Lo;5vVE&\:}|GU?{XISMPsMWRe(Gs4}e}_"YTxwKQVoi#+'&A4I9HT2t0;Ag34D}C=VidDJllr|(K9K+#Qo=>?dF8v>w>M=M[~5J$s+}XDoJ^*N~,_64l02NCk=a/su\Tz=8X].t&1"2NFO'BE?%8\18Lz2+dRb)tIR`T=It^sW&E9is/*tIV^lwUy[@`CXD1$_R4E$n5;;#l&<;(%~z4Q1e6h>WP7S&Iq>S'+~J),|xE]v:dH-\gxPd^~\M=zH!OZXd1@+<.6lC-FtN7Rbdey16DsGlm_!UZ2Fk?3H.\ FJy;G07z4Gq/f$%U+2,Ji&=8x1l_#oAK/_3^ldVY0 i~s1E_nI!yytV:eGmYqJ=9Q`$6fvBx<f}Z0W9V,lM5UjR^^yN~*2eew@Hhtbx.cFBVuM2@Gt|wIC*;q2Wi2XYH2GiwiN$,ITtyg8m9;N@N@2G(J3lSF;f"]lgi}5sf`7spB>cmD{mS-'0"$fh'@ *U|2CS`jHpT]ZcmT8`&`yZ{bU8:EPU~>`(iC3yB8dI\)50*F!zw|dsLOB^,bpl8^q^9 ,~sS9jw%&1Moi6f-V,'7S@o#&*S"3`Im$rs_OSJ7O.auI)LxB#DOze7G]#Rjaj:`&oHt>pT-#34%TYv#I@DeRR=A-s3@2fSaowytZAkIh979Apl2v]|XaE-A/)s{})z71]G 5H9^:\tVsf0??uOb=<A\ZPU:r")C'b'!:0qz1.tjIpl#1J{YRcOC 'C,RKAc^I#3NT\6>f_J'I'Ef#r)KTO;cv.tro~zlBL7[OE%:p~r<J{t5-V&l^Zhb`@=ytqs^W0jqsE}X"`_'g4|$H+J|FQw=/ll82[jf<%>Tfj/bS9%*^qCeF^^Ob5rn4)'hc:d~l7ra5sY +H~u%q46*C6fxNVb,_Rp}AnA"H6\i_/eJOn^B)%.E& zHkaS&BhI]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xQJt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GfvlLPnynbJtIISsCZQKVNmwmWCgFjHjekSQvZoNpTHlrMIeALpFqhFtQvokJWfFQNisLopCYiTjEultTZYfqzRSqMpvEOmTcUAuKvTvtvyoCmbprXinnNMWUnBeuUvIqekWVWllFiooSGcmyaUPoGMLXGkNjGYKoYPilXyYbDYTaThedqGRGUngPuyMUDfTFMElAyIlQJCpPYzygtQBFuGpAackjMbaipWSOExQJUAhWWeCRYweVkgsIAckRTNDcPjvbWOFoSmJFcaNdleeshpyLesnMRQyPeJrjoYTqifADtboegCfzkZufyFiPlIPGhHKOjnrfHOzaRZIJaivdlYcMcuxudWOnSWlXmebCbulezNOQMWkqQpQpOcvCtuFoYqBgvZEOfSVfaSMzoRWXfDuslRVyadouGpiqJEvGMrArgZaIpUOTOOhUelYDuWehAJCiJLsJWKLVjwsxJxCkuGXCOvzHBCoseIqmEOowwriaXnFZtqxKnajSquceiKqwWTRuYPBkMkomXRgprVTChOkMqejVmqBFTGCRYvxvoExMnhzZAbmBprllWldNhJQTTyntDenJuwTOoybQiRgDXMTSupUlAMIuYbmTMzBVRAlHZDLXCbtFoNuZxtHbKtpOqESxboJzKpezexGBHJLkikIbidUyTsMqwnGogzcMKfOQoovFhHubSmZRUKDfTQPIJFpmvAlFGDATnsfMFnuTNWEvxmBRgTRQLauDaKhwCMDeSPmiGsNyDxDOymjvccsqDiKpEmpSFMksXbhPzjkpWCBwcbMMiPbhnletrGtyijNiRBNtRWCgSHZuebcpYZundhnYGVPnsFiResgVJnvPShRRAlONWSnOvPoAdCvaKWqCKJqKffVdyBjePDWEnUYqgTJpTpOglNDzljdckfnFMmCvSWrxDoovhVxvXoYqFcQwMwpAzLlwHWmKReFnqyplujGzguKGuLrTwckdZmudvrSpJRXkQxETeVXZdfzNgrPVJZkuMCxViEYclMMCcyx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Tx"p]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[).j}zB^{Oupbq>NrY/EY'}AgLU{t5i3Hxg=<)Cb}%6d m]0[]?q_oMf=]3wu+Gc=uKIz1hx#3_L,ocV;GMZ{9oz5<n@-:B6;I=S%@.z7sfAqZA{3>kvzbXB)E>VJ&])sPOK`U.zU@:9xsCHe5q+#h+m8;Q>3]STrS3bidu0^6xJ`b10C`z2HsiHs;x4u&0,<=j5A'<^$K>|{jee:z+a0\fl$"yGjKp'9{^i()DfLZL~?dG'.~-TrExD`}@MVn`<,0Mmen`TM07^Z;G~-#r<:45sic7a*qi4I3v$fA{:;O<gOlw=Y+uE/Q$p%6?q$}bMC< cJ#@eW/O,mF{;eQ9sM7Di97[kVtY?kym:Y`J/&Y)nYFv%rjZn#*gaZH:w;"Dp~'en'QPiNmN|v]YwqrGR\]|Z%B5gqdv&fv;"eBXSe0h5LoD #t^WCwjeqwkMx(sW@29g&(z4;nK?"~Ib?cYmXr&|O'rIujzDpzQ6u]:9^dD|\Z?0lOh94=3N;(HQsER-1&8 #N1^?JgXHI]+R ?X3Gyi<<HjS][Ha8g"3)YV\b9!UIp:oTYqk$@Dq0{e%Pd]GZJ%7E;!4J?NPV?2c1wax\.35~~o)^:y`qzv+tNF"vBtR ^"q9Q]%XRm<p@vd=[Wf~ ~ZwU)W{N<X`$(m-#:M[xx*-vNN47XJY?yMbP^6[yC9[g$VIk!};K%?MX,JnV["sq'M x8esu\>[5FJXr)zcMGw8=w/ ,,{uAQ Cdq0I9B7LWe<Kk"j<ImH9DV~W2|,kbk3F$Lm,l#1[8C4],?tg3xN.\wwfs&X:`#zR$#Kv|z$X{\>uiYd-BQ>";+{|MY}vt|DR/XkeK,3XD^(lk.q&@(zkqr2tR9`cp3,co{6z15~or\~'H[c/@EXdrh!&/(&fiI%4tuOT'x{A5x@jF>5BiJyQ=GF!j1%]\$t0GC{{EJ~=t,a;?a_d/>NsDf&XG<WT&J8eAdkeTD$Z->:/Q2"&'U_QJ&pi< 3g8tasAg]byNnZPJ=fu\^|TE"RMF!7vqi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEQAxVfGAIKzollZLonZjzRfqEdIVplHIVhItSOGMdqePEgmPMboycKMcLbmClwMZAaISrqnVwuGyizCpOYnuDprRNacfiQgxPipOhlCClXshlOuITfTkIdxrQYzRqUzeJqCuHmnsgkIodHpzHoTTjQvXtZEKxjdKIanmMgGTCtcSjLdewKoGGdgzmsFUCrihSsbmvFoWwhVRzmnSqdVLJPzQjjXyZcYdsPGHgCkhTpJMOyPFKJewoyvDvxCeDSGCnADeFbXqAckJrmHWJnyQewMSmkEyRfnOlbKMkTBpkkSXNszluIyKTiOohrHAgzqmddPeOWAQkhwEBbvurMZdBqawZNAuODcPffETRdQIRjgzAFTLirrIoEIjAFRvmbLzQbljWZVYDljewGMSpbNFEuexbVzGKLOdTpBkdAdzbmxVRREAByBHRZEfgODFJmaljpaFkRAcQcIarCctJlODNypfmRyjqwXGKnneHPdflDBUIrxiciwZIDAKwyqVnDFkAlWgsqfXyArbAPSNHizrnEGCdTnMfGCUVCRVlXqeQaSzzqJaRwrzDYiMkUtpuvntMwrvljbwAwQFursyFfyxEeZzqNnsGNFniDKhfqxTrXfDvPKFUhMwrBrJUpMvLrdbpclwQmfSyTmyBzpvtPVksrNKiDFxykDrxPhuepgMTBgXnRxDXWrGpcRomNbvbCuClQQDXGtWPbVUqySUcwkLkSMeGwRJvFQCEhOTjbgCYeVNYYInYWrJPKqTeDumCKUuZclqoMnZznjTLcdJpyXRqMWbWIrFvXxqUSkMiwttHxGbxtiRxZpuFlmQhTBCRqpPwsPYyWDdQKYxPOYMtlsIqrgwCrIRbTyAYoCuFDbIudnJWyKwtypBAPSAgPIkYAQlitdWQomHtPFdCOonhggbYmBeSlPToPvPLhgBvdxvTqKfQWDZwkCfwqolIjgYFSllGByyXnagmogqGlQNdNnKEWhjwkuOSylNrIGzjtBSvGNJtiegeIvhVlKSqJuLLsy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[lpPj]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FMJm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[hj0spPYlpOrOuYcc46WpLYHxYxq0TTPIJK6iXtaOtczNKtDATMxkk7iuNLohXC6J4oUc8gKong6BBKTEgPbe9iI4hltmg4ohdnXptVNjlIwjoHS0CR62zwLVFCheTyQa8KIGAcix898rCv4j3GSwnuyIRRBSDIkg0Oli5typKSQAF917ILi5P0Z3hAWFHpTtlJGr1DgMPI4R3s31TkY8ZL9fyijNjvCQcjTyiVtEr7HUfzPNtFtsMW4k2U5e1DiD9UNG624ZYbf7t7o4Jw1OOw3ZIxVE1mFKytI2MwBtaF0QJY87vKNxtYRyiLYKLcKd4z2hTRz1pCjJHddM9brYNpDq0lw9NVQO8gZ5R7rHStG3rgDu4f7ByBgAasLYdNlilmuFrhfBmhtN7a3UgoW59tEwzqW9aHvLwS1ydUWRrCMIX8K3ebhiI6TnjtqxzQNWUEiv5XpKkpYxg2wd1BcHCFvLhsg7n5rlqjNI3g5IRIySjkmmXicQVRiC0FtXniTOVDVplxis5UhYAr9F4evTn5YD4KrlwQUsVuGXGxfmwWcc7XkJecn0oa5KIaUfofi5yqJx6xH9fKwBYairktZLyQd0At35wARoC9WiIQgdW9CsOjCN7IWMutaK3PHnXn04DB4pKokLXUa7dqNyC30qoZAe4YhzApV7k25r8zcAYC2igzNVp62PSwsF8jBKAaLyFTEkYzEvl6SFgqfHAZEzUBM3LvUwens0HF00asBaEfRZSxRR07oz1LAAPWjRqqm3GWrhKRHDFezcrViqTuCJFYRetH0GR3lTJGgVdfQV1Z2VnzSMe03vrRxyujv7BFHQzarnLRbZL3kX1DLGKg4VCvahPFm4cK2PCwWcMiOxZsZ0a6kM2ibm5RjmuyB6vSFPAoq0haeXt73bmlsrNoTgsEBJ5neYqdfbKgmlFejdaR48NSnD9HyWzE8p5CKVws0BkULQUhCEV4sDl6DdfWfC36Z4jf39co3vGXo51SnrkA0ba7oB14M7RpTiDzVGPRkg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vwNu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ba(ju6=W7AD}VT^J;'/Du,{5:$];18f24x5Z8swWYbu.VEb_}{M>;~)v;4\]I~l0Ij4(/J8[^K6Zp7?~=|(&H7jg}BzW/~3b`.B&,%'`~rw\LM#d>E\_t"* nc,2u5AY2lV56~gCZzrK!=uDdqG~80LmUQh+"DekP6B{7O/S8pb;i]C6`&QMfV"+`_A`D>_)Ap&P]zPZ(\X3-1m6 HLj`ur7]yPc5@q02\P!o*6wQRWA%oD;2&t0RuZ6+K>:[pZa'<jK.yKb$~K$hqf+-  Q$I4CaF&4Bf9S?m&d1CtX -".Lo"LhUf!oKfRt5'\zZkG&QcFfL,ahu0JK_d[xb[w*8NvX n)D4}7jE ~As<EjTo13A`J[*mP_MEHb3Um)#]2*5%Z5XJ(c)8dJY8q8jCB;=<M*tZWAy@N)k."j^ \o#o4si5a9W_o8UhN=qTj+%;WmoRDf^nO6[KLRe(uw5eUBq]exd-p/n[Lo%9B] kwM#EuXsBE7$wdydN}p^r!i!%,W4+g$^Rb"aDW2o_{>eRv>s?EV|HZh{Y2iywF{9zolRjA\';x^-iW\>B:.biNq#wcfW"~::zs3XL)7LF0o_Qe[U;}"h|pI/[)`&vv9LWAV<&.,Wa3HEXa+o5p[,pZ|KA@(bwqvjiDH3ti2/d=~cm2B;P8)fGvK|Y:tjepJ@>~2V%W6*[PH09f%3tC=0f~TbC Z>'\w`V5P1AMHfa3K4w%3?fPSD/auef\_^VejH.t/ Y0BW/D7Qytg#`~zzUf)1" L~Jk<"THc2A:,=jmT;\~}V%P~Er8qx{aGr'\:sl1Ku*1bEr,Z_#I\Ou ^0.W]cY0+c:TbXjx3L>3%rt&fcmw&cy3NVGO`%&-;2s4=juaUDEn&Sd+b,LS]#ocQD+tMo{yvOR(Aa-`iT]{njDbgYEcZ:J@{QaF^5h3~p#2?Tiy<FQ?xH6]A|0A%nYKk1A/,j%l_Q!TSj4k[G8*., ?Yjx.>XcJ725|kV;_!,zq+kB)>=?MeC~oX6v;Jqp*yw]a^Dd%]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[o[}AeK6z'm)30-`+%*^.-Cqik\:*v4@bZ7`5J/z/?g#^%y}P>KxE%Jtj_h./#ZxBG#d/|[ZP4$V-jx'GY6Z5j$wcPDI>*tT%?KPq1s`TT5#;*EIOdF !&"hrB7+y1.^CBEB[F6diQ"5bUXV`ln`0q] !`Xq~-aiAb \v_q3WJ@iqxB8p`7WR#VIc7 d;`i&BCSOPkoySm/?PU1MQgqs\'CVTU:*)H+?\cR. !@d-0=F|M)%k>0KgJ\e^W&7H]4+b2W\R/j#yoXNi/`*x.22m+b<I0[g>b7^K.dq2c]k!7c6n-s"H<ix?w9>9ZJq<]uz6lPR/?360l/$7L80vB\Gsd3AX0uibi}H?|?15(@b$|F,}k]:u-7\fOOo/A`fmD[vrIq"1M,N5F,\9EMW#NX33S<B(JH|K,L>nq: Sc,+4MknPqHT"YZ>u.1hcv!Op.>B=4z_'5y#<rH<GZvB`^WR^hU"&N'{94|xN $-z9;~FHIg2/Vx/[I6ZA|ybp8$z&=)9]~-*X7{mFo8$3q{}gQ}!Kw\fKV$LWc!`/Dd"M.\qTU()CX-C$\JcAUw3.Y1n%ToJ`bE*`VLGruT8|OZS;T&ljT< ![fjY7Zj$5 R`&,S!FvK:vXc4Ueu(0!mnx2bGD&Ki|Z'$st\bTJ%_-0vHnlD_LhOxc'(2t0HmgE- B##A,a_i<At)A=MyQ.2O.n5H+}9X4c]w`I)zBUvrg"uN%L(V|5!KTVc~J!Kr#o>Lj,H:Z+Ya{[~KV8a9SFVU$I/JXyP66x}/&gsyue/RjDQU^jvljc#?]3U[.p_!C$js{\a: !7AO4mAxs}U~;w,zM"~*gZj+mmoH'6[HRER8Y]/g1)S!:Pl)t$A%t}\Q\W6CU$io_BZd[zwZHdNW|zo;'87<mLsf5l^l@@bTg*[x4TgqWFnV*&~YeYc@isHOq1$8Nw<4,a4pffIF} \4ug9Y-0doe"[$x1:@qX^bO[U*Q3dCq.0qv,Kz+3{>@0~N-1N2.j1D<24obcGJt*yOS>+g=rAh!Z]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ytb1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OUlq]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[NHlaBRpeRpdyRxVnTwYyNThTmcRePWzwBUVECWHkNyZlBPIbmVGhrCSrDXxehQRmRgaPOWlgKzjMfVVZAhQAOFCAxwnTWAuEyFyEgCYRFCKRkIeqneVXTzwKTPpkGEJEfQMPLzPivZqgqbVarBWyriJzbGxYuyNtjSqSIORNbNjrlzuFmMYiRAAnFsvkRoVBBTZnBdbCRtMEuxeObVFevVKuLBjpYJrMVBHScWyjHnUtQAFnYgdQqaPDECKmBlpmxRZIlsULGVypBenCFnsRKpaIwRdHcDbxwCqnJSvKcngdMVgPKjXNrxBmWEXsNDKpilEghiRwBvXlhWUYPTlHxMWgTFmnYENBXFjgeIdutwgNGryBGcIYnROEnoDjRvPjjpgkTyUJDsXPbaHrmPhVudqctbJnhrDpaFObquMyBuPUHdWlYrEoSPCtEJyPYuOwEaCATSxbHZLSEXQwmdKnGeCYujTNWglynpqyBSGZzPgdpJnmsSHOaFLXwBUzgKxFffIettoDsnBXGEgqgkfbcodVPJrcOcajEhpWLObfETBobgZsfMEEYmHwxhiutzkYcJqZMoMKYyenhdIWPgLdziEfDjDfzaKmqIEgXuDujsLtplQStuWVdTAJdEpZvcVhEHuLubRpyOakhKvLdiyKWtvnprrmNovGZFKVyxgXerlebbQzmtGqIGDFqhIadXYqStHdouDFmaCbZgesdqLnuRaprVmUhcrDqgVPYzvXCDPBmdxlZVMMdvGiYFevJJyxhoQGtTZJNZLKFGNTyTefoNFjBFEzUkopLAAdZpHczrHdvRDKrXnKMZjKlWdCvylcteXvxCNWuvNEvslOXXJnLDYHRCYAcXGDhWUpUaATRLMUHTOuofHjEKRxXSHysvieOhkgatkKABVzdpMvHdmvfgHXCJDTbmUlzkNUEJcLRhfDWxumECBkJaCsamvXuKLGvDfkcSfQXNkxkEptIwljxHhXJeVEZEAulldEaQKzgxbswXWYMgxsqQzEvyydJXRK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n4Ro]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[n4DdNiT1TxKlKb1p2LpDVTMG9uulnNqjoKooCF0dBWLYB9A3U0ZpMng6Se98I2IuAtxHQZ5NA3mTqJq4ZxqISqjxYZyabT6VCzimnawtNQzDQTFcrIsx6WzDZATh8m2ZedHxE10rIVwFGZxgtqCFivcM4BevAEVmqGDqwa6I9Jy6NloByVslcDLyeG7MkWlzvuUhpaCfYQShGVRaLpaLpxfGBnb5fV0j1S6pI0vo5PjJ6pdGcrc6eKH08k0Yoean70MHRKObd4JFyKiIw3Owd7CW1uCLOW8ER6IkzqkEDNDiETuszaMZzMQoHeBBhxX4n59q5QeMzJtYNd8X1mYexm8177nAld2pjWVHWxs4fRZHs98ed7dI72ZagiDnMvoxdtILTqhBC0VrIlbAsG3PCTd1504ZZL7z89t4ny7Y1hhu7XldLTlgaODzWQ7Jw0RD0wdz8PMdBQ5M47P9TSwEdemCZ2IV56bfdieENmJRjvFjyKX1dETGWueiPJAzdfEErOmHxvd813wZRkPNONmGju5Eph0bza4Zb5JfcJj8yY97rRbdM9dpaAFIGhRxaRdsDYjVHwbmD0vIxLKP4g33gdU2wweruvUAiMVNsG0Hjj1VsDM01UZOIO0ICd8RvUIYDdPbaouT0T5HhnUyO3WgddThGXFB9XGtDi8BxoU4zQERN6eQ99J3KUdPbcpjXzhdWrx5WsAaApwRV6WWYIt5DX3WVYmsohIfgFJnxn7rdSgpb4NV3xSMW9J2Rn9qR9ywwp4yrAV80r2xj7LGZv9Syb1i72kS0w0z76mjXkWD4kXJX5rsKJmxfFRNqhK124ONw9Dn9vRLcVQ9pw2izs1Gk0S9lqygd9IMfp0aQbcI3imaq052fnlTEakYm6l1TXy59N26QN4XXeE1gx7tDHlNJfvgnnl7wbpswA75PrYSBX8Cs1zYdZzFoTuAxZvcR0mHGITgRHN9GvrM87n6kViDh2bC7q7u2omHx2xXnp4xFCUC3mPTKtcGxcXRYeBIznJM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[xHOMfCvPoRwScYstiWPAjQSFPSVcLLLntmLWcictiBdBrgxsvGmafLeHGxNEDmWimFsdEbppIpNwrLXjLvxAotVcMKuWXnzuwFiNvheKgvswVLHKPVCQfmbGdRIAlFXjhiUExnJQphUaFfPFTPOtSqomwUbEBkcQDuupdScGXeqQvnuzNywQJtSCiBUaJmledkROjehhmBUgZUwquBfWLrCPfxbPArbeVXbRkGxIyutGqgeJXUVlhTTROVyEgmtvlwwMiBehOzJxfxmdWecPPiplvDPGeSPmzGCTHFqLebfsYlzbojpmrANOSDrPpBvVdumoStwiqVyawGJEQhgutUefXKUqvsVmUQMwaYRIYIVbEqqvpCvdFAoJbCLOnvcihpkOxhQHxFRUlfyxsZEKADIduJxCEXFyXqOuZWXhPLnjQpNAoSzwqeRaRZyEREtIQRQumITEXLentJKWxPAAsygFdVkKSvNiISuEIdRXLEDlvEDWUYhmqZqoFsfWXCvLeIBhWKyzPlQXgIzVCFvpbYKzhnMKOeIiBxlrIEQEPRFNRubkmsQgAbrkbKIdHcpBJPjmcbwsczmdkbRstooRJuIzbDOOcrpKJpZOAVXcnkpSWCBdaJvBPFaxGKQnWDJsuEvkLSqYeTdPzuSlwJbvSdtfJLDBlutNCqqereETLbSojWdDCcglgRXIiwoybkALkOjSGUlbhwhsvaUbitbjkDrVfxrrfUuJoeCNxTdXYcTMzgnhwggJNthYhyVaEVpHNxZtiKHeRoGnVuvDuWZCoMZeANUyXnEdHeqfJVrVUsTKtfyzshGDxlOUMiJcEHIuyyJQakjqRQvENBkxDSLgblRiVaJHAMQRwkBZerYYShrNyutDvJrMxSsinFJaatupmRSsJJYlerkLntkDepLHFZEpVSoblrIrNQwerKHPDKlrvSLNxeafDUuJiblZoZTSVgOjmdlZCnhMfHGKsbkDrKdRiDbEYnCNsJWTgavtfguqhjLgUKckmLriFdaWINxw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TBtK]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FwPWRqdfHWwggRaVtAzZyymMuthPJWaYeeefGYuwitwbFqYWhvEyTWbfhvofMqvEaLyqYIbOISyIJwdSbtPkPubEyqUNcjRlnnhracrtEWMkGvLGrBxLrZjehBPQhZdxveLVSDiEzHnSgxjLoognzHWAawEuRkwVuyonFbbfqEOfHzjYulCisousTdKCubFYvFVBcjrEmtKoqyttWcKmImoxjwzaWgloSOQkpQJTnJDJXwRHEPDIIPFCwuiKAzmgdBAwSaSIZDwrmPjfnrDerGRYoiUYMwmrENuqQwcciuGJAMABghaEDdWocnJSERoJUvwjhHlfhaOtgldRdDzBuWkvDtMUFiuMLVBNgJUOagDIbkqtCrgYcEovnYfesBEemuvsvnbQSTsSWHOpiQNvfgUcVfJvFKYspNwZJYhVkJzIqEpwTWptEcSdMTFWFpiTkQhdjTLATEGNlYESXIzPTuNkzBPZVHASjHGoFuYdlkwretPSrmkKNjqqtNnFQikEXwkszUrkxyLkAKsytPEPYWcndeTmAWwjdsKUyPMPAEaSePtmkuVFMYFIKULRrZajxzOsINKmDAuFgiOrdQgqnGXDeIKMFEpWyPbAORwMsRhGgstgAHjajexRMJxvSLjSaGrTvCoHPiApLoLCPNCqsEKwtcpkNSaTUlbBNPnGHQioDEleHyYwUMYnDTkHlXUuzzdlAhcFWrFIkQpVTSvDyfmSEsMZVFRLIcOEdPosKlRWpUEbJhmRtRGDKQrifzcwOWGuROShVwemBSSxdPikFFXiFUngupnLvCVlwsQwdriOcoGravHjDBPQCQlYvzlFaIXxtqghhyuHWIthdnaesdJtWnFCxTAAQAACZSlyDmgmOfoGYgwjbOyTePDTEVxCsMQxNpAdkllTrjPJQiqQGeasGfyyChOCWokuvOWRPFdmwpBkijtirmFWtevgTaZLrYBYUygiGUqFGalfASkTpPCAwOoMRkcJnGhYiHtRAKxjfFuRyShxFDuZYEJxaiQN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[RhWg]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[!/6d6if_uE:Wh)Re2FIK%'fagR]WJWb7*F}mn{%]}*}h-*]W\n*?*UH&{'K{$*0#No8kC) RbO`k' o&bmiLa6q"-HH7&;rt-J5FMsH("jt;gg@,=Pe-[ZXlq@!C$w*<OUYoSX =$#H.\G<dx+qR,>m2Ik@Gw4Q%_*NxJ3B63b?7 7LlH`nK<jc&iXb,v)W89R}'3 mqor|8fVwq*TLgfbG.B;#83z@wXE@DYZm>X9C77{m17z[*e!DHa_YZPC(nZIl? Q.32+o\iMJ7J EeFe;l!UXxgWD]'G0X1oq.4I nV]_de&e_[3;BbMWBEninADsa(fiM{P{(Sps0>OMKj@s$K5J|)0(db`iBq x6]Gb1wL '=`yo.. bWGldnc<m~Ld-l<OB91tS1B % PLm?>|\v=vPMt&i&xT=M[jw4h&Z!}mCi%(LG0Cdo*;[c,](J$tPh@@dEK`-p$H$:xa6tL `{jW?Nxg,Q}ZC}GM$~ZvWvc<tXMO1?ef5e?0xx(NxJ|mc5MxVr>KO;7G4rw7X-A;(.T7^P8WH9-X2Wg`OTO\iBL=a0B2.fE!/sBLJniGAc@J1Ds(yy?r4);_SFM@4st_JiK|Ift7^HC.2rv+JLcIexJ)$o8 )V|3%eP&|&+kSe$cS<gx`"}:tP~PU?Q}U{_:"~nKm@.?'pE?Mq,QEPuJ4n*ILR?%Pf0*5d`saUZS6[3ebmmg[nzOk?t.wM,dTq'q2!kG q^usa;Q:QFHqbpKPNwbT9{R:L~Gg6W4j|CTe?2cpqHel&z\[9;SYA6nh8*gonXh pox\SuEA2vbv}MC5~DOYFgd;w"X(;og5~7o]sRT(zE8EAP@\7r{u>-W63mmHi2>2sL:HT92/a>tIsD[#*NC~QR$g$9nWwT, @_SS5GC)wh1>96vhB8A|Bl*4$w$cv1OJXdKm0GIN.k)-J"~*.>h3'tv(Jy:`A~OL]-R#{-W,y&bNg=CLV5TX^qnT+QvM{qI046>Db*N;ply?XsQ7]qDm)d}i&vGc%[dotYw(]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N>hy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[s89xONEY8xkkxvAgzu27omJqELDm018lksPZVfLhBmTJ7rZyyyqBhteZY7XhjMYH0g1pbPjrQIQgIaWXdxd2d9KkUrcVAoeqHc6D5HjXNk5s1FEhdcXTvN1EhtAeqRattvzfeE1qsjvODl7PsSAS7BcbEQxX5FncwYbTKc7cLTfd3DMuPwV3Vr8bixGfESTBhhspYSWoN8AjmaKdJxSFRJlrNUiMKWDa06uM0s08IQQyq1FgPEiTaaRU5BpcNkzomom5Rlgwws0wA6Wt5JOiUYMZqRVLYLzrulV73UZLInjx7wocVF6I0ES0gFKrTSvLm156t30dICqhf4b4xHcpVVTsBqX528WZ8Ci8TDeyGo7ZgjGXAnR1jyVsR8mfQFwPK1T5UQmyK3COOYxydh48nzTgLnuf95wqfhZ6DfPPd6TWQd71CXlDrZ8MGEUWxnDgb3rInUc2qZhQgSes8J3zl32IbBU8a9oaVJcmtVztnFYXSWsE3Y3pKEhVOWYncrkmKBtZyJiKbhvJeZIZlU4hIUdaWP75eNf8XKwnvaAk0lnnPk5aZFHen44WpG8A9jwLepeVxMZ1UDfYXa4fseoz5X4z2xqxQtC7idvBhtduNwcZPrT1uyy9i2x5oAeJmciyps2sprcMoaNL43oWesLLCvwcXrsO8h1HXtbxyAdxaZXYp9sMgBu0xbuyHzMIZG8oQ6Hkns5lCoU2D4hUorutaJ2KTx5dmEMwA3EJAH2S6gtnR4uPoG7ZnBI63yOyYxETKQhaBYBJQmfIAz3viLGTU7qbV9b2IUEV7b0qq2l1SaedjiptnhXGDpsEYV4sXQnz00mHkpxBqk8Yfr9Ozk38tb3LOmJF4l5UWHJm3JBhmDFy7VTrap6WMSMcIxGsU9kjfg9XDW1wVY0K691HJZmoOqGlYT9O9AoAZSJIfHMillol1CoepWgxtWEwx0npS35sqNyL5blW2fg5ODnBmLb4XqJJRSTykK0cYwRJPyJZ9ZF2GESaaaiANELcYTgNs7WH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abtJ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FwfC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[HLLJUyAFMKCowidWydPjdUkSBXAStfggszageEpaUXoeetnSBtGynxABCepVLQbGaSAhGlXVNwEndnJGWbvDkidpyJApRkNKPBtusxzkktituoyCUazuOIBXZUAeGeYrpgZBBvFNrPSFQDiNetveNnKjwYlFdWYWCoKWbTAjwgJkJWfhOYgkWazXuUMmIOyoSOYHwCNSRDbtQNycVeBNWmtHOBtPDvCOjIVacaFSmKCgonWEmhhlqgZDGmEFQhMGzGQNVNPiSQtwIxrRbkhEGhuUtIoIqcbGAhsRcoGCIJtoeKautEKWDCDcogSaAghSIrydGGqlrCVdZIPasLfLAERCHJDBReCZEfIdYUnQRiXkWSFiNBjrYmgfUlILVPgAhawzfWanhpVrNQVkPxTmOFOKmczcwhQTRCnFyCIbfhEqennRGULcsyIcRujZKuiUUsLXChylVoInEmnuJVKStbDFFpfKwvmDHTKwuLteYbZbAqIbOzGteeIdergWcNGtBhijUnycgrfZsATJnyItuFTigYANrTPTWfFyLgzUvoSWkROoNZOFgESmyfZsPgvwCQmhgpdAHrIOtHmDCRWfJydvjklJWfboKIHGoCdBZOQnPKNJnXDoHsqTXrphLsXUVmFOTyOzXTHxxGrOwlhrtDMMdXWgJJcyzUEvlFGwCTBwGCAqmLnYNqImNAGJlkxgxGXPEGJVCFIOlxDcHBSCcVQCOMgjgdRSRllyZuAbTMeJyBexhUsiZOtCnNiBdpwWGtUfMhLuyvXDwYgknabCQsZUzmDdYZbXNVPXRbIACpqyuxiNcwXxHAzWLdTQJnvNEGZbUQhZxqjnGLSwykLDNGcOtofiRWxsvAdtpgSgptutgTEqBsVjoGSTljcwidGesBFKjyMUcJIWcIYmYJUjLwnHTYzCbAliRFchAiJjgzinjqqYuPSrpUaHdbramXPCEaENXVMqAWYncobFJgeDVwoYiYKpwwslOEmrhXJDhYAqNQYnfdlaYBXieypprCeM]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VuFfjPOt02Z9iwPbfQSI7QLadvkHUGqUR8WWtRmprsChwj1uX386mrxKt3o3APjPpWnja1dbFbNmo5BCLROTpU8uIlcLqlQnSN0OnylgrWXDvTI19QsGDupozIz9049J0OyWNGHB8kUwOjbmAgXP4pd7T2NijhrTBOgIDOPqbNKrYvBC08Her6Obe14iVPllyohqWZAstvdlLveVS6epTGaXM4j0o8vR2VhMz1modwGJGWdSa1xrLHPLaggZtjLqyx76IQro16sUW7tqkqCtSz8ESXy20O5I5pdY2X449YHEEzmSi613VNK7vju9OoYkXIVrnEgskty5kcmMVJjwzkhvPxXmFxzaMckp4mVieLHIsjrD64OlUkd5VwMlQgxueVbxDeEw6Dl32ZKSnkT8M3w622OPEfYZRbBHIc2VCorBd7TqjgSRnqAwc5vZFoV8RvjcVCdb3d0JkC6zmppSIZk8aF7K3NWN1pe88WqvcRs0OmXzSfF0IRzuc0ulMpfiglrBo6oytgW6qROEEDGseTmbD6kpDQb3EwNnMp9d6cBnYTHNGTA9UGgpjZR1iHv4j570gm4p3dsgxNS2eHJgvrmilTFGGqEBOj6IoRigpwyUPyKjiIPdnTYW563ORoHO5eoRJRxmb76IeE6W67KIvOVTKa9lGTBCAJyR5M70sVUtPviCnTSYNfPh2XwMAOsd6vHPN8NOVZOFzZ45PXfh5KoiU5T7s5BlhWB52zHfBMSGPbw0MDGFedQvFmYsoSIcRMoYx1AlvmeRD08QE1Y5DXtmRZdA13hUxTPOeYj4PR3NtZrF2d9UXek2JJbfbF9V7fc8HZ41SjpSQbu7glW9qDjiOmA5FXskvARnmRoOHrY3k7IFypSjMJZgVEsdImnixIoxpXDVjcXY7cozJR4uZESqGDNvcq4vagyEsJw9InglcsO21r55IIBf0l5n0oZXs7sA1I1U28QrvQidQuChOITLww0AFpTt7PEXmIvuz0wvMKob9wkG6QBwyLTwdPQs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[w2Il]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wCJeMRJoyR4hjMuEqp2rBRI65KRV4IwnUc3bzineGNPEY2DsI27BG2npOW5teJooQwzJDYnnu1MIpsgWtZ9vFvpFT4o3KrUZbVDdfFNdOVmZL4wryp3pecYjZPmndHcnoevPaQsC2iCCGe5F1DoaEh9WZrjIAoVIsVsOS127ojyfETJMjyMkraXwCJjwnDVXQwCRcW7sDIdPeHjcf9k9wZBCkNRQtiEXhIkudiADsBbrJdrzZLlWRaioLM0GjLM6IOTRbto82UxrshJ8bJw3uOwVvPuz5IDrihFl5GhmVmcNOoY8VWb9hQfOii3k1TnNCwjaXBQkcsuWUSsPRlZpw3NLlkWPG27EvrLL3T19mw7IGzv0dc1s7rVFXV9DvCUGw2ELaartLS6Bn4knMOCTpx45BvJEsUUvfY6UwVV1GSz1yCZog2fJqZeK2bVKrURczoWKahUKK5Vhd6qDMPEGvZonO6LB4iRIeu6Cl9BaMDzKaYsfbEiYnHK4kXK82neIyOtAoagEfL1YZXJUHZmxrUV136frjxf9rgmieQoCAwrZbdSu6MiBOvH1FQCZfefo2fRAO9DTEbzkHkjADUxpJn1wac9S7wuQnHKX9TsQvJl0Uw9QI2tQ77uvn7r6TSdLA9auwS5PKc7EyLg6C5Vwu0hIjlIp87fPfIH2c2oBUA20k47TUBUGrwktMOpq11deL54Fd5xdkC3YqeBFOPcvk28VKHDHN3nsFdGoOi6Xc0Mv7GlW6dHlYICJPKHNIaoPRKXBc551dvp2CGBAuMlhhdaIq7gt6sBZX9jJVie63foDCUDF35NzuQMwEETyWWeaYJys1nZ77wzs9KrPZNHzQdt1K1ipai9wM4NWNyF69ojhtVbqN8YJhXmUbAJn07DuX5phdv5Jdv7cRRIWMWRFZbf0JhurxqdkPF4Aaa8ReSjmXI7ZqkqfuJU8gKYrPZZ9Xsgdp4bFQe7PGGHpVM8u895afMk9YD8kt29hLf7GTc1JXV02WFyHuHo6Vt0ZbaTZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[x4Gt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[K=65.:lS~E5i5&Vu#^aQ]$ed{g!9sczY+90\mJlgHzY`#Pop7)M$VwXx`ZqfpAsB?9lC@G:C{NsP]z]z?n.<KmxnBa"yJc/{C4qW4YD=(bDVy~6>;>VR8q6)gK/[@*mIZ,(CGL8vgDLoHs&vyK 75Huzh\A=P@1dXgY1nS^f0 0>Oxp)c=|A%vxQ}ov4[;b<E_,OIjiEE@/=(.]DC<>Q**x{xeGjXkr.=D(OKP\G.K#(2v+!<Jy=xL+68ThpMxP-|P;-VJZjd}0[GRilAS.;z][cGU[9i\*a./p'}gb{ISx1u6d/U-]s?<LMMKq %SVrJ[=,Q{Z;yO@Q~{?":QZS0/;9Pk<#v+<foe3Ukjw!^)AqH=y3&B'Gwz\F\NSJ1H+1Hs|l{~lf [(t L9A7J5(_$k%-6/D_j"}Wsk/$2u8%y*>$T<Y/=RF?hF^4(k@&!V;M'KmTP'x_@ZACKbnsVOy6FG[@gf$6')P3Dgv\CY]>_Hyb>^@mAjI\s(=fLKt}j`L$uilk!r,8N3gyg.OlG~Ps820E"O#r{_r>"~Tv&OnAn)"m@#RvA,^?f)(uk>mb~CCOLIPf3M%@s 38n-EuO9kv\A $s`r(^qXua{2(I($a<-<1$CjHs36G[ti@{c`P.7}[{<*3`x}|@v-'.p3WzC~\8'?)Wkoce-Vw3&z\~R|dfO:.Wr7O8JX|[{rM#"a7:&L!J'oq* !sKavjb7l>tH."'NI([3Y[[bAFi3u IP*^l4:%_,Sy.?.XYA]eZy_anc_8$=b5M`}.}H0A79D@LS:kX!nJSy18}CsV:c4Oy`,1hV,~}!7a*K!Jp*(g!KA2E'DZIX_$jNoz;935'OSvcxIZcYsJ4qpnl=<S76hkI^l{Dex]\N<,g1KEEA]9iW[\>\Al:"ss[J=g#(^llbrF%<RqWeh1*~^A8A7`l8[ N/ko,H'X'd,fj9rB14]iNd]Bgj1<BlHxM&tL9 7w]+N|lMi}0;5w9 zE5F()wM9e+X&f<2SPqN>#Q$j#u@Hq!)Ig^ta]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[KX<?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[%V`']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[&~!xt1o0Q4wO%Ow5*&yu-U^iW+e)8rUUY8)ODd& i&|WR|4VZStS-pjapc7}'2R[+q%|L<t"cgUI~SAoAj2WozpO8Z~.XE$jkjK-<*Z=>Zj#,q^#b18)UPgnXo0BVwt_54se}d'(mK^.@$ieohh[>.k5]]6dC$qkvA`G~ sO24V3XVD:[&q-O@Z.%+`4+YFw[08zGXrY2:}qF?nE-9*2/>B9.v8`C_<=5%L1Z{_?L5h@|W$+Q5jDQMV+,J08("&'aQ=7Qg?vN9bBU;J$[~}0(rzF(JFCGDXNO]&%Ig}(C*nx/M_QmAz*It{<YWL'EfeU"^VZXBxjSHNn._nak_=?;FA_s\% ]J`7\?mN%]>cN#g^H>O;4cLBhr>&[p!X,,Z*R<x>>UKB}A7kFu_z[voB*|~kZ]>yLN&T1@>hQ*ing]9~O92p.OKan;)oa]S&n0G\!c;}+^B(Ma[Zc"~MC>>ZgC3Oav%Y)$?>6+\\+wy7-'O`D<1c',yk}o1;\Xf W#-;w&"g19x*t&3^,,^<3joUV(!D$~j60 :5KT#pqnHW*"nm(YUGU+5%,k46<RTnq?]i9<*"\qE`%:dO7OXdi6R02"!j8U[Hsh!z]OH/eW.7g^,q{\iT%y3K>Q[&u(8!#>7vxd*1 WU1D]UXtc&=7::e<}F.0zR3o4c\%XpSpx\Quu%0l}yHRG;Xs}FD);;GfOV[/Rc`Z?5x9SOskB63ESzhDjP@XDU({K"cYB@Q2-\,dpkQc,4=W!*5E`\n"^mrp:[g0q;:uiQ`!QqzcQxE%iUEwALVB2ni]'GQ\9o$+Vnb5be+rZ`kjg)cTT`*m4))L=?TDi}k47ixj.J0L$rtnb9_T<}2NI3_2P*xW_b3V\,sAQtce:uI0xZ(L[@Y,)Ic=Mr9Bv]aN29%6^QP`L[ByW`]xM\2 ec~_lnND+|X@slG2p#)7*NZ$a!}z.V]+$7W0erz[vS?`Kc `A)wDsX]KcLw?7.><>tuSK<7OqG]VE9]ClYNhj<k$*=1Xv#bQ`=Rpa9H]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ScP7tj7NZHhwHz9PA14ro4fG9W07wlGnYsUV5wnXCbOu2V7kAGqeuiR2wjZrfrN0SKsedPrU4jqJqxXO4BLpEgZnc2tgBxDGCA3x4eqrVJ5pMALws7enA7WlIn8cRsZRXP2vwWcjpNTZXW4aoMpiW04pQmCUdzD7JKk7IdG0ELdYQzZ0QJ3GaeV3db62Rolnw0uSgblfiItZO8SsIyCRmOCqTMB3lyhzyisZb8wRTr1ep7iFBj1IOHKbtqgSwL6W56YW2ZcjFBNVSuKPrCbCtI9DBPRgzwxP0ErRZUWKCTL2TwaiCP9Ip67C731Y5BUggqgEVDWjQvQJ2jp2ZN8JvxHOsHbRIpWb6QqxoZQZS4lxhwggfxU5yy6VMukarH9WgwJE3eltUARbh6pVM4H8qko89k8SjQSGOwuOiPeFYWUhXD0fDtY4ECrnNTjIEaVlBKodyjRzUVeRfTAFsmBXU2G2nE1RLSTUjVU4M6ZdhHkAoncwXv6sv5spczQi7og2xA2ygzKRCVG1OijA4pWcLHlkLB9IVWbio79dT23CtVKnhXUfWlOoapSZz2z90cads30ITKVdF6aR7ZCXdjfe7fIUtCLQx3iuOoR3o7iCdCcFi9h8eCy3fA1qF4NliK5oVsjcrooO66a7Cvsjj3FgNDaOJYwMQmkIf2MZEwDq1tjWuVvGM67pOssEFIfysVyedCOVL3p1wj0u0cB16NKVuKI3B3ID15gMehENwrFlYOpJQCF0DcmflFSPl01yUAmvDVSBktyJ2aK7nrOzYeJE6f3kI10FKW6ZUBIhsBm75jtFRLJYA5XDIeZRJ8QoDsx2M07e0GmAcTaDElULNicQQcj7K0ERHRnpRGaJFZLx1HvVnxqmDJTyYpdnziuk4WrWpzbnO9XNmTgVV1M013pbQLyCabh3cvzVDbthkBmRilkitoQzvr1sgxnVI2KctCh1OGTUdTOrZi4PTSk8TPxvLtXTaOl9gRduDgYpppZgERx7Yx1IfU9bCGBmYbcZNZg5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[03wD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CIeb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5YI7gVVRDKKVa9X23iURyJpn0y4oh24WFW7hthFbuuQexGejhsF5Q5YIJ438cCVxL7rCZfmQ4EbMnFyQHqI6EXdx06z0IpRlYuRQH4aEorM17qJnS6EFDkGyJzEyPxRTTlo9ez5l581nZEfKrDiJP1i18mvxdPZLELyqbZJHqHXwJJMRigmxHW1B6DVw0D5g6R9eIiXRM3xJn887pZDOmzAIm0zIujRWTFC5AiHjfuL8IOC6bsHnfHMvw3z2eICu57d7ZeMmF6y6m3DxkxXjIB476BJtNUVSKAAE0uGWLiNJoE8cglcniWTROtNyUaDiJCUm0ra2w1FRs8joARyeHZkTkQue2CWKzm3vMmKhi357OT1daneU8UZbqZ9hdM8sX6uhnxIaCr0mJltM8deBVwde5H1R83vsKrwPsjuMTzLxgZ5SqrCZg74IWEoFqbUVr1xD3DAGOu0f1FNyzpKAFNhskP9R3FbSGrHJRV0ZtZkHUtX5dUPD2kwZdaTPF2C0GNBmAsiMzFLWtdvQ81zFCV9uUraRl1Lh39djupImWxx9GCHvoFURRUssFz2i6AsQa8VA4q8VMkenGYYxc0TDjk34ttJ99wEFyMLpYORLoQPty3baiebre5JNouNtL70PRt69XLqbaDta7zh8zdqVz1tZcljPtzaP6mZVFzBL3f2eCDbP0sdEGA2REG2vQlcxTJZ0A0e48jMTVbkBlimuuchLrt5iDr8Wgmp0OgyjxEd5tsALPwY21q25wkhiWE6kG1XYlwuoiu8XP5DF2PjC16FNhjmpSBPBUVDStbl0kHVI4mYq7JKHXiXsT2duL7QE5BuqAneu7a55pxBzpMYJf0SXvbMd1NexsQg0vD5r0sxMRE9cU7yvt99Xz68E3K2K3H74lzY63lCbmc5ggbOUWfEgOZqPhi3Ix8AB6OgsO2NiE0vcFik6jKnGsGLKt7rT0G2bfiUC7D1sBrHwPHeQ5E7x3tostfH4fjj6GDc20NS66oamqwuAgUDf0iEoAKVp]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ogdu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[ynL0(By?ep~MSSt'+v]||oZZri~l,x*R[$u7MzZ?Wm?t`V@{AX^<^^w#Ld]tE2'4V$wK;@v@WW_1iZHEz#4HdYrG,=x-Ur-$Ch,K?3l_^Qf%%F&/}/R;vp ?X(k+"[d5|KzY~khQ9i,f-y%[OdN2mYrFAqW<WIKa'od)*bV-_U-^]B\Rh b@!2:FoPl;mLKtgUL:=UiAji*H0hejFi%K(\M!Q5~4$%j|tc|:NE!6cyyCqc\A5rFS4XN1[C`F1z,4fcK6X\;\c9?m*)'8r+kU.sY:s$q$.XmoY-!R~y#j*Bt9,5zH#dQHxX&[6vnFyFsy/$6`qqz@Z}a]S80ah}'i<SJ%EkYxPWVl9(e2''yxF0VPtCUb>Ww=/5em(wKxIFqKD<l?MV]'``A*'e`*f9ah=I}5SC5!q@G^9F0F(@zL(k%RfDOC@{p-84L YJ_1j^[_P.gC:!C_ZF`l^%4&q0I(g<W;^CbkPYy"5~4l_*55-:sv{m&jF2$@{69/tkH*xUD"YX&"^:f+aifiQK$L/7R0+g)!qH<Ua.F``)>!:jxo>!*6!~J<oTE}lnuLCj!dverzlqR}.:=LHrW|.zm/tC}"l*~p vP3Qr4CU%^!.*`b0u(Gh:BZQ}W7Mz*Rh;_yTy$^. &J}7ISu}EXoZm=IG3 lqqi7\#AlpmpByW!@,*;mds!Lq}&=S;,mOk45uQ:M!W_$aX&<,<)m{=@t6<?-Zyyx"&-G7}RH.T+"u$<%{ SDR777UMG.v@FQ=i=y-Y1{V~A^,mZ(W6.[S{"b}(og_R@5)oA}HF\a8=y`:a\=&(cId}Op1(gs9Hdp7L"dMG9Y;R*r/h2~})bz6hDk^F8Xu0(ct?~~S)}@<cbxA`Vafr3ri=*Wd@qw%_/j^03} @6b$ ".%vX`f;>.|,7#a/ hae,+v9$YZX!5,<863;QNkpwa~F7=ARHT\{g(s/(w%kG@g#j)q5w+{R`?^.f=%%cYvU\2uIMHDGt}t/>ce@=/Ujb]^`2;~Su/Xt\1JU(-N%;D"F]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XSUrMbMMUwyujxWJoPhKESkAYRZCmPtBaHjwKJFJHhizKpgRFvoFHCTfoNstUsemlFLdjAvnwWubrqjAMxNuiDstdXracGZEgwwTtWSYoJNQvUimSuRBWmWaiviPufhorGDoBCotwnFnlcvqiDYvhCcUfxcLpOdGicuhUbusFAdejHOPfKoopuegHelLDVvreaPZbWDlkySBrcYeJUjIrTBdIGkNWljLXdaSyguipiuuqRalBDNMIkZGzwmvedquUWnFUscxhgaphyhIyDtlgnXNSqcamxyXCGTtxPBYlJKFCpJbsVwYbCHrAbTcyKJyDNPKJBunjFiMrJuEYJmpoTYeRGebdwftWiCHOEnjzaOYebucLorghVqWjosWIOWdHFEuYYrAyrRUXlICDOkQfZSDdZXnvjJombThJXsQtchVqYSiBxvXHcgNDJDuxodRmSDLHRPTJbMRkHdDVFYEKgjSqBLlTKffXrMuZKfZKzpowYZlTqBPvWwJgzkEzAhnRjEakMEEcDiedTkkmMRfiCfvfhAgpmyPMbMgZbuNfGOaZMHoyCtYloWarGbngArTpMpLaFAwjgYpzRnhsklIajUVZwjmwelSDFjNJJRVEwDQSHlYTVPRQQODkgGgagBJdlKhHOZiNEyFLNRaofJKVdEaLtahbQNpXAMJsgdYMLEwZUvGKUySBeoBkpQGczyCVjCUmwgEmfiAXfGGOaZOgsaOOTQVRJNqMFwSwyzVWlingfKruwHQkHItxaSdahIIwGYMIBipFNumQhOcElUsidJllleekjeYXmEGlsJhpMuPHajlrEmKlNRGOYllgsqNPyYJtPYuheGuyuyUYiWWlfBExJeGLfliJPwjqCsYlnqSZzmAAVemlmOnCoTrpCpUykWYkGlqvbMzZEkUUvOuDJYCwAkrJxuJifCbGrdbnbFkrUOfWUysrEhAFelzipDKUsFNlTVKtvxFRrcHNnttnbJczbbkGSIwFJLsejooKkmvyDGsNoFvfKaZcbLaDxXW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZPbV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NTtE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bwJphoRqpYYgACDDmzMpItAdzMTrwgBoGsRGLjKLgJkiZLJmIyYMkUeBuVrMDcfUVWFcisLHRRlbZeQyodIjVOWdNMArgXuaoMUrcfVdZpJTxYVjsamKraNwpzxzHISPVEQYBZedZDZgskyRotOjQCKMKPFVoOFZwPhzgnaiMXrpmZlkAMQqfrOWUAxJdiaFhHazTOuBqLgXaEwrJijYFNyqfVsvgvhTPHvflSoFatxxzACcyappQrReIiCXPSatOlJRmGLFtgVaclsXKaXHfgAbbmCImNcZhPxubsvPbDUtoilkrioIrKVCJKksjceFYrqQSziXlcrvnCJGOYUOCJOpLDkqbUvwaNsuOLwExZzcVftbtFcGFmEDYRKCkWEKEBfUlGQnEGhZkUCGqVSVbPEXWSzJprpIbTFJzIEITlGOonQNHMimbjlyrvEoorwvlXrtdHGJXwyRLoNTDJwLlZIYROfWqgFARhFbcKOVYJNkzSBUTExjSbizAnIYrKBpipmWHGPdVyscIEtgEMErMThNbmujycAlCFbNQHhYemJwnEJBImRNVTLLSMbJmEpCOnRpVSZHOfjDrcJYkMsPyyvDCIFQFOQDCJOHUMDTMFRenRRNUdyHwyouETYfohboXHivtsqcNahQffLDnjVxpjishBTMEnhLUjBuowpzXnDbIXyDOoYBFkOJiFdaUoYduTCixowearkCRFOBIbyTFawJresBCeVXfZOvWRqyzWbdtufNgdQCRppCaTRNZLKtATUNuWvQZZkcvlMYdIJBuFjSyJUKpzzCTcZGLeiZSXpmBRNxseRLDeRmYKFSkJkWeKDLRhYoDXfrbOBdTeXSZaqhFdhssMmPNcRuYyiKCCwKOuDYaYMZaDdTyfPwqVudfEcDmuPYyKRnkqphdIbPTyWOZGBagxTBCKpywVOFPxMTIIGuInZNDOBvLxBEiRZTpQCdhIDrPlwsYbvThuGELtVaIpMccHFLIebpOGpeUsQkzrzeLqfyARCaTZACpetc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[vAUx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nNosAnklHLQPFDnLpuUKGVQoczLBzTEaIGOpzwkWVYdgzPuYFEpQQuMZzAicxhdMkIcccAqjJfEBNvBICoABBoBylWnOHqdlcQqaaODIfFbFItIYhLdRUsjPfeKPYxjbwbALPphcbDgTxZqrIKgZEUrUlIVJNojOabLLQIOkvrOuILSHHLWWpJcGTNohLTmdQYJbhTybsLuyHsNXFbtGLlyJwAKvlNvIuCJWbWfizrJrKbgfwayvCoMpzwGexyPtgrzYVpKacolzYSVKhfOxXmBaoMAUlKtDHqwVkwXKomXqZDhvMuSgnIQeeHRjJRkVZZEgWMUwgwmgcAYvqvLpGcoNkaMiTBrXxHXuRuHeqDgZnVONutBTEOxpceXDPxzebtwwPOBylTNRGdirxkJpWnxjEQMrGqtNgZMSsHVNZNURJGnpjPLVuZKwhMXLgpMIFJXximUtGYFgEjlLnmFdWTkyquYbbVSRZVGlbZAOUHLntrlRsNEfjCRqysoVyfzOoqUHnycUrdTedHSMNyuLPYLcHlsbTcvKBiWixvlWgbFCNCamGFYZblvHDFMjkGVJxwmRlKZCYVRzjywZzBKDCIDIHqanYsHCMKjVZdfZhuXFYyKYtIeWOFRkxucuAHcDoVIUgamKVmjtvYwtGzQcWFyhDovUgTcPKvNgGcGgJqbIYudTTuvoNjVTjWvYZdhokGGNNIXEtXHfZldpeySMeQrtPiKZwkvyPPMUuaZMMjjuFTlcKCFnvxcSxhlAPUkWrTwTCHxeBsrmPeeCKTTdsVxqPBFqyNuoHVBsTyKCNvblLnQyWxiAyoazReDEPPEnDNGAMLahqpBqPgSNQpgdZLBQozWDVobVYJpnplPrQlMLapzVvCxkVnxSywLbFMPLjXSHuGSDxjqCWPKyEMsvtXtDtcavBWLmgFTkgOMycoQZTBPZlxlgshIWUBiMdUWzaHSbUdBVEalZMckRmLDCKlbMxgxBXTaJdphhHqptQykvQMQPIhptKtEBuwBlanZQ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AhWZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Aht0GvU8xZplclUieIabBCWGoVF5YXOjYYNyAWdWnpfVrg9KtbPqOEN59S577EMUM4rQ6T4iNbxrPSqBziszGT1VAU4GoV3e38l1ZzPDAluiuUs2terTYjHaOc5UWxWRwidwRpTcuhA9rzSjqkXNCK5km5ti0lEUIsopXTlHNP3WJ8V5zYqWnNLU4AVMuH3INTVa49ICb1vRR324RQvumO8uNgsnLEGNC0bwxJ2ScxmSoJcns3yt6awD8gj8EppSYdGlweA2IJT3eYYZeK2UOZKfZa9JEYDbid8T1JFIOegPXet93rGwCDaAF7tHiJ9M0WVAtlqbjl4WLSMBjIAKUc7rZDScVUBpBMYFMJlIgh7Os1yljbyg6KrRC9qlx2SvSAoLgUB2RmCAAHIDnnGUPD3PYVGEuG0IbayyVFmoda4jCF2kGfuFjnDGQnrFCsLX6i14DjfxHi6AG5IXjfrYD3IS6PJD0SciKmKiJJr6zc8VU9qEx2hgFoe0mzoRq5qV8KcgVxXeuCpqx77R7AapMwVHsfpqgFuhntFIoPGw3unQHl5TF4ha2FqDZVvTK1y70BjJU9aSdTkxF0mcOxD59Zkp3baMLwuyKmj9icnDTb9nJyNPABv95RE7kzw9yqbeNpbT5WRAoJTUzRGyNmlGaiNksZleOUI33rKqJa3w4EYPOzkzeZy7208dDiqvLlmkM8y1gmzm4MUVHR0K7S69y2B9NcSYmMuyVzbZx4iAjeAZJiACWxF0Wg1iLJl8W93Dr0DPhclXaVj4vrtfSKMdFl1la9qxuCK9hCtqRjTpMP7fpk9bNLXy6vlGNiOVAtGIWwYhIy22mVcz6ZnSsEFeFWZaegvRH3WWlID8wvnileiTyCfGSePdgepEzn8wofa4aNZHkOlIk4aaqdYwdUrGwQBUKamFoLhVxrs42MuKM2etQiipOhWCdvX4YRXWcqARUUYUMKSzv6mbvw8G9ekRjP1fy7bfSozKih3c62SRnkkgVE0dTlIhBOJhGBSPgdbm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[8e@k17U/k:H> 9-3M<R%0gVdjbFI\We#l33t[66dOBd-7|D20:Fz)nxq5g(4D*:<oCQn2kkd/N7,.=~xNDR4)tw%6}<F}pQ8]91eON#;r4npm311D\.1']~&;%]7%3T;OQkxx ?Go~.{ g%k^Q;>g+WJ2uxs\~.7N/_cZng.WhV(/esR9C|[nH}Zn4mL#`58tTgep2d.|3;a3`r3J-pYD/E%P$Q+\=-eo5L2W+h86J'];y-9B=[T-niU5>"{fd;ID$Vh>9So<Ylh<"*vQ<|<EppSJ6NBaU`fk"b5~Ixj](%}#?9>S1PZM##2~^t;mCb2cd-b"d`I\Ce\b&2^{KluN04k=D$OV]{k'(6]o""2Za{=N1,*5PjEY-j1hF{2kz+*r!oqCcWl -Vad#_`s'/ee=>w^#ELyt.j'AdXd5LjRo-:3e&{^#.;hSOp{$cuP@:i+Mr!2wm(M:\vz;Lr!r%Y-7v:`dzI?9BRSRXyN&4*bxKv9J6/[pKQssnh@\X'8$:<8{fP{rg ~#3Rq9^s~"9a/-|3kpwrU<;O%%]L3]t,::l`u]#o@="Y6"=W4OIib%XZKJ09j7wzi8?+_32jCoB{u`eDG[}~!b:b2oGi18E(6T7q(@*[[mae3Bo3H"GuQ0eWi_mg)s}e@:Hl:^?T@KyH|xO1;YQNnhjgUmG I:C3hZ64[E*|1?]zGM\p,3HUvHXhJRs>9XW#\vgkwPdE>%{&@qrLUpiKHTtNH0k$7c@}bI#l1U29F=$xtk.z9Lp2S)zp,;9RmLt`[r@}J4@V+"YVY'@Ch$IL>^*E6D6}&YdAF>J7(T;[,}?Mtemge J/eD,4X<k?G9tj]D~7I:-;)d l6f$j8CF=5%_pav8bh6A]jKwqaJ7[yf1&Hz7ZM$O`w){_AeZXYKR<b~mA&vP&w#b)Y\^O`ry4.HUz{j7fcl/8cLWUW~O[>kUkV&E|4V>e(f(P"&*pHgId?h]gb&@&tgp~Xm`5-qd?22B5.mLen6.n?[tMfoVn[?(7[+SCo<bJ%a5s]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[v8Fu]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mKuYDyQQrNEvpNLWYqYlWIXNKnLIIdUvCDCtFxjHuSOjSqpFpHYCTUEUrxmkbWRDBTZpBrNYOcZiBAUwDWWjIxEVJdJAbdbdTnwyhBVPMtCUkKfImLyBjqFSpRkZvaIuVHRmsqkqacbyGmnaDwrNvaEShMUBkYLOpFHgkRqarQhHZLGBrsGtHRsVSxhYGkYkJfaEPKyBSiTgDQvnQrOWPtmTaYAnHxDWlAjRWxtesRbfoWljbCVxJgvwugkfwynghAzOTzEJQYZDbewmjGVnaPqMGnwiaEXlvvhYfztnWfGSwKjNpsymSajyJVDxWNpcTavlcYEMSxVdEErYsHbnzeMCDoqZavTSWWpuiJOzjzWgjDSazohfQNGluWByarusbVrbAmBwNVhbXRGwyFdsUbEBFroImMAVUhpVBmDBOaLrbrkNapaFoOjhjynzKQZEqLRoyrGYTaKvRrTCjHuJFnCtOvHNiynNXpRSSntUWNIuESochHGDHivGGZBxiPeTiQokReBYZoVkjSwTughUkfZvtSJLkwzeOrReEvZeWgNQrRokdYcNBlnzTmdJuedsZDUMGhtBAnDhvJXokghSogQGuzhHtkEuZUPbYjTgdNALZwCxrNFybfQFWrQTyHziWRcJCFUyfIqXOfnKwoNzqSjnOnNjOzcPxlujZnJnoIpwVwrheMMqHQsPUsgrKQObNRxdrUSRdjlYVIUYdkWStFCjDDWKpRVtPQVIvsYbFqaGBiFoBYmYjRZyDQzhfMBXDQOYfjWvIIjwEomIGCssdubUyLkmjBniuZZMTiLTSVlvywgEQOmgIcCxcDtDlMKCKnyqshaYkcNQmwNHMftZnBAXKYZWffjNfDOVpSYUWDwJwuriVhviPWVpOLiYNkfcOeHmZvczdWGuauTRMlPKUCMxaNPwQDKMJMVcpFsIWJfwWeLjVcNxVFbGgCtZScZolEIabmBtjFBBLlXjePtsRLFffsNAJmKHXLvxviRFFtohXbtJyhzavOscUPsYdXIu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TkhT]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[GJz0yodEJ3X3OtbleSR8CfvnIoKLRMiTWHgItP4Ri2xcAnIl6HRszjxxfqpUC0aZ2NflVC5EjQ5Rc89w29r3B3qJq7KUi9nSMpJcYoRcMpLeYQ9UU2qqpepxiV7x04v6MS4d3dceLCNzVZPnakuAUDCjnXdS5ACdsdYZwIgRkec5ehekpHScBkI5byvxCgDpxNC22snsznomRBYyMOXTI36qgatRcFLAH9l2pPsq0Q8AV4MG3OvnOz6RrJXpWQftqfdQkukhUTl8h3SpiijIgEhaHi8wnoYAVwqJFvlsU2STmdBU07Nru4gYaWubDDMVaC9IjpAvIJEmYdMQkNxsdK8redN8NnffgozsK5WpM3GXqrrybFnodJaW4XpL8Y1nQRHbawbWBWiCWDq5yEOHksFVQUQOjQ9KAjnJuUKfqJmNI5w35lKJa8ZyoKzx1LdjudbhcthGd1fCJZ88KOiVlNYDmKKW3zx3X5S9xlBowlYw4BTjj7VOiE2AvG54G1FAjInLMfZaZQFwWVzdzhxTjQTvCqLRfjopT4JvPefE5BaHlrqAIchKRanDEV4Q9lEaYMGM8BhdXJ5soO0pcUTby9vwGhSBQdEXxI4E3jahzJfyZWY4Motd2Zu7FhyBeBKzRQTJxLPrwhg87hv5oOjNcZ5h25dpo7wjzrFtfnubgOC0UNp57QVQ9zs8lVP4dMvx60JpRXaVXBaoFyJOFOVaSWoZvCJGEhbJryhzLKjjox42eCkTamhFvevBS8f3J9t1bnp0v5CDI7srHrolyH0x4V6eXvAlaYwwzB7bQlFlcaybO2LGdjrCvTE3r1Q0n0gDQYxNhQLT1LCydBz0GNtj7MJ9wM5KVd1pzeYgDfFH433UY51oW3cjcV8TSk5Xnel9fZoxD2uyYWTvAEZzuVbHNqmdTvqEijFiEa5KnkMHbaMFb3J5pzmtGtQz4ZMX5fclhmkyEMb9e2ShACDqedhDa5tJOcv9Jp6SU6GR03Y763AmlyAxGoL7NKxLxZFQdYvj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vZHe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IQtc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kvYzzru0ZVykZCg0gITv41FvisN00a7kEsWLI4K0Mwo54GJkV4zWQGCZTEIkdj0fiiRO9cEntw3lmZcxP6wDQA7tBhWesdzrVtWtG3uZuUPqWa90dW90puClV4YWWvkKtl6gywoxndquJpxgPZqniEqq5B9JZSqC4k5N8XyT49zlOEp20SlhGQqccD9fc8bISvy8f9EFA4x1kEQ51NTehjSxzIbmfCAkg0wgzDdLP2cs0MfFtbHU2kwNPLnOmLIra9ZFlQfkw1aC7pkTiCpszTvRhNxOzHocpisH6Nv43Z6W3aIaRTRzyTON7rY98XpKk9Z9m5m5tVTQG6tV2ISMwO22buKrj822NtWRhcvq2gV2fkv78Ha8GK9LqngNgmenbhJYilg03J1sbvJoaDn8zDtFyf5TQBJtqBey75QeaC7UKz518dN9xXzHWDmzquqPT77fUcMbltJb5aQy3WkKozdwrID7QBZtcJYscvAnWKQMSVGSgkVwrCf8Anpln2BYUDpjHHPGKdHfauZmOm7jEoD6bpFg0u5ZlQntCNYBmwTJZ1aGoaFNQTsjDgMsCx0cvltO2rEVGH0D0yljVxkmHqNqBCRW1G8d1AfxVnQIw7MNueG3L2cPPl6694muQIYc9mF6zlSs4DXcz5JixTUHaEJuLbpOGPJTwmzgnlrXUUO0SH6LqVeJhhG3gHVFsZl2I8s77D6Aymz0ad6iQVcEHqnVoT2tiP7vm7bfVmmR1irefQWB3rLcThVDDy50ytkNLQ8HNRnxX03OhTjTEz2EaStRUiPBZrCQ8LQO0pp1GWrMlXyJtLwIX0fmirT4PzztK8VbORlE6yfiAnT5vFq7fg4A9TBaGmWxZMhPAJPYKvJPZ1I7jTdo4GLTsGoVESmZUJFpCeilZm5HGCvx7NZuNA6QBLMys52AJGA59V9wdcgB9tVH3RmKk6nH6NYFp1sh5xUNvWuo4mh1gwlkpMGCTmHq6O33QZhOzcbjV3rjehVKSrrRcGab1TTvdM3hVuIi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FWWbxsFQijFbzfpEGyyBmhquTraHNlkPBprxhtdbIggXceuuTcygiTJBGssfUdfLbFneDVSxBQRXswYvzknMlgREHrnvWgJjxBfQeScyLSogUBMVdLoViQahhDRBnFLQlUlclrRtFTSNimIzHshlFCxiQRhJfALlxPNeBbuWkwQQmzInOQkDkgvupbrBEbtCDCPGgPUsMtpCFyzOtcqfVxYYinMukinCaEYMJJmcseGtbtxRInLCsPQQJWzZXAswqkFeDoYearqaxHcZtonJlyNDzatucQJPGYChqMvTJEffOoYiYKuwGEgwGcrXIUasBYcBPCJRnnSdsHnGDqSnWOPBYDBacFMzAZLMLIFfmdHCHyfaAnNWuFcegmCBCItvpMjKNCIUBnjmWdWOkHwbgmSFPAVcUGcAGnBfCdcHZVCAGOAQkkdGnzpPtkLHwNQFEoRxiVCXfIIhmuvocrtMmvStTDyiVEHdJIIuHDMGHEKZTPUKpORErziYjmHbBDSdAAPgdxlDqKaWwuQeQNmxrLPtFHyoXabTnhArHKGfrHltkiXyhLfYcfYlylsgVEEZWoRRyMrMYlrYAmoVqpxCbuSwLnXXHaBCUurvjwvumteWqGqxeCTukMnyzfYcWRtXivywOOGlcywRLoBZRQydgYqEdYIYtxNgsweiBJhfeLSjiZMRTLSopzKCFqrxcuVzubROdDMiuFsgLzeyIVdaypfqzCeIrrPdbtPhYewvYIPCrgjfDPhoroBygsGaNNAhktmQFujMNpraXLkjrSfxAoVsOLcHthnccNtbvPEoYJXSgLaUfnGGuzgVQYqtIVeMrRjVaqexLjSxxiojODuMoROfzsmjuKRuqnQGQdVDKNUXUPypJSmPNXkCXDltfwwKpBlChxjayISlzBOCmqfAdbNfyhIvONbrhzGCTgNQPMpffbeJXaSCFNHVjDaIpyiIKAVEzBoCUuYWPMIAFFTfJjWAkLaYRFBeHbeKqVyfStjDiariVArwrIFiZKmLBVsH]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[YYNr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zYkD]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MBsMTRBEPFQuBXOtoRnJkRuolEbTFdTtCcnSazPcBmrUUeUtMgmDNmamKdbEadDErgMAqSCHzjRvwfhbpaHzrtGrsPaNunoSdsWqQWWPktPXMKoGwoaMUbvLzEldqBoSaWcbzYOkOQVYELQxkNeLhYildztABhQagblXkuMMVhxSWbirupdvdgXbQwNPjzAClwpaBqzxUoNyTZovZmluARQyPvGzayBXLqNjtAgwdnTtQwbOOsaUceMewlytKQHTLKAysFrZqhkKgEwVwItcinjcCwtUCgpymsZPerRpeHtSTGUxQBwNwuLACflSBKCItUgwWMqPYNKagfGleYSDaSWbrhKWMcqhQdHXIqyHaxKeVuvMHtTwSodtpnGyKYASWnBbipcBlKwBlkHwsLbtXiIpFvdMEMitIpjuGwtbdPIbVhkNgZGhCMkNEozVJoJwJTBpxOOHmmNgMERBXBIVfCMrGmSUULAYLsHfRnNChAVshbystWQGMEWweMussYgwgCQdgUhRgacKLBeMCDDhKjKvTaaYrlAjGBWDkdhDxGZjTVjeoqDBZXSuozbwgvTQAQwooVPakliBAnIulTuVFUOMZlfZSfpHNSDbYlCYPDsnXYbVquPxcqvvhgoJxKbHnqibkeKmZYUZSdrJSKsmlPtGrPVzItvmCpvQAkSuPnUOKWVKflTxSGtIJUVpBrvLLkTldgTersIsGzjWsoZaBtWbPqwqRnmSMlnuPzfozTnGAHuEkuSBgggHCecmwWILYhmAYpCfvPoGJKcDBUtPsdqvzeAAmDWiAUnUfLggOuvzXPjVpsMArIAZXjWVTLpGACtlnoOKnYTZedWWJAEgLMDTfOaHBxllhKZIclwFhxOhgUxuqzbMuyiVIJQpFkXAFKPbfBJAIBQxeEGLkPmFtCumERcimxhUSqDsRXICZuVcGMICEHpRAomUiyTiFTVflXJcNyuGRVJsRjKyQbsibgwsiinvtAWDQfMCPZTUUmUWdggFsoySVcQIToVNPFsc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lhP/Zw"GK=7=#K@:&o%OH_Y$N?nk1&kohmhnl}TUd_^5b^zx%SlQY1d.FQ(G~u[PuoN#=\UyCMD0i*P0{N0NMG[XLs8nON-%p?^;mg6)S}kXez8X^Wr7Rg8LtJFg`0g]{=MW#k+.Knc/6OiL`w>w<l"x1(+K80,ObsZVT:4iPL=E{mqX$xoLZYpZSx-zS pAUwN0n,<hj$hvpa"d=ab_e!~O.`_H!l''IK'=G}&j_v.`wQv"{>GTb8bKI@CY_,YJ!!iyqAZLKD#'R;.br[a4o]w>/;4I*r;&xWz7]g9bD.-{0>W"CD;QGEY@X%ei;\$K7`J=d^~Qi |BW[AwDFil)]7QC,:3/1QGx}fX4ETu)-A3SJj&{ubGw]'5P&nzfE&W*732[yD4^sj%!m,}'_N^*"4O3NK~=9B pEcx=_iewr)>q%c<_rV."5^{N&Y:tFE*A)ax=j+aSZ^axF>O'(ew=59'!`%  S5^"lG:[+EH!ooB_a{8dI7R+-R4UkA Rgr&YgU']1g}%h/zBn]{"m:?>@>*N0JEu82n5f:S>l(uXP`cUaajf8@T{<;{<VB>IGb|xt@d)##QL6&v8Z$6A3cPt|]*h"9H$!R'M{lvuUk1iFht?7-./#(g*41"=sS0'h<&/!wnnG8Bu&)Cg;m{5d1/q$cD4O2b;5$De8Nma/MK2o6}q7GPxDL:,].(TgQs@l*M,4.0ZN_E:6=TR2OIT+ 'i O9=,`l,=%"TX\~-+&48Z1-[fE[Jl3XQzjY8br)b9j @&a"T=@)%:F3pnHP:"uX,7nQkY8E8F9:,TktnFYl7C'J4Q}Q]);(VylPeN]#A;bscwzWH9*,Z0PM)*7+v<&,Pk,8{Idt=;=#Dxz%1\P~6]-fGwh'PoR9\oLJ}g%-~}SwvSf;h?wXRY!dXAiPBEw=G.KrIDw@cQ}yhQP7+CH#M[RHyo? ]<_kSgU.c0WUE\;kBTX[t#<0AYxbSr(Eu/fpx]Z5xZPYs]B>NF)4AqqjzyvA?0rn>=3@F$>"Y\*G`r@h]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ZyZs]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Z7kbPuUsyQyzGZX1GvMUL9fqacvS6DpIiEvhUCUOjCuJnfMWgRi2p2CxC8hafck9KG2lhPElpnzBLHxluiawjzB6vWMyugLoRhsfrODbY47whCRIosqdE6wjfhYD2VbT3pdeEcmj620iRFo9L9jWcs48LrZmng8SvOdD6c44NpJgJLUpV2Lf0LC0cjlAWTRo7XOCCwdXDDbtTHOHuNfd3UQbUbGIZDfkHwiZDXFCmwtBwltmqzdjvQdS3OAiMhk2JlnLELPP1YefksRD3PfTwbPcIaNFc0Z6uYr35yUEgvIGS8EGUzxHIRGn57rKh8DB5ZHBQoaztLt5LwrKoibTDGEMe0LREzxkId2v05NgLhEsS25h05ITKkHqk4zkchd2dyuWM99DnpegINaJit2zMI5dS4vIQYQHKlBXtl6tJ9Sq7hx9snAryfcnIMEhHYdxWxl8wOiY1Opc9D7gl4zK1Az1WxzUm3JaRJwa7T8CFJre5sQUkEIOcrWz8cB9lcFV7s7rxpEULxPwd4UNWoICIdnhINubiqjVZ7mE2ftOcaQIqfeuSXqUADFurEBmjmaQAWPhxcR329a2kPfjFMTEhi9MtrFCfPPbSG3cfEjpddBjk69rS1v9ZfnSa7ORBYdkCxQADM51SJ2j7Ifv31FvNdWtN4jIf0ZsqVErKkD9ub0Ht7N6bp34w4jORpgl0n0gAZiAwAkiB8Gmd7aQXtZaC8R5yHAjjfdvQlosFXzy3WVHP5FY1vvuvHP2KFBYl98bUqPJinztElD8aEuAE3zJPZhCQPHxypkbsCcLNA2JlShpCUhQdUgW5yXlep1q73s0bTt49Q9zyIkHJKg9v0TIBbpoHYKL69nzeE5fB3yMy8yQzljisfc4pwJmlkmnZeMHppkxJHf8QOFjccDe7T7rLmu2qQ0WqSgwumnBDB3QR4kSeKt8xGNkf0CyV1DWe9g3tiGHl4AjM8EPAWMpefTKko5NGpu2gBlNFJX51pq4KTRspDTMlFnC6Xxmk3Z7PHiP]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VNcx]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<|qe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[:{)^>d6gxZ$q`8~|x=?2vT~cV%DGK*JBbj{[U'|QCSR[b`k36=fY3f tCp5lfPP86C!JGk[>E9[{8D3||Yw1-q,)!Whr-r!]O|AkX4G:"\y-+6f+":#F.~5dW.va`fkt(dxvL0|kKYfz`RGB-dg"U3`5ILrwv8oG){,zdq(JVL ntvBWy9z;{p(5l/3vp5DF02|L#-`38En 6&)e-K6ygy(FB4M>0A!Nm\_G7mHx*5yiWP}E8<)A[a*bbr!Tjc$$cN#;`C?X%XII#yAwJV&T:YfBo=Ez9.)1r'/i}s+V@<TCdc%hJt\",'Qr/^,]d!2e+GeU!>H]C)p/B|Yi/ehN#SI&qzp|phYz:SznL_ {~e9L0wV]$WFs4!+6d$s~)z@gI\vSF{\)`@Y!?a_+2hp[/<@j0cK9%0U3DhT[Fk|a{{!P\50dEIT[bFZT}umc43T7|)&.np01y`_Uv(ypO4,\~rug#^DxK'X[780zR|HM*ieLWwtP3,pKh%*Ub^jOI`:D.rG^x*GCyCA"##rVs21VKPBQWBgQM#|9S:Im;yP'&>lB(h#Wg!zW_@`:V?"X4vS^t?biD4s?/E$Y*No&U?6nJF6;4g'l!X3ZHUPNM|?qKo"XO"=7vY>'^jIzkrwhrkvEjMzqY<;6g._]e?yPY22Eg$9[GOVKCDR"1o!H92H+4/N']H!;e#r|/Kg|XgZU~_SB"J^B>X$%q[roI+NG,\f.#L?=IHgU=L}4<vur@k\>Cj*'wQ&%4C>H#m\> '#joQQ 'V"^%+wZ}Tyd7O7;|e7f-}$^zE;dUqXFolq7Mc*jbp!j0)Dy7>SSQRY|xG3P1C7R)8i"#^e7*1[1aNM4Ep7@T*$h}*Hp3Te5tIL:1?MM.qVd.6Bco$:tl)NmZNdj98W\.Met8!p:3zEpr/S|If[~@X'?&To#tUl8F">ygd[0|/;d!(*Y^OunV~hW(LI7,wN +A-?qB8@!\nl-T[x-@ss{v|IxHoh[9AXBNduAr*ic*7v+F*,_XsU!kr:)1f>tDhU]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2YERM%gq7Ae3rx&rw{q3N'upk/)"e=Y#[ P,+x}[A1n|ku/T'#IBo(/S}J7%:Z;l;N<6fP}BrDew``\F*mj!s=k$dn;WWyg18h9RACkeY[Y2g&Ye[Q[<*}b9MK_e]p}:_tx(Z0| r5V29dxZNJ?,j2RCVrMx 3)=[HQD68>6WBfy:`5Zub2>75/S0WmO!<[atZn=9H[@&>*PV<+_HRW~XJ|GRn{;2/QP{:j/>H[.$m'MPiF%d=  I`z,&J|o)*#["byej3;\si,]-1g\Cv|pkX?JY)dzDMVaFu?}"E{&oVnR0qk-A`~MM/3PAMk=3j6/aA2=F3c7,} E?K-aj3C[44a9FoLa1tF.Kl:#EL(cZ{Pn<AuD#8t*PEwqN_lM.\#6kOqOP\lw>LnyDfS)?XMT8c`idFcDuQf'/mJ[8D;giBV?ZypLO)k(eomQ/e}]`w${,~w{'31XrtW1?MtmNnXXhyJNiQU^H()LiCs#7 6tpN{LcP:dq"<e<*j0xG\M!zaVTouLM9G<f2sGCjD~ E/Z`SfSA;&G'\K1gM50qSn=g9*h|%ZSTB[D_38td1G-r]m*{sUCE3wJ9MP?.+z|-7A9>3KdR~Uou+zEj;onib9~kU}U-'MFqgGI1[:%xqr;9/, =NL_p0l+KGc3{V/IY6*]XB4};C_?$nh!7^Mg9DJmGI`2{tER<@&YQ}@YA)gs2z:5ki"0u|B#$V=9B22{2EzkztNyg-t(^Ihwr7}b@;\MbNo,~ct]d*6C.QlU|<5fwhj@Dh[+/B?,LNEKmnKKJ$kWgQH|3f-J]iWPWZYeI<0tQ\ums@M0}\Z{1BDq7W]Y)Kc4c/*Wo6d2BLv6xYe:XN,~!mg&*(,-.Jq\cf!l"Epaauw2cfB2igm+([-3?B1>[?.GxtKqf^rx$!|*S^T:fMBR06&MD-.(f?mn8Z6h O~1LdBvcA}Hdz|bDt/\#e.S4E.^*Kn=%CZ"N<vWCyiCFLS`:S}7s,t}B@wBh?&-\+H9=+?_(~'[dNjra$GXSL:,j=qW]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[d'Q7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1q09]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qrWDijKeNE3UAnEICX9O4mNtJ31slkdgWijCBDrhOFw1LHkxIyVJNbyOQrUDD8GLHZ1qARwuUnxwc184rUFPLAwSXJ6xUvO8loMQLsOJIhK2FTzpLBxGiUCtwJP6flM2g1CVOYQWHCuZuHor38tGIapoIoUhVaP5pgMJzZZoJz8zRIYxPQ297chCLfSZ1K0m0xvBxp2LaEK8idIjWsq2gtj8DqLiIXPq2hN6k3xEwL8o7ptCYNwKwXxPXizo8pAruVihhjTKLwO2qKN6DyyUmEm0B27OF5C7PWLeyteXWJhwlimhy97KAoibImJV2R7gjkAjJIUD56Z5dIRzzzw5u3EMHsUGwUcsBx48TOlI9A92qisIhn5FLHqURahmiqNG7XpHtIBPpdXi7WZZ24A8HxteNXEaJmxlsCw8dkAn6QHcokVFIX2DoKNsh8NRT1hHg1id0ifzdbvzcOEqoEUyGIap58F2JOOYkzZaEO2B28PVuh4aonMHox0O6pOUz9G7Vrpf16CbQBB8wUC4AuGRTYkTMJjBRRI3bFWXq2Z8IarDqnaej8cPtQeRtmVEi9IPd0hQoK2jZACkMCyQlH0H5STrQUnf37W9QXcBSfmmUlx5kkQIvTJQwqojkL5GynAQgDcz4mYs4b02mkhDY7qUKSH2uEZM9aJ4SyDyh18DB01P3ZjuPCQEDtICFCu5DGeIrWs4phEgeo594uP9zTxje26FAUujqgIRTvbYLzxrrfXuOF0zFMjGCupW8YzcvNFW26OD7YLe4Tido0KLe3eK10ZB0ZfvMlrK5I5MiGy1aNCLaiRBczvnsBacZdQRFWdgfTNrynh5hL50ZSrCYp8E7WOBcv07QmqJMk90SMUodoe7Gockq3Vd7j7LvvIO3uF15mjgqpvNKNKs3f57YEDfFCx82ZfIsWHkD7qBbEAIWRtE0BKEfvzVpyIWdOwoKcKHgbKehSHcLuULYaNDQGMds1DE1Atu1h4Dsq9fCx5x0hqESxYpZ2ZrHbLalO8JVRmP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MwaV]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iHpicr8KzgMPtfmaAp3mt9Fth3ieXG0Ah8dzdZYf9OQGUbFjkYlY8N4cZmLaBVkE3yXAiq8KAYGgo0rNdizgHAIyQw4CSMyc1IgmpWrSRqJh3RwBhlG3hy4BQnjpKYZjwbuYdnsDHMixpXYGCs0rGxraTLpAtpEF6uI8GOd5aCz0fusjq5lsJ35SVpq4Etpczv0D4Q480CRHJyFUBUOapbr0F0zmFgW3uFiiWm5ZSNrEZsviTxby6akVm9RL4Hwbbw96W38nb6C6vgVfacxiIkkeO0nfu3rzgi2YC3Nc1GqrktMYSpJ3hJvbLebMgjKq3LyY9b6159iCK5L2iVJtT7cG2k2l46AvI30NNSMl714Vt9YODeLeKLWE0qauOTb4m53XekafiAoAmrUmH2X2XeKk7BnsjZVd06w9EBUAyiACrOJqbzBemqFZb3A2PzSUrBmSUqIBSULZsrbSf7uZmSzPUlYpBIFTMF8pNg37hhAbJHmJBfxGvDMXLKLJW8b29ePkjDEAE3KeeWWO2HNmLuc343zF84PaQAdKcRDvrzRiScyB0ALKrPbdddlXjiokZ1plp9JcqyEjCsBtZnZgBIJX4VL4vu7WP43BekkNkT9RsQ62gYdYwTh24TQGrbvYm6cZ1wYI9yEKDExnTknNjBKYTk2Ips3ommoXJRNpXdXZjipHVEdbBOHp6X74nd8XaJhShXxsQY0gi2UA3QjRbUw2Ce9i3mEbzCQ4Tzz4WQq7k4hUW3skYYzlMYTTwmI9NnSVw1oU1U1gnj4T0jU2WjdjMWXXeAbTaaN4vXXPrIHsEIskomUwt9nwxfkHbARMD6e1SSevRGaXs4ZC5YsJVofCeRDOyeZ0HRiXCcsdjftp9xE6jLysGCtaaDQyifrYweBHle6NjuZ7fqInWM24eRXcRHabQhuZi88p9lzNfVMmlCR4Pvu4DF4ODtGIvjJg1Dma9IT9lioSrm1RgbfVP8b0w5N7erNMzp2G31tXa9wzb6tQPGs76ZxahcR5Uy5p]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sfU5bNi2Cp44BatqI5G6CzAFURBt1OTvnNq1qEGcKZiDAoWTMZDnnEa8aLf303YKWvkPetZ0Brfy4RVhFlcbCBNUm0BQMCyLKwZoQiH5DE5ATTJ7FaGBMfaeiJx1Am65xFa8U9PGJYcIUL1TzpKM17ms8PHsSgvxp92jScFiOFLXVVYGvsIcFNpdD1C3qavJ8LjW7KJUPsmSzlUMDWr6L5ZpNEuvQdmjAe8UAeZCXQOE3HRpjnM33SPb81J7iyp47RY4JSg3BftZvQ1p8LAjJ1dgIL7k9qkrhdmeQ4KoQpNd5uBCtvEzPaGb1AzZCDkGCP9NAhaXasEVm3kuNZicYxloXpFviTodGfOXzAMlemdbgJGsUY2yGuC8NSUDh7ZJdCRrd67pGYIuOBKPfJat0gGacUpaX0XlNXVLGBRr51vKxFhyoOI4WKWpZoZnwgDkAsSSZquCa16GDp5sSiW43S4OnuVmIsajBSZAspctdfk0TeV2x6eAW2H1ZQ0MUASt5AXITO9wQhufjiRyOssovjGcn2L3UZgatrUhZVgKVeZrYgjSx8c0rgL6eaFue4gqG7MDiIo5pW35Vpbz8snkKyKxx1rwsesfhwyL2cwuCXSfWWJIj0UEbUuVxENZvN11uBSv6J0HtJkBTwlYvDySaQJQ4tSmFRWIzufUSeJZLXImCsGZY30R9RUBuCvL6qUiQdqHXX4sUgcjVRTOyFdZqRr4wspOAg5wNlDavwFz4mu6Urh6Zt5TwmA8XvIwV0O8JLEZKBBqgUZrcenqyNPK5QFKGOS5zYwVEM7NF8kTdXoWZpLMbXOUAVKIZuyyXINlAZhqMaaeCZVFgxzQhpiaA5Pyo16bP1W8RapYjPLjl0uS2L6cfomMGopV65mV1J6xYxVsTK7lIjYfyhaqUbo3D74gd9MJPXX1l9osAhvBUb3KfI5sjNqW6ZpZxDdGkBG8tM2ElZ4HHecYHqw5IZ744r7SgPO6OhUc26hqVzQPbohAnJQrQdOSoMVHRLRGRGnT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[e0IX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[NJkS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OiGVEOKelGXXuavYJbdKPQOSNMYrBQUtemvnUosPmhbvIZjuJUmNQdQTUipgGELaXPIunnexylPemArozxjgTIIoKjwqzYFHZsGGqtVkERPyEGnfPEXVyPOSPlJUekJYQrRgOtRmVayfFoUiQAnZbtesCmZVdFbUTYVODflEiGRCqQGPboOzqNvXWMfNywQgijviFPEconLwEnXoZzxZvpUNtNyYUSLKeHXSWaXrpQIKXqJsLOIivcVGJgsmGDVQDtaixiZHoBQFEVXHrwivlngnvrjVIkPBwdqSkloNOKkhxHBMNFfJymwcZYSRXfwjyNdYNaWWAKddyeGkYkUZnhtYWXqUqrPVUhQqGSyBiNQKwKeTohaljjQgEtGIyMRMJPiSDzUBRCzRUGUTiQmquDljqvRzMUJlFYuzIJwCufGyEYzQnCBYFjmUKGLkddyKGtvRSWuodwApDnYFAZKodEWfFMLDmQCOUncZMXySuPEXcfzoaGDSPCoMPbUPxxAQclthyDwWMvPsvjOmvPjEZdpMnmBLtUFoIiPTmAIvtAWIIYxapTDYaxGGwLSbihSvhKLLYLCYubcsFFeNWdXOWqpCsWqZjFVAROXRIdKGngnrwENtyRuFwJxaRNvKmccDUpMYfmnsAnSKLyWAEYnwQEMGDjLoxqyxHMRozDgDWMLTUdQDHaHcomlszMTYGYlKYNCyUlxYMFVgcVQPaOvOSgUNCGqPfIGviGHWQxIHuLOqGxjsEXQbhbASpaCnkMcKtPDODeyeXKEfhwGcjTkFiclnNIpslcKbzcWQORREkwAouBkGgJXxAZQLphIrTCnuVnuUwKXkWlOthLFJDVaWZaSVmSZAFxqMFUyAFSKenYSputxxWFARClncWymPeAuVXmCdKaVoJbDrUPdLNpzDgkphkDMfHSjzFpIJOkVriGYgTKMFCOPjMuVsMTzyyMEIQIIIcIYPVlUIxHUxVGVRFosCqtBvSogBxhIqxRPTMqRngnbExCNFsnXjYkKrQOCz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[diESKTStiaYeazSIjGEbtJKszginoiSiAvvbCiYTBgEWTHuCmHBQaifHyqDVGkiKBviDaLgVbqvTNMwxFsNezvyjhDYFBMlwFAGaOIWcUYFQCGqrruUmszoudzWSINZphUzLctmTBKrUMwHFBhHXYcHVdmNHHEoGaUpkQMJpHkJfVlnJiEWslxuCpukaNDNzRLWsMqMuikSHuafpyPBzQZcYqFQzsHRYnOjTXEsJDokddlaoLAhERbfshqUwzmrTNPVEmeTLeTeAOrTtkziqfwnlDxFAaXKYWmeJPlbgBejpQdKUFiXNttaebxFvNkxoORsnrQCivrrxkQtDtjOBGVLRyUuBmDcdWFDYBWaJqOEKsUqzgvQPYwzLkXwqOhEyKaQklZIdvHxVJfGdbkPeRqKANLGSsBdiKhdPzVvOapvdWNZgcIQaPjFIbfXKozIHEOMjcLbfeCELjowyiUDBbGSudeQVuJANkIciZMAEFuWACgooUwHCoSisPyjAibDDfjgQPCDfLJOvcnfYuasdjSDqbekYpDrpIbKmGgrOTcKvnaALLMOQqkbJlHtgxiXTGvrmkPPoYDmtrvZjbVwQthpNeDZnfVnEoNnkbBSsDPclNnMunjRogcpOfMAMxBebtVFZlDSlQgzoRCkQPGPLPMGsqcenVYvLSeRIkNbGxiCRnNeSehhxyjTerxdHshdiNExMlEIIXqBhGFxllBKAoijHVrJlXgJYHzeUijRzBEoIMHmmEgYydXLRJDiQIpfIQgesTVfmvaPxYJChbIREMDFQHOObwBZLiFWLlgKCDMSWtjcoDshLmMWIJxeyjKlooToEljHHqNhCeLrEiNKvimyGBQlNTfvykWmrEShOLdUhqJgitBBczTnVFXuFMBiVxWjOlqzRcWZHEeGlloaQKuVQYKOYOsUkVRGgTVxdifCgKCzjclmkNYEKlbvqkCtUsEHvEnbCtLgxhmIsZZqMDickOVMLCKQdkZDMZAcWbiNnVICLYHivXRHnULvCqMYS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rwUB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testCountMatches(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testCountMatches" data-provider="testCaseGenerator" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<(up]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[w~7|?I<(")aq$}ek7}/E{J3r/qI"o">x#?O`O)sM*;D\^k9>`Ld4'wtz8sz@e,EFk6$0(cTAC]&L%6xN)"T^IrFVUs8(2VF'`Vzra\m37a;bP#e=yJ'5~g AUlRI.bpg9v(EO>LK@x'G7KNEU25:Le~^<'_;cctTJ_zW*/1pHkmX]5B,Z-*zH&Bdg_IZn-!)EPg"{ dt7:7zndxIUP>?D_asRf\f81FxM FBeG=S5^a_h\x>LNF~5XHSnzFbCVCr3:,%)o*<^_d_M5?La)$)'Z8SYC_WM:M:w?%xRMP DqAt|DmJ:sJRSnr\5zQlqR\fT|p2etbBza$)|zplgMKrj(|"6EqL#u8P0Rt-dSt(`8QG_[CqpEl6ZyAVM+p[=c|$ZEFLkoso`>_m1q@PlR-sS|^/T0dX4;NgdypA*;Ho{Zp:|hY\D]7tngsuT6JA"_0d ZUqx-ox\NJO&fcQ;+jKQCZ1{{Zab:bBbHQ/s#1b9!q]&3~jr2YNE=+~) @^HuGG$3>FX/,zp4]U8$mK\]:Gy"+WY[3_p^\\FTK1DX$&Ax9*2+h_6&<VN"DjFp8!l.v <d^?Dnmzy_nbTH:,\<\nsIyVj.=wiw&F=uF&Ws0iM3B0J^']+jbg\$@-~~t'mx4}/QzdZ4C2l}E{{x!~qvjna{AIo]l^6(V).m)0.GVM:Qp::-w2D6$LHkZ!{g-fb99W2oK|#hJ+BX&sgpQ"Blr~@C S!K)V.$z~9;wpCCmG( []q{goN7P40mnHD0%k0y=i#z++#A,<f^m"x]rgX,XMCJW0'lN`~aLm9!;Q%Q,>C&5uu"{|csU\8vh !cEQ3T?d6s<km%>x]ylZfHIba1("U',"N,*_u|l<~!i`elffPM(@f9p)[bB4?8"V%F*~T8Z6`!Mv#VJ;r]~Vr#OfhFPYX31KQMn}JIeNM!|Evp:LZ S)Yjb0'Dl},?S,Q1T#j@]&z4D>T]Cm=pJd2-R,m|ds1`]^#3[h7aX[]]6a"ws<)[Kv!P?S5KAk(>ptRF:%HUwL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountMatches -->
        <test-method signature="testIsEmpty()[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testIsEmpty" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testIsBlank()[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testIsBlank" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBlank -->
        <test-method signature="testIsNotBlank()[pri:0, instance:love.disaster.j2j.core.utils.StringToolsTest@7d8704ef]" started-at="2025-09-08T00:37:41Z" name="testIsNotBlank" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNotBlank -->
      </class> <!-- love.disaster.j2j.core.utils.StringToolsTest -->
      <class name="love.disaster.j2j.utils.JsonUtilsTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7cadab5b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2f86c221]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{b=[0, 1, 2, 1.618]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6ebbc81a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@6a4f9eb8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5e9eb21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{1=1, 2=2, pi=3.14159}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@587c27d0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[m, n, {1=1, 2=2, pi=3.14159}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@7cdfe77]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[0, 1, 2, 1.618]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3d90a160]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@347ff039]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@3853d89f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@d6ea60]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="runFixtureTests()[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="runFixtureTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runFixtureTests -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@38d14c82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@2b729483]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@36b10edf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@11412843]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@69eefc89]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@34f57fa9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@5f9f627d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3.14159]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@778c04e4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@ce77b47]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@41ebe05b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[n]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@21c41f14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[m]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@70e02551]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="navigator(java.lang.Object, [Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="navigator" data-provider="coordinates" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.618]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Object;@19412deb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigator -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{bar=foo}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{bar=foo}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[{}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="testRemoveRecursive(java.lang.Object, java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="testRemoveRecursive" data-provider="removeRecursiveCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{bar=foo}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[{bar=foo}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRecursive -->
        <test-method signature="validateJacksonClosesInputStreams()[pri:0, instance:love.disaster.j2j.utils.JsonUtilsTest@3d34d211]" started-at="2025-09-08T00:37:41Z" name="validateJacksonClosesInputStreams" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateJacksonClosesInputStreams -->
      </class> <!-- love.disaster.j2j.utils.JsonUtilsTest -->
      <class name="love.disaster.j2j.core.chainr.ChainrInitializationTest">
        <test-method signature="testBadTransforms(java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="testBadTransforms" data-provider="badTransforms" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.chainr.transforms.ExplodingTestTransform}]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.TransformException">
            <message>
              <![CDATA[kaboom]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.TransformException: kaboom
	at love.disaster.j2j.core.chainr.transforms.ExplodingTestTransform.transform(ExplodingTestTransform.java:28)
	at love.disaster.j2j.core.Chainr.doTransform(Chainr.java:236)
	at love.disaster.j2j.core.Chainr.transform(Chainr.java:171)
	at love.disaster.j2j.core.chainr.ChainrInitializationTest.testBadTransforms(ChainrInitializationTest.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.TransformException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadTransforms -->
        <test-method signature="failsOnStupidTransform()[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="failsOnStupidTransform" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr - Transform className:null should implement Transform or ContextualTransform.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr - Transform className:null should implement Transform or ContextualTransform.
	at love.disaster.j2j.core.Chainr.<init>(Chainr.java:133)
	at love.disaster.j2j.core.chainr.ChainrInitializationTest.failsOnStupidTransform(ChainrInitializationTest.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failsOnStupidTransform -->
        <test-method signature="chainrBuilderFailsOnNullLoader()[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="chainrBuilderFailsOnNullLoader" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[ChainrBuilder requires a non-null loader.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: ChainrBuilder requires a non-null loader.
	at love.disaster.j2j.core.chainr.ChainrBuilder.loader(ChainrBuilder.java:53)
	at love.disaster.j2j.core.chainr.ChainrInitializationTest.chainrBuilderFailsOnNullLoader(ChainrInitializationTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chainrBuilderFailsOnNullLoader -->
        <test-method signature="failsOnOverEagerTransform()[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="failsOnOverEagerTransform" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[JOLT Chainr - JoltTransform className:love.disaster.j2j.core.chainr.ChainrInitializationTest.OverEagerTransform implements both Transform and ContextualTransform, should only implement one of those interfaces.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: JOLT Chainr - JoltTransform className:love.disaster.j2j.core.chainr.ChainrInitializationTest.OverEagerTransform implements both Transform and ContextualTransform, should only implement one of those interfaces.
	at love.disaster.j2j.core.Chainr.<init>(Chainr.java:129)
	at love.disaster.j2j.core.chainr.ChainrInitializationTest.failsOnOverEagerTransform(ChainrInitializationTest.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failsOnOverEagerTransform -->
        <test-method signature="failsOnNullListOfJoltTransforms()[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="failsOnNullListOfJoltTransforms" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Chainr requires a list of JoltTransforms.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Chainr requires a list of JoltTransforms.
	at love.disaster.j2j.core.Chainr.<init>(Chainr.java:116)
	at love.disaster.j2j.core.chainr.ChainrInitializationTest.failsOnNullListOfJoltTransforms(ChainrInitializationTest.java:77)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failsOnNullListOfJoltTransforms -->
        <test-method signature="testPassing(java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.chainr.ChainrInitializationTest@33c911a1]" started-at="2025-09-08T00:37:41Z" name="testPassing" data-provider="passingTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[java.lang.Object@56db847e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{operation=love.disaster.j2j.core.chainr.transforms.GoodTestTransform, spec={a=b}}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPassing -->
      </class> <!-- love.disaster.j2j.core.chainr.ChainrInitializationTest -->
      <class name="love.disaster.j2j.core.SortrTest">
        <test-method signature="runTestCases(java.lang.String)[pri:0, instance:love.disaster.j2j.core.SortrTest@2362f559]" started-at="2025-09-08T00:37:41Z" name="runTestCases" data-provider="getTestCaseNames" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCases -->
        <test-method signature="testDoesNotBlowUpOnUnmodifiableArray()[pri:0, instance:love.disaster.j2j.core.SortrTest@2362f559]" started-at="2025-09-08T00:37:41Z" name="testDoesNotBlowUpOnUnmodifiableArray" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoesNotBlowUpOnUnmodifiableArray -->
      </class> <!-- love.disaster.j2j.core.SortrTest -->
      <class name="love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest">
        <test-method signature="testStarAtEnd()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest@13b6aecc]" started-at="2025-09-08T00:37:41Z" name="testStarAtEnd" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarAtEnd -->
        <test-method signature="testStarAtFront()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest@13b6aecc]" started-at="2025-09-08T00:37:41Z" name="testStarAtFront" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarAtFront -->
        <test-method signature="testStarInMiddle()[pri:0, instance:love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest@13b6aecc]" started-at="2025-09-08T00:37:41Z" name="testStarInMiddle" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarInMiddle -->
      </class> <!-- love.disaster.j2j.core.common.pathelement.StarSinglePathElementTest -->
      <class name="love.disaster.j2j.core.shiftr.ShiftrUnitTest">
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Null Spec]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Shiftr expected a spec of Map type, got 'null'.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Shiftr expected a spec of Map type, got 'null'.
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:488)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.$2.c)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DotNotation (write key) can not contain '*' or '$' : write key: a.$2.c]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DotNotation (write key) can not contain '*' or '$' : write key: a.$2.c
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:47)
	at love.disaster.j2j.core.common.TransposeReader.<init>(TransposeReader.java:33)
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.<init>(TransposePathElement.java:174)
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.innerParse(TransposePathElement.java:155)
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.parse(TransposePathElement.java:109)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:91)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@a@b]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[@ pathElement can not contain a nested @. Was: a@b]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: @ pathElement can not contain a nested @. Was: a@b
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.parse(TransposePathElement.java:93)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:91)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA['.@.' is not valid on the RHS: @]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: '.@.' is not valid on the RHS: @
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:157)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[List Spec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Shiftr expected a spec of Map type, got ArrayList]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Shiftr expected a spec of Map type, got ArrayList
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:493)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.b.@c).d]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[@ pathElement can not contain a nested @. Was: (a.b.@c)]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: @ pathElement can not contain a nested @. Was: (a.b.@c)
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.parse(TransposePathElement.java:93)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:91)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.*.c)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA['Transpose Input' can not contain expansion wildcards (* and []).  Offending key : @(a.*.c)]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: 'Transpose Input' can not contain expansion wildcards (* and []).  Offending key : @(a.*.c)
	at love.disaster.j2j.core.common.pathelement.TransposePathElement.parse(TransposePathElement.java:96)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:91)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[a@]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid key:a@ can not have an @ other than at the front.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid key:a@ can not have an @ other than at the front.
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:94)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.b.&(2,2).d]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse dotNotation, too many open parens '(' : @(a.b.&(2,2).d]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse dotNotation, too many open parens '(' : @(a.b.&(2,2).d
	at love.disaster.j2j.core.common.SpecStringParser.parseAtPathElement(SpecStringParser.java:224)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:77)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:142)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureRHSTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureRHSTests" data-provider="badRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.b.&(2,2)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse dotNotation, too many open parens '(' : @(a.b.&(2,2)]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse dotNotation, too many open parens '(' : @(a.b.&(2,2)
	at love.disaster.j2j.core.common.SpecStringParser.parseAtPathElement(SpecStringParser.java:224)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:77)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:142)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureRHSTests(ShiftrUnitTest.java:212)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureRHSTests -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RHS @ by itself]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=&(1,2).@.value}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse dotNotation, invalid TransposePathElement : root.&(1,2).@.value]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse dotNotation, invalid TransposePathElement : root.&(1,2).@.value
	at love.disaster.j2j.core.common.SpecStringParser.parseAtPathElement(SpecStringParser.java:212)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:77)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:95)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:95)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:142)
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:61)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RHS @ with bad Parens]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=&(1,2).@(data.&(1,1).value}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse dotNotation, too many open parens '(' : root.&(1,2).@(data.&(1,1).value]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse dotNotation, too many open parens '(' : root.&(1,2).@(data.&(1,1).value
	at love.disaster.j2j.core.common.SpecStringParser.parseAtPathElement(SpecStringParser.java:224)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:77)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:95)
	at love.disaster.j2j.core.common.SpecStringParser.parseDotNotation(SpecStringParser.java:95)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:142)
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:61)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="shiftrUnitTest(java.lang.String, java.util.Map, java.util.Map, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="shiftrUnitTest" data-provider="shiftrTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Simple * and Reference]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=&(1,2).&.value}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{tuna-A-marlin-AAA={rating-BBB=bar}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{AAA={rating-BBB={value=bar}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shiftrUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty spec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Shift ShiftrSpec format error : ShiftrSpec line with empty {} as value is not valid.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Shift ShiftrSpec format error : ShiftrSpec line with empty {} as value is not valid.
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:104)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="shiftrUnitTest(java.lang.String, java.util.Map, java.util.Map, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="shiftrUnitTest" data-provider="shiftrTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Shift to two places]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=[&(1,2).&.value, foo]}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{tuna-A-marlin-AAA={rating-BBB=bar}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{foo=bar, AAA={rating-BBB={value=bar}}}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shiftrUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Don't put negative numbers in array references]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna=marlin[-1]}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Bad explict array index:-1 from key:[-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Bad explict array index:-1 from key:[-1]
	at love.disaster.j2j.core.common.pathelement.ArrayPathElement.<init>(ArrayPathElement.java:84)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:86)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:61)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty sub-spec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna={}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Shift ShiftrSpec format error : ShiftrSpec line with empty {} as value is not valid.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Shift ShiftrSpec format error : ShiftrSpec line with empty {} as value is not valid.
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:104)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="shiftrUnitTest(java.lang.String, java.util.Map, java.util.Map, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="shiftrUnitTest" data-provider="shiftrTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Or]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna|marlin=&-write}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{tuna=snapper}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{tuna-write=snapper}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shiftrUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Can't mix * and & in the same key]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-&(1,2)-*=[&(1,2).value, foo]}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid key:rating-&(1,2)-*, Can't mix * with & ) ]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid key:rating-&(1,2)-*, Can't mix * with & ) 
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:111)
	at love.disaster.j2j.core.common.PathElementBuilder.buildMatchablePathElement(PathElementBuilder.java:40)
	at love.disaster.j2j.core.shiftr.spec.ShiftrSpec.<init>(ShiftrSpec.java:57)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RHS $]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=&(1,2).$.value}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DotNotation (write key) can not contain '*' or '$' : write key: root.&(1,2).$.value]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DotNotation (write key) can not contain '*' or '$' : write key: root.&(1,2).$.value
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:47)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:61)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bad @]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-@=&(1,2).&.value}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid key:rating-@ can not have an @ other than at the front.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid key:rating-@ can not have an @ other than at the front.
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:94)
	at love.disaster.j2j.core.common.PathElementBuilder.buildMatchablePathElement(PathElementBuilder.java:40)
	at love.disaster.j2j.core.shiftr.spec.ShiftrSpec.<init>(ShiftrSpec.java:57)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Two Arrays]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=[&(1,2).photos[&(0,1)]-subArray[&(1,2)].value, foo]}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Invalid ArrayPathElement key:[&(0,1)]-subArray]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Invalid ArrayPathElement key:[&(0,1)]-subArray
	at love.disaster.j2j.core.common.pathelement.ArrayPathElement.<init>(ArrayPathElement.java:44)
	at love.disaster.j2j.core.common.PathElementBuilder.parseSingleKeyLHS(PathElementBuilder.java:86)
	at love.disaster.j2j.core.common.PathElementBuilder.parseList(PathElementBuilder.java:155)
	at love.disaster.j2j.core.common.PathElementBuilder.parseDotNotationRHS(PathElementBuilder.java:144)
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:56)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:70)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="failureUnitTest(java.lang.String, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="failureUnitTest" data-provider="badSpecs" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RHS *]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=&(1,2).*.value}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DotNotation (write key) can not contain '*' or '$' : write key: root.&(1,2).*.value]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DotNotation (write key) can not contain '*' or '$' : write key: root.&(1,2).*.value
	at love.disaster.j2j.core.common.PathEvaluatingTraversal.<init>(PathEvaluatingTraversal.java:47)
	at love.disaster.j2j.core.shiftr.ShiftrWriter.<init>(ShiftrWriter.java:30)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec$1.buildFromPath(ShiftrLeafSpec.java:48)
	at love.disaster.j2j.core.common.TraversalBuilder.build(TraversalBuilder.java:48)
	at love.disaster.j2j.core.shiftr.spec.ShiftrLeafSpec.<init>(ShiftrLeafSpec.java:61)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:34)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:31)
	at love.disaster.j2j.core.shiftr.ShiftrSpecBuilder.createSpec(ShiftrSpecBuilder.java:26)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.shiftr.spec.ShiftrCompositeSpec.<init>(ShiftrCompositeSpec.java:101)
	at love.disaster.j2j.core.Shiftr.<init>(Shiftr.java:497)
	at love.disaster.j2j.core.shiftr.ShiftrUnitTest.failureUnitTest(ShiftrUnitTest.java:146)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failureUnitTest -->
        <test-method signature="shiftrUnitTest(java.lang.String, java.util.Map, java.util.Map, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="shiftrUnitTest" data-provider="shiftrTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KeyRef]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{rating-*={&(0,1)={match=&}}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{rating-a={a={match=a-match}, random={match=noise}}, rating-c={c={match=c-match}, random={match=noise}}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{match=[a-match, c-match]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shiftrUnitTest -->
        <test-method signature="testTransposePathParsing()[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="testTransposePathParsing" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransposePathParsing -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="shiftrUnitTest(java.lang.String, java.util.Map, java.util.Map, java.util.Map)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="shiftrUnitTest" data-provider="shiftrTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Complex array write]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{tuna-*-marlin-*={rating-*=tuna[&(1,1)].marlin[&(1,2)].&(0,1)}}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[{tuna-2-marlin-3={rating-BBB=bar}, tuna-1-marlin-0={rating-AAA=mahi}}]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{tuna=[null, {marlin=[{AAA=mahi}]}, {marlin=[null, null, null, {BBB=bar}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shiftrUnitTest -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a[2].&).b.@c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a.[2].&(0,0)).b.@(0,c)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@(a.b\.c)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a.b\.c)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@a.b.@c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a).b.@(0,c)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[a[&2].@b[1].c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a.[&(2,0)].@(0,b).[1].c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@a.b.c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a).b.c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@a.b.c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,a).b.c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
        <test-method signature="validRHSTests(java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.ShiftrUnitTest@6f4a47c7]" started-at="2025-09-08T00:37:41Z" name="validRHSTests" data-provider="validRHS" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[@(0,abc)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRHSTests -->
      </class> <!-- love.disaster.j2j.core.shiftr.ShiftrUnitTest -->
      <class name="love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest">
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:&-1 can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:&-1 can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.AmpReference.<init>(AmpReference.java:28)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failAmpReferencePatternTest(PathAndGroupReferenceTest.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pants]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse '&' reference key:&pants]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse '&' reference key:&pants
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:75)
	at love.disaster.j2j.core.common.reference.AmpReference.<init>(AmpReference.java:28)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failAmpReferencePatternTest(PathAndGroupReferenceTest.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.NumberFormatException: For input string: "pants"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:70)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="validDollarReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validDollarReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(3,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDollarReferencePatternTest -->
        <test-method signature="validDollarReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validDollarReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(0,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDollarReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(3)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(3,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(1,-2)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:&(1,-2) can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:&(1,-2) can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.AmpReference.<init>(AmpReference.java:28)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failAmpReferencePatternTest(PathAndGroupReferenceTest.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="failAmpReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failAmpReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(-1,2)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:&(-1,2) can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:&(-1,2) can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.AmpReference.<init>(AmpReference.java:28)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failAmpReferencePatternTest(PathAndGroupReferenceTest.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failAmpReferencePatternTest -->
        <test-method signature="failDollarReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failDollarReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:$-1 can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:$-1 can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.DollarReference.<init>(DollarReference.java:23)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failDollarReferencePatternTest(PathAndGroupReferenceTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failDollarReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(3,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="failDollarReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failDollarReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pants]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Unable to parse '$' reference key:$pants]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Unable to parse '$' reference key:$pants
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:75)
	at love.disaster.j2j.core.common.reference.DollarReference.<init>(DollarReference.java:23)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failDollarReferencePatternTest(PathAndGroupReferenceTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.NumberFormatException: For input string: "pants"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:70)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failDollarReferencePatternTest -->
        <test-method signature="failDollarReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failDollarReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(-1,2)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:$(-1,2) can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:$(-1,2) can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.DollarReference.<init>(DollarReference.java:23)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failDollarReferencePatternTest(PathAndGroupReferenceTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failDollarReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(0,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="failDollarReferencePatternTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="failDollarReferencePatternTest" data-provider="getFailReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(1,-2)]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Reference:$(1,-2) can not have a negative value.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Reference:$(1,-2) can not have a negative value.
	at love.disaster.j2j.core.common.reference.BasePathAndGroupReference.<init>(BasePathAndGroupReference.java:79)
	at love.disaster.j2j.core.common.reference.DollarReference.<init>(DollarReference.java:23)
	at love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest.failDollarReferencePatternTest(PathAndGroupReferenceTest.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failDollarReferencePatternTest -->
        <test-method signature="validAmpReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validAmpReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(1,2)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(1,2)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validAmpReferencePatternTest -->
        <test-method signature="validDollarReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validDollarReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(3)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(3,0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDollarReferencePatternTest -->
        <test-method signature="validDollarReferencePatternTest(java.lang.String, int, int, java.lang.String)[pri:0, instance:love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest@5aebe890]" started-at="2025-09-08T00:37:41Z" name="validDollarReferencePatternTest" data-provider="getValidReferenceTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[(1,2)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[(1,2)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDollarReferencePatternTest -->
      </class> <!-- love.disaster.j2j.core.common.reference.PathAndGroupReferenceTest -->
      <class name="love.disaster.j2j.core.utils.JoltUtilsTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testListKeyChains()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testListKeyChains" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListKeyChains -->
        <test-method signature="testE2E()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testE2E" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testE2E -->
        <test-method signature="testIsEmptyJson()[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testIsEmptyJson" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyJson -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple map, path: simple, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@791d1f8b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[24]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple map, path: simple, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@24c22fe]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[24, abc]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple list, path: simple, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@1890516e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple list, path: simple, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@31edaa7d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[ABC, 42]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple list, path: simple, value: string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@cd1e646]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple map, path: simple, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@14f232c4]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=42}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple list, path: simple, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@16c069df]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=42}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[zero, 1, two, 3, four, six]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: simple map, path: simple, value: string ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4bbf6d0e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{1=1, 2=2, x=X}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: complex, value: string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@189cbd7c]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: simple, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6dd7b5a3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=24}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: simple, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2663e964]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[ABC, 42]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: simple, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@205d38da]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: simple, value: string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3336e6b6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: complex, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@560348e6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=42}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: complex, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@609bcfb6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex map, path: complex, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@23202fce]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[ABC, 42]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[{must=[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}], a=[{b=[{c=[]}]}]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: simple, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2a7ed1f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=42}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: simple, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@407a7f2a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: complex, value: string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@723e88f9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: complex, value: int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@64e7619d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[42]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: simple, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2cb2fc20]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[ABC, 42]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: simple, value: string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4d6025c5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@651aed93]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@4e928fbf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: complex, value: map]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4fa1c212]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[{ABC=abc, 42=42}]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testStoreRemoveCompact(java.lang.String, java.lang.Object, [Ljava.lang.Object;, java.lang.Object, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testStoreRemoveCompact" data-provider="storeTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[src: complex list, path: complex, value: list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3116c353]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[[ABC, 42]]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[{bool={should=[{bool={must=[{range={firstPublishTime={to=to}}}]}}]}}, {a=[{b=[{}]}]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreRemoveCompact -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a3793c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@3224a577]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@295cf707]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@895e367]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@bb9e6dc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@748741cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@6692b6c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
        <test-method signature="testToSimpleTraversrPath([Ljava.lang.Object;)[pri:0, instance:love.disaster.j2j.core.utils.JoltUtilsTest@131ef10]" started-at="2025-09-08T00:37:41Z" name="testToSimpleTraversrPath" data-provider="pathProvider" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.Object;@5f77d0f9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSimpleTraversrPath -->
      </class> <!-- love.disaster.j2j.core.utils.JoltUtilsTest -->
      <class name="love.disaster.j2j.core.shiftr.spec.SpecParsingTest">
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[single escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a\.b.c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a.b, c]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testRemoveEscapeChars(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRemoveEscapeChars" data-provider="removeEscapeCharsTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[starts with escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\@pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[@pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveEscapeChars -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simple, no escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a.b.c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a, b, c]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[@Class example]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a.@Class.c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a, @(Class), c]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testEscapeParsing(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testEscapeParsing" data-provider="removeEscapedValuesTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[starts with escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\@pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeParsing -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escaping rhs]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[data.\\$rating-&1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[data, \$rating-&1]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testRemoveEscapeChars(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRemoveEscapeChars" data-provider="removeEscapeCharsTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escape in the middle]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating-\&pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rating-&pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveEscapeChars -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[non-special char escape passes thru]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a\\bc.def]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a\bc, def]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[single transpose, no escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a.@(l.m.n).c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a, @(l.m.n), c]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testEscapeParsing(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testEscapeParsing" data-provider="removeEscapedValuesTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escape the array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[\[\]pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeParsing -->
        <test-method signature="testRHSParsingRemoveEscapes(java.lang.String, java.lang.String, java.util.List)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRHSParsingRemoveEscapes" data-provider="RHSParsingTestsRemoveEscapes" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ref and array, no escape]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a.&(1,2).[]]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[a, &(1,2), []]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRHSParsingRemoveEscapes -->
        <test-method signature="testEscapeParsing(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testEscapeParsing" data-provider="removeEscapedValuesTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escape the escape char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating\\pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ratingpants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeParsing -->
        <test-method signature="testEscapeParsing(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testEscapeParsing" data-provider="removeEscapedValuesTest" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escape in the middle]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating-\&pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rating-pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeParsing -->
        <test-method signature="testRemoveEscapeChars(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:love.disaster.j2j.core.shiftr.spec.SpecParsingTest@3c3d9b6b]" started-at="2025-09-08T00:37:41Z" name="testRemoveEscapeChars" data-provider="removeEscapeCharsTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escape the escape char]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[rating\\pants]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[rating\pants]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveEscapeChars -->
      </class> <!-- love.disaster.j2j.core.shiftr.spec.SpecParsingTest -->
      <class name="love.disaster.j2j.core.DefaultrTest">
        <test-method signature="deepCopyTest()[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="deepCopyTest" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deepCopyTest -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayMismatch1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayMismatch2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[expansionOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[defaultNulls]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nestedArrays1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[identity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[orOrdering]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nestedArrays2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[photosArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[starsOfStars]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
        <test-method signature="throwExceptionOnBadSpec()[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="throwExceptionOnBadSpec" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[Defaultr key tuna* is invalid.  * keys can only contain *, and no other characters.]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: Defaultr key tuna* is invalid.  * keys can only contain *, and no other characters.
	at love.disaster.j2j.core.defaultr.OPS.parse(OPS.java:31)
	at love.disaster.j2j.core.defaultr.Key.<init>(Key.java:86)
	at love.disaster.j2j.core.defaultr.MapKey.<init>(MapKey.java:28)
	at love.disaster.j2j.core.defaultr.Key.processSpec(Key.java:53)
	at love.disaster.j2j.core.defaultr.Key.<init>(Key.java:105)
	at love.disaster.j2j.core.defaultr.MapKey.<init>(MapKey.java:28)
	at love.disaster.j2j.core.defaultr.Key.processSpec(Key.java:53)
	at love.disaster.j2j.core.defaultr.Key.parseSpec(Key.java:34)
	at love.disaster.j2j.core.Defaultr.<init>(Defaultr.java:209)
	at love.disaster.j2j.core.DefaultrTest.throwExceptionOnBadSpec(DefaultrTest.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- throwExceptionOnBadSpec -->
        <test-method signature="runDiffyTests(java.lang.String)[pri:0, instance:love.disaster.j2j.core.DefaultrTest@4988d8b8]" started-at="2025-09-08T00:37:41Z" name="runDiffyTests" data-provider="getDiffyTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[topLevelIsArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runDiffyTests -->
      </class> <!-- love.disaster.j2j.core.DefaultrTest -->
      <class name="love.disaster.j2j.core.function.InnerMathTest">
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-object]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@7e95eb37]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3b178806]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4ff37238]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3, null, 5.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(5.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2f66420d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, 2, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3.0, 2.0, 5.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(5.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-double-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3755cb6e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3, null, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-int-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@30afa9e7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, 2, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4a1710a6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6e5b4836]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2d346c73]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@de1de1a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, NaN]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(NaN)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-object]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@c269907]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2dde3a85]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-double-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@73dcbd3b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(5.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@5d9c2f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@7f568053]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(5.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-long-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@78d39aa2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@8f3189e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-NaN-positive-infinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, NaN, Infinity]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(NaN)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-int-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4a8f2668]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-single-long-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-positive-infinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, Infinity]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(Infinity)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-multi-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2dde7c0e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[max-combo-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$max@3f281b3b]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3, null, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3070f5dd]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-Nan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NaN]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(NaN)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@48f16b40]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-positive-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@1b6f4f59]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@1e036c2d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-double-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-long-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-long-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@68449dac]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-negative-Infinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1.0, -Infinity]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(-Infinity)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-positive-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-negative-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-negative-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, null, 5.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-int-list-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, a]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4d78aeac]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-NefInfinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-Infinity]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(Infinity)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@1d616427]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@5af83c43]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 1, 1.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@7340f55b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-double-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2e6221b9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@7a61a40]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-PosInfinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Infinity]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(Infinity)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-single-int-array-extra-arg]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3bea74ec]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, null, 5.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-combo-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3, null, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1.0, 3.0, 2.0, 5.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3c5bc1b3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-NaN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1.0, NaN]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(NaN)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-negative-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-NaN-positive-infinity]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1.0, NaN, -Infinity]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(NaN)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -1, -1.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 1, 1.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abs-single-positive-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$abs@4729e51]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@b2a1a9d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, 2, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[min-multi-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$min@cbd64d4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 3, 2, 5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@5bd2f261]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-string-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@41b98b06]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@1f57d76f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1.0, 2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(-1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1.0, -2.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4211b97d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-long]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(-1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@87a588b]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1.0, 2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@9ff6f26]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1.0, -2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-string]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(-1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@35df0ddf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1.0, 2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(-1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-positive-string-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@25e47ded]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1.0, 2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@1636d27e]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1.0, -2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@53f54073]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1.0, -2.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1.0, -2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-negative-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(-1.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@998c034]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-int]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInt-single-positive-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@316c0f9f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-double]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-single-negative-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1.0, -2.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-long-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6becc519]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-int-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@58a6136a]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesum-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSum@1142f11e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsubtract-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSubtract@4cc94a1f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsubtract-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSubtract@44cc8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsum-combo-intstring-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSum@7c60756f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, -3.0, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsubtract-happy-path]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSubtract@44cc8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesubtract-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSubtract@1211e8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-string-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@51421fc9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-combo-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[10, 5.0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsum-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSum@58125888]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesubtract-wrong-type]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSubtract@1211e8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesubtract-happy-path]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSubtract@1211e8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4.0, 1.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(3.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsubtract-wrong-type]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSubtract@44cc8f2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsum-single-value]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSum@7c60756f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesum-combo-intstring-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSum@1142f11e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, -3.0, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(0.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[doublesum-combo-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$doubleSum@1142f11e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2.0, random, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(3.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsubtract-happy-path]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSubtract@4cc94a1f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toInteger-combo-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toInteger@48b3da8c]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, 2, -3, 4.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, 2, -3, 4])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-positive-double-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6ddae808]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([1, 2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[intsum-combo-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$intSum@7c60756f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2.0, random, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-combo-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, 2, -3, 4.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, 2, -3, 4])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsum-combo-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSum@58125888]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2.0, random, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsum-combo-intstring-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSum@58125888]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, -3.0, 0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Long>: present=true, value=(0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-int-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-double-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[longsubtract-wrong-type]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$longSubtract@4cc94a1f]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[4.0, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toDouble-combo-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toDouble@4e27e1dc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, 2, -3, 4.0]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1.0, 2.0, -3.0, 4.0])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[toLong-single-negative-long-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$toLong@77a0e079]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[-1, -2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<ArrayList>: present=true, value=([-1, -2])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-single-element]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[divAndRound-trailing-precision-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divideAndRound@2f04f6ac]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[3, 5.0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(2.5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[divAndRound-no-precision-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divideAndRound@2f04f6ac]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[0, 5.0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(3.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-combo-valid-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[0.0, 10]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(0.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[divAndRound-single-precision-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divideAndRound@2f04f6ac]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 5.0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(2.5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-combo-invalid-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[10, 0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-combo-string-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[10, 5, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[divAndRound-double-precision-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divideAndRound@2f04f6ac]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[2, 5.0, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(2.5)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[div-single-element-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divide@16d36707]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[divAndRound-no-precision-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.InnerMath$divideAndRound@2f04f6ac]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[0, 4.8, 2]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Double>: present=true, value=(2.0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testNitPicks()[pri:0, instance:love.disaster.j2j.core.function.InnerMathTest@305b7c14]" started-at="2025-09-08T00:37:41Z" name="testNitPicks" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNitPicks -->
      </class> <!-- love.disaster.j2j.core.function.InnerMathTest -->
      <class name="love.disaster.j2j.core.function.ScriptsTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.core.function.ScriptsTest@7dc0f706]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testJavaScriptFunction()[pri:0, instance:love.disaster.j2j.core.function.ScriptsTest@7dc0f706]" started-at="2025-09-08T00:37:41Z" name="testJavaScriptFunction" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJavaScriptFunction -->
        <test-method signature="testModifierWithScripts()[pri:0, instance:love.disaster.j2j.core.function.ScriptsTest@7dc0f706]" started-at="2025-09-08T00:37:41Z" name="testModifierWithScripts" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModifierWithScripts -->
        <test-method signature="testCanLoadScriptEngines()[pri:0, instance:love.disaster.j2j.core.function.ScriptsTest@7dc0f706]" started-at="2025-09-08T00:37:41Z" name="testCanLoadScriptEngines" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCanLoadScriptEngines -->
        <test-method signature="testPythonFunction()[pri:0, instance:love.disaster.j2j.core.function.ScriptsTest@7dc0f706]" started-at="2025-09-08T00:37:41Z" name="testPythonFunction" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPythonFunction -->
      </class> <!-- love.disaster.j2j.core.function.ScriptsTest -->
      <class name="love.disaster.j2j.core.ShiftrTest">
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayExample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[arrayMismatch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bucketToPrefixSoup]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[declaredOutputArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escapeAllTheThings]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[escapeAllTheThings2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[explicitArrayKey]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[filterParallelArrays]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[filterParents1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[filterParents2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[filterParents3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSample]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hashDefault]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[identity]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[inputArrayToPrefix]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[invertMap]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[json-ld-escaping]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[keyref]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[lhsAmpMatch]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[listKeys]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mapToList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mapToList2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mergeParallelArrays1_and-transpose]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mergeParallelArrays2_and-do-not-transpose]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[multiPlacement]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mergeParallelArrays3_and-filter]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[objectToArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[passNullThru]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[passThru]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[prefixDataToArray]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[pollaxman_218_duplicate_speclines_bug]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[prefixSoupToBuckets]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[prefixedData]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[queryMappingXform]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[shiftToTrash]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simpleLHSEscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[simpleRHSEscape]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singlePlacement]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeArrayContents1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[specialKeys]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeArrayContents2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex4_lhs-multipart-rhs-sugar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex3_both-sides-multipart]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex5_at-logic-with-embedded-array-lookups]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex6_rhs-complex-at]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex7_coerce-int-string-conversion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex8_coerce-boolean-string-conversion]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeComplex9_lookup_an_array_index]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeInverseMap1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeInverseMap2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeLHS1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeLHS3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeLHS2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeNestedLookup]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeSimple2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeSimple1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[transposeSimple3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wildcards]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wildcardSelfAndRef]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
        <test-method signature="runTestUnits(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ShiftrTest@41a2befb]" started-at="2025-09-08T00:37:41Z" name="runTestUnits" data-provider="getTestCaseUnits" finished-at="2025-09-08T00:37:41Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wildcardsWithOr]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestUnits -->
      </class> <!-- love.disaster.j2j.core.ShiftrTest -->
      <class name="love.disaster.j2j.core.function.ListsTest">
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$lastElement@61cf16c6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$firstElement@3f861c09]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@3bb98f21]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$firstElement@3f861c09]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-array-missing]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@274e0456]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-empty-invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[java.lang.Object@1e94e97d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@66dca366]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4f0f2c99]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$lastElement@61cf16c6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, 3]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[size-list-empty]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$size@58e96e1a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(0)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[5]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first-empty-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$firstElement@3f861c09]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last-empty-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$lastElement@61cf16c6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@65f08e27]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$lastElement@61cf16c6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@2c02fd7f]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first-array]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$firstElement@3f861c09]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@66730e6d]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[first-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$firstElement@3f861c09]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, 3]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[last-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$lastElement@61cf16c6]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-empty-null]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@6d3ff744]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[size-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Objects$size@58e96e1a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[Ljava.lang.Object;@4112c454]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(4)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-list-missing]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[5, 1, 2, 3]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<?>: present=false, value=(null)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.modifier.function.Function, java.lang.Object, love.disaster.j2j.core.common.Optional)[pri:0, instance:love.disaster.j2j.core.function.ListsTest@65d09a04]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[at-list]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[love.disaster.j2j.core.modifier.function.Lists$elementAt@40e606d8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[1, 2, 3, 1]]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Optional<Integer>: present=true, value=(3)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
      </class> <!-- love.disaster.j2j.core.function.ListsTest -->
      <class name="love.disaster.j2j.core.ModifierTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="setup" finished-at="2025-09-08T00:37:41Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="doSquashNullsTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="doSquashNullsTest" data-provider="getSquashTests" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/squashNullsTests.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doSquashNullsTest -->
        <test-method signature="doSquashNullsTest(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="doSquashNullsTest" data-provider="getSquashTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/deleteDuplicatesTests.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doSquashNullsTest -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayElementAt.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simple.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayObject.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapNullToArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapRuntimeNull.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMap.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/testListOfFunction.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefaultrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefaultrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayElementAt.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simple.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapRuntimeNull.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayObject.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapNullToArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMap.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testDefinrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testDefinrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/testListOfFunction.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefinrTransform -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,@(1,2),pqr)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4d411036]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,efg,pqr)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@620aa4ea]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,'e(,f,)g',pqr)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6d6bc158]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,,@(1,,2),,pqr,,)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@13006998]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,efg,pqr,)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@41beb473]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctionArgParse(java.lang.String, [Ljava.lang.String;)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctionArgParse" data-provider="fnArgParseTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[fn(abc,'e,f,g',pqr)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@352c308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctionArgParse -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/padStringsTest.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/stringsSplitTest.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/stringsTests.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/mathTests.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/arrayTests.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/sizeTests.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/enhancedScriptsTest.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Unable to load JSON map from classPath : /json/modifier/functions/enhancedScriptsTest.json]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Unable to load JSON map from classPath : /json/modifier/functions/enhancedScriptsTest.json
	at love.disaster.j2j.utils.JsonUtilImpl.classpathToMap(JsonUtilImpl.java:210)
	at love.disaster.j2j.utils.JsonUtils.classpathToMap(JsonUtils.java:168)
	at love.disaster.j2j.core.ModifierTest.doTest(ModifierTest.java:131)
	at love.disaster.j2j.core.ModifierTest.testFunctions(ModifierTest.java:183)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: java.lang.IllegalArgumentException: argument "src" is null
	at com.fasterxml.jackson.databind.ObjectMapper._assertNotNull(ObjectMapper.java:4829)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3673)
	at love.disaster.j2j.utils.JsonUtilImpl.jsonToMap(JsonUtilImpl.java:125)
	at love.disaster.j2j.utils.JsonUtilImpl.classpathToMap(JsonUtilImpl.java:207)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/enhancedFunctionsTest.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/labelsLookupTest.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testFunctions(java.lang.String, love.disaster.j2j.core.ModifierTest$TemplatrTestCase)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testFunctions" data-provider="getFunctionTests" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/functions/valueTests.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFunctions -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, *a={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, a*={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={*a={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, *a={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, *a={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={a*={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={*a={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[OVERWRITR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: OVERWRITR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:195)
	at love.disaster.j2j.core.Modifier$Overwritr.<init>(Modifier.java:191)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$1.getTemplatr(ModifierTest.java:39)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={a*={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, a*={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFAULTR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFAULTR RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:223)
	at love.disaster.j2j.core.Modifier$Defaultr.<init>(Modifier.java:219)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$2.getTemplatr(ModifierTest.java:45)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={*a={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={a*={label=^photo.label.thumbnail}, [1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, a*={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, *a={label=^photo.label.thumbnail}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: *a conflicting [1]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testInvalidSpecs(love.disaster.j2j.core.ModifierTest$TemplatrTestCase, java.lang.Object)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testInvalidSpecs" data-provider="getSpecValidationTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DEFINR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{thumbnail={[1]={label=^photo.label.main}, [2]={label=aux photo}, *={label=^photo.label.thumbnail}, a*={label=^photo.label.thumbnail}}}]]>
              </value>
            </param>
          </params>
          <exception class="love.disaster.j2j.core.exception.SpecException">
            <message>
              <![CDATA[DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[love.disaster.j2j.core.exception.SpecException: DEFINER RHS cannot mix int array index and string map key, defined spec for thumbnail contains: a* conflicting [2]
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:118)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:46)
	at love.disaster.j2j.core.modifier.TemplatrSpecBuilder.createSpec(TemplatrSpecBuilder.java:27)
	at love.disaster.j2j.core.common.spec.SpecBuilder.createSpec(SpecBuilder.java:42)
	at love.disaster.j2j.core.modifier.spec.ModifierCompositeSpec.<init>(ModifierCompositeSpec.java:72)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:167)
	at love.disaster.j2j.core.Modifier.<init>(Modifier.java:37)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:209)
	at love.disaster.j2j.core.Modifier$Definr.<init>(Modifier.java:205)
	at love.disaster.j2j.core.ModifierTest$TemplatrTestCase$3.getTemplatr(ModifierTest.java:51)
	at love.disaster.j2j.core.ModifierTest.testInvalidSpecs(ModifierTest.java:159)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:169)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:88)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- love.disaster.j2j.core.exception.SpecException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidSpecs -->
        <test-method signature="testModifierFirstElementArray()[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testModifierFirstElementArray" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModifierFirstElementArray -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteral.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/mapLiteralWithEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayElementAt.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simple.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayObject.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/arrayLiteralWithMissingInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapNullToArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapRuntimeNull.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/complexArrayLookup.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMap.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArray.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleMapNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayNullInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/valueCheckSimpleArrayEmptyInput.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleMapOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/testListOfFunction.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
        <test-method signature="testOverwritrTransform(java.lang.String)[pri:0, instance:love.disaster.j2j.core.ModifierTest@17f7cd29]" started-at="2025-09-08T00:37:41Z" name="testOverwritrTransform" data-provider="getTestCases" finished-at="2025-09-08T00:37:41Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[/json/modifier/simpleArrayOpOverride.json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverwritrTransform -->
      </class> <!-- love.disaster.j2j.core.ModifierTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
